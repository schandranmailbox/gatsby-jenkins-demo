{"version":3,"sources":["../../../../src/steps/source-nodes/before-change-node/menu.js"],"names":["menuItemFetchQueue","PQueue","concurrency","Number","process","env","GATSBY_CONCURRENT_DOWNLOAD","carryoverConcurrencyCount","fetchChildMenuItems","api","remoteNode","wpStore","fetchGraphql","helpers","actions","buildTypeName","additionalNodeIds","menuItems","nodes","length","childItems","state","getState","selectionSet","remoteSchema","nodeQueries","wpUrl","pluginOptions","gatsbyApi","query","map","id","index","join","data","errorContext","remoteChildMenuItemNodes","Object","values","Promise","all","remoteMenuItemNode","push","add","type","processedNode","node","createNode","nodeType","parent","internal","contentDigest","createContentDigest","deleteMenuNodeChildMenuItems","getNodesByType","allMenuItems","schema","typePrefix","allMenuItemsNodesWithThisMenuIdAsAParent","filter","menuItemNode","menu","forEach","deleteNode","menuBeforeChangeNode","actionType","onIdle","onEmpty"],"mappings":"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","sourcesContent":["import PQueue from \"p-queue\"\nimport { processNode } from \"~/steps/source-nodes/create-nodes/process-node\"\nimport { getGatsbyApi } from \"~/utils/get-gatsby-api\"\n\nconst menuItemFetchQueue = new PQueue({\n  concurrency: Number(process.env.GATSBY_CONCURRENT_DOWNLOAD ?? 200),\n  carryoverConcurrencyCount: true,\n})\n\nconst fetchChildMenuItems = (api) => async () => {\n  const {\n    remoteNode,\n    wpStore,\n    fetchGraphql,\n    helpers,\n    actions,\n    buildTypeName,\n    additionalNodeIds,\n  } = api\n\n  if (\n    !remoteNode?.menuItems?.nodes?.length &&\n    !remoteNode?.childItems?.nodes?.length\n  ) {\n    // if we don't have any child menu items to fetch, skip out\n    return\n  }\n\n  const state = wpStore.getState()\n\n  const { selectionSet } = state.remoteSchema.nodeQueries.menuItems\n  const { wpUrl } = state.remoteSchema\n  const { pluginOptions } = state.gatsbyApi\n\n  const query = /* GraphQL */ `\n    fragment MENU_ITEM_FIELDS on MenuItem {\n      ${selectionSet}\n    }\n\n    query {\n      ${(remoteNode.menuItems || remoteNode.childItems).nodes\n        .map(\n          ({ id }, index) =>\n            `id__${index}: menuItem(id: \"${id}\") { ...MENU_ITEM_FIELDS }`\n        )\n        .join(` `)}\n    }`\n\n  const { data } = await fetchGraphql({\n    query,\n    errorContext: `Error occurred while recursively fetching \"MenuItem\" nodes in Menu beforeChangeNode API.`,\n  })\n\n  const remoteChildMenuItemNodes = Object.values(data)\n\n  await Promise.all(\n    remoteChildMenuItemNodes.map(async (remoteMenuItemNode) => {\n      if (remoteMenuItemNode.id) {\n        additionalNodeIds.push(remoteMenuItemNode.id)\n      }\n\n      // recursively fetch child menu items\n      menuItemFetchQueue.add(\n        fetchChildMenuItems({\n          ...api,\n          remoteNode: remoteMenuItemNode,\n        })\n      )\n\n      const type = buildTypeName(`MenuItem`)\n\n      const processedNode = await processNode({\n        node: remoteMenuItemNode,\n        pluginOptions,\n        wpUrl,\n        helpers,\n      })\n\n      await actions.createNode({\n        ...processedNode,\n        nodeType: `MenuItem`,\n        type: `MenuItem`,\n        parent: null,\n        internal: {\n          contentDigest: helpers.createContentDigest(remoteMenuItemNode),\n          type,\n        },\n      })\n    })\n  )\n}\n\nconst deleteMenuNodeChildMenuItems = (node) => {\n  const {\n    pluginOptions,\n    helpers: { getNodesByType, actions },\n  } = getGatsbyApi()\n\n  const allMenuItems = getNodesByType(\n    `${pluginOptions.schema.typePrefix}MenuItem`\n  )\n\n  const allMenuItemsNodesWithThisMenuIdAsAParent = allMenuItems.filter(\n    (menuItemNode) => menuItemNode.menu.node.id === node.id\n  )\n\n  allMenuItemsNodesWithThisMenuIdAsAParent?.forEach((menuItemNode) =>\n    actions.deleteNode({\n      node: menuItemNode,\n    })\n  )\n}\n\nexport const menuBeforeChangeNode = async (api) => {\n  if (!api.remoteNode) {\n    return null\n  }\n\n  if (api.actionType === `DELETE`) {\n    // delete child menu items\n    return deleteMenuNodeChildMenuItems(api.remoteNode)\n  }\n\n  if (api.actionType !== `UPDATE` && api.actionType !== `CREATE`) {\n    // no need to update child MenuItems if we're not updating an existing menu\n    // if we're creating a new menu it will be empty initially.\n    return null\n  }\n\n  const additionalNodeIds = []\n\n  // we delete all child menu items first to take care of a WPGQL bug\n  // where there are invalid menu items that are not properly attached to our menu\n  // because their ID's are incorrect.\\\n  // @todo remove this once this is fixed in WPGQL\n  deleteMenuNodeChildMenuItems(api.remoteNode)\n  menuItemFetchQueue.add(fetchChildMenuItems({ ...api, additionalNodeIds }))\n\n  await menuItemFetchQueue.onIdle()\n  await menuItemFetchQueue.onEmpty()\n\n  return { additionalNodeIds }\n}\n"],"file":"menu.js"}