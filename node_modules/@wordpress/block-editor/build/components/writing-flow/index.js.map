{"version":3,"sources":["@wordpress/block-editor/src/components/writing-flow/index.js"],"names":["SelectionStart","getComputedStyle","node","ownerDocument","defaultView","isNavigationCandidate","element","keyCode","hasModifier","isVertical","UP","DOWN","tagName","getClosestTabbable","target","isReverse","containerElement","onlyVertical","focusableNodes","focus","focusable","find","slice","indexOf","targetRect","getBoundingClientRect","isTabCandidate","i","array","tabbable","isTabbableIndex","nodeRect","left","right","contains","offset","nextNode","selector","select","getSelectedBlockClientId","getMultiSelectedBlocksStartClientId","getMultiSelectedBlocksEndClientId","getPreviousBlockClientId","getNextBlockClientId","getFirstMultiSelectedBlockClientId","getLastMultiSelectedBlockClientId","hasMultiSelection","getBlockOrder","isNavigationMode","isSelectionEnabled","getBlockSelectionStart","isMultiSelecting","getSettings","selectedBlockClientId","selectionStartClientId","selectionEndClientId","blocks","selectionBeforeEndClientId","selectionAfterEndClientId","selectedFirstClientId","selectedLastClientId","firstBlock","lastBlock","blockSelectionStart","keepCaretInsideBlock","WritingFlow","children","container","focusCaptureBeforeRef","focusCaptureAfterRef","multiSelectionContainer","entirelySelected","noCapture","verticalRect","onSelectionStart","multiSelect","selectBlock","setNavigationMode","onMouseDown","event","current","button","clientId","shiftKey","preventDefault","expandSelection","nextSelectionEndClientId","moveSelection","focusedBlockClientId","isTabbableEdge","closestTabbable","onKeyDown","isUp","isDown","isLeft","LEFT","isRight","RIGHT","isTab","TAB","isEscape","ESCAPE","isHorizontal","isNav","isShift","ctrlKey","altKey","metaKey","isNavEdge","isVerticalEdge","isHorizontalEdge","wrapper","tabbables","lastTabbable","isKeyboardEvent","primary","isContentEditable","nativeEvent","defaultPrevented","direction","isReverseDir","getSelection","isCollapsed","onMultiSelectKeyDown","action","className","undefined","position"],"mappings":";;;;;;;;;;;;AASA;;AANA;;AACA;;AAMA;;AAUA;;AASA;;AACA;;AAKA;;AAQA;;AACA;;AA5CA;AACA;AACA;;AAIA;AACA;AACA;;AAwBA;AACA;AACA;AAYO,IAAMA,cAAc,GAAG,6BAAvB;;;AAEP,SAASC,gBAAT,CAA2BC,IAA3B,EAAkC;AACjC,SAAOA,IAAI,CAACC,aAAL,CAAmBC,WAAnB,CAA+BH,gBAA/B,CAAiDC,IAAjD,CAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASG,qBAAT,CAAgCC,OAAhC,EAAyCC,OAAzC,EAAkDC,WAAlD,EAAgE;AACtE,MAAMC,UAAU,GAAGF,OAAO,KAAKG,YAAZ,IAAkBH,OAAO,KAAKI,cAAjD,CADsE,CAGtE;;AACA,MAAKF,UAAU,IAAI,CAAED,WAArB,EAAmC;AAClC,WAAO,IAAP;AACA,GANqE,CAQtE;;;AARsE,MAS9DI,OAT8D,GASlDN,OATkD,CAS9DM,OAT8D;AAUtE,SAAOA,OAAO,KAAK,OAAZ,IAAuBA,OAAO,KAAK,UAA1C;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASC,kBAAT,CACNC,MADM,EAENC,SAFM,EAGNC,gBAHM,EAINC,YAJM,EAKL;AACD;AACA;AACA,MAAIC,cAAc,GAAGC,WAAMC,SAAN,CAAgBC,IAAhB,CAAsBL,gBAAtB,CAArB;;AAEA,MAAKD,SAAL,EAAiB;AAChBG,IAAAA,cAAc,GAAG,qBAASA,cAAT,CAAjB;AACA,GAPA,CASD;AACA;AACA;;;AACAA,EAAAA,cAAc,GAAGA,cAAc,CAACI,KAAf,CAChBJ,cAAc,CAACK,OAAf,CAAwBT,MAAxB,IAAmC,CADnB,CAAjB;AAIA,MAAIU,UAAJ;;AAEA,MAAKP,YAAL,EAAoB;AACnBO,IAAAA,UAAU,GAAGV,MAAM,CAACW,qBAAP,EAAb;AACA;;AAED,WAASC,cAAT,CAAyBxB,IAAzB,EAA+ByB,CAA/B,EAAkCC,KAAlC,EAA0C;AACzC;AACA,QAAK,CAAET,WAAMU,QAAN,CAAeC,eAAf,CAAgC5B,IAAhC,CAAP,EAAgD;AAC/C,aAAO,KAAP;AACA;;AAED,QAAKe,YAAL,EAAoB;AACnB,UAAMc,QAAQ,GAAG7B,IAAI,CAACuB,qBAAL,EAAjB;;AAEA,UACCM,QAAQ,CAACC,IAAT,IAAiBR,UAAU,CAACS,KAA5B,IACAF,QAAQ,CAACE,KAAT,IAAkBT,UAAU,CAACQ,IAF9B,EAGE;AACD,eAAO,KAAP;AACA;AACD,KAfwC,CAiBzC;;;AACA,QAAK,sBAAa9B,IAAb,CAAL,EAA2B;AAC1B,aAAO,IAAP;AACA,KApBwC,CAsBzC;;;AACA,QAAK,CAAE,4BAAkBA,IAAlB,CAAP,EAAkC;AACjC,aAAO,KAAP;AACA,KAzBwC,CA2BzC;AACA;;;AACA,QAAK,iCAAuBA,IAAvB,CAAL,EAAqC;AACpC,aAAO,IAAP;AACA,KA/BwC,CAiCzC;AACA;;;AACA,QAAKA,IAAI,CAACgC,QAAL,CAAepB,MAAf,CAAL,EAA+B;AAC9B,aAAO,KAAP;AACA,KArCwC,CAuCzC;AACA;;;AACA,SACC,IAAIqB,MAAM,GAAG,CAAb,EAAgBC,QADjB,EAEGA,QAAQ,GAAGR,KAAK,CAAED,CAAC,GAAGQ,MAAN,CAFnB,EAGCA,MAAM,EAHP,EAIE;AACD;AACA,UAAK,CAAEjC,IAAI,CAACgC,QAAL,CAAeE,QAAf,CAAP,EAAmC;AAClC;AACA,OAJA,CAMD;AACA;AACA;;;AACA,UAAKV,cAAc,CAAEU,QAAF,EAAYT,CAAC,GAAGQ,MAAhB,EAAwBP,KAAxB,CAAnB,EAAqD;AACpD,eAAO,KAAP;AACA;AACD;;AAED,WAAO,IAAP;AACA;;AAED,SAAO,kBAAMV,cAAN,EAAsBQ,cAAtB,CAAP;AACA;;AAED,SAASW,QAAT,CAAmBC,MAAnB,EAA4B;AAAA,gBAgBvBA,MAAM,CAAE,mBAAF,CAhBiB;AAAA,MAE1BC,wBAF0B,WAE1BA,wBAF0B;AAAA,MAG1BC,mCAH0B,WAG1BA,mCAH0B;AAAA,MAI1BC,iCAJ0B,WAI1BA,iCAJ0B;AAAA,MAK1BC,wBAL0B,WAK1BA,wBAL0B;AAAA,MAM1BC,oBAN0B,WAM1BA,oBAN0B;AAAA,MAO1BC,kCAP0B,WAO1BA,kCAP0B;AAAA,MAQ1BC,iCAR0B,WAQ1BA,iCAR0B;AAAA,MAS1BC,iBAT0B,WAS1BA,iBAT0B;AAAA,MAU1BC,aAV0B,WAU1BA,aAV0B;AAAA,MAW1BC,gBAX0B,WAW1BA,gBAX0B;AAAA,MAY1BC,kBAZ0B,WAY1BA,kBAZ0B;AAAA,MAa1BC,sBAb0B,WAa1BA,sBAb0B;AAAA,MAc1BC,gBAd0B,WAc1BA,gBAd0B;AAAA,MAe1BC,WAf0B,WAe1BA,WAf0B;;AAkB3B,MAAMC,qBAAqB,GAAGd,wBAAwB,EAAtD;AACA,MAAMe,sBAAsB,GAAGd,mCAAmC,EAAlE;AACA,MAAMe,oBAAoB,GAAGd,iCAAiC,EAA9D;AACA,MAAMe,MAAM,GAAGT,aAAa,EAA5B;AAEA,SAAO;AACNM,IAAAA,qBAAqB,EAArBA,qBADM;AAENC,IAAAA,sBAAsB,EAAtBA,sBAFM;AAGNG,IAAAA,0BAA0B,EAAEf,wBAAwB,CACnDa,oBAAoB,IAAIF,qBAD2B,CAH9C;AAMNK,IAAAA,yBAAyB,EAAEf,oBAAoB,CAC9CY,oBAAoB,IAAIF,qBADsB,CANzC;AASNM,IAAAA,qBAAqB,EAAEf,kCAAkC,EATnD;AAUNgB,IAAAA,oBAAoB,EAAEf,iCAAiC,EAVjD;AAWNC,IAAAA,iBAAiB,EAAEA,iBAAiB,EAX9B;AAYNe,IAAAA,UAAU,EAAE,mBAAOL,MAAP,CAZN;AAaNM,IAAAA,SAAS,EAAE,kBAAMN,MAAN,CAbL;AAcNR,IAAAA,gBAAgB,EAAEA,gBAAgB,EAd5B;AAeNC,IAAAA,kBAAkB,EAAEA,kBAAkB,EAfhC;AAgBNc,IAAAA,mBAAmB,EAAEb,sBAAsB,EAhBrC;AAiBNC,IAAAA,gBAAgB,EAAEA,gBAAgB,EAjB5B;AAkBNa,IAAAA,oBAAoB,EAAEZ,WAAW,GAAGY;AAlB9B,GAAP;AAoBA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACe,SAASC,WAAT,OAAqC;AAAA,MAAbC,QAAa,QAAbA,QAAa;AACnD,MAAMC,SAAS,GAAG,sBAAlB;AACA,MAAMC,qBAAqB,GAAG,sBAA9B;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;AACA,MAAMC,uBAAuB,GAAG,sBAAhC;AAEA,MAAMC,gBAAgB,GAAG,sBAAzB,CANmD,CAQnD;AACA;;AACA,MAAMC,SAAS,GAAG,sBAAlB,CAVmD,CAYnD;AACA;AACA;;AACA,MAAMC,YAAY,GAAG,sBAArB;AAEA,MAAMC,gBAAgB,GAAG,gCAAmBP,SAAnB,CAAzB;;AAjBmD,mBAkC/C,qBAAW9B,QAAX,EAAqB,EAArB,CAlC+C;AAAA,MAoBlDgB,qBApBkD,cAoBlDA,qBApBkD;AAAA,MAqBlDC,sBArBkD,cAqBlDA,sBArBkD;AAAA,MAsBlDG,0BAtBkD,cAsBlDA,0BAtBkD;AAAA,MAuBlDC,yBAvBkD,cAuBlDA,yBAvBkD;AAAA,MAwBlDC,qBAxBkD,cAwBlDA,qBAxBkD;AAAA,MAyBlDC,oBAzBkD,cAyBlDA,oBAzBkD;AAAA,MA0BlDd,iBA1BkD,cA0BlDA,iBA1BkD;AAAA,MA2BlDe,UA3BkD,cA2BlDA,UA3BkD;AAAA,MA4BlDC,SA5BkD,cA4BlDA,SA5BkD;AAAA,MA6BlDd,gBA7BkD,cA6BlDA,gBA7BkD;AAAA,MA8BlDC,kBA9BkD,cA8BlDA,kBA9BkD;AAAA,MA+BlDc,mBA/BkD,cA+BlDA,mBA/BkD;AAAA,MAgClDZ,gBAhCkD,cAgClDA,gBAhCkD;AAAA,MAiClDa,oBAjCkD,cAiClDA,oBAjCkD;;AAAA,qBAmCK,uBACvD,mBADuD,CAnCL;AAAA,MAmC3CW,WAnC2C,gBAmC3CA,WAnC2C;AAAA,MAmC9BC,WAnC8B,gBAmC9BA,WAnC8B;AAAA,MAmCjBC,iBAnCiB,gBAmCjBA,iBAnCiB;;AAuCnD,WAASC,WAAT,CAAsBC,KAAtB,EAA8B;AAC7BN,IAAAA,YAAY,CAACO,OAAb,GAAuB,IAAvB;AAD6B,QAGrB7E,aAHqB,GAGH4E,KAAK,CAACjE,MAHH,CAGrBX,aAHqB,EAK7B;;AACA,QACC6C,gBAAgB,IAChBK,qBADA,IAEA,6BACC,2BAAiBA,qBAAjB,EAAwClD,aAAxC,CADD,EAEC4E,KAAK,CAACjE,MAFP,CAHD,EAOE;AACD+D,MAAAA,iBAAiB,CAAE,KAAF,CAAjB;AACA,KAf4B,CAiB7B;;;AACA,QACC5B,kBAAkB,IAClB;AACA;AACA8B,IAAAA,KAAK,CAACE,MAAN,KAAiB,CAJlB,EAKE;AACD,UAAMC,QAAQ,GAAG,4BAAkBH,KAAK,CAACjE,MAAxB,CAAjB;;AAEA,UAAKoE,QAAL,EAAgB;AACf,YAAKH,KAAK,CAACI,QAAX,EAAsB;AACrB,cAAKpB,mBAAmB,KAAKmB,QAA7B,EAAwC;AACvCP,YAAAA,WAAW,CAAEZ,mBAAF,EAAuBmB,QAAvB,CAAX;AACAH,YAAAA,KAAK,CAACK,cAAN;AACA,WAJoB,CAKrB;AACA;AACA;AACA;AACA;;AACA,SAVD,MAUO,IAAKtC,iBAAL,EAAyB;AAC/B8B,UAAAA,WAAW,CAAEM,QAAF,CAAX;AACA;AACD;AACD;AACD;;AAED,WAASG,eAAT,CAA0BtE,SAA1B,EAAsC;AACrC,QAAMuE,wBAAwB,GAAGvE,SAAS,GACvC0C,0BADuC,GAEvCC,yBAFH;;AAIA,QAAK4B,wBAAL,EAAgC;AAC/BX,MAAAA,WAAW,CACVrB,sBAAsB,IAAID,qBADhB,EAEViC,wBAFU,CAAX;AAIA;AACD;;AAED,WAASC,aAAT,CAAwBxE,SAAxB,EAAoC;AACnC,QAAMyE,oBAAoB,GAAGzE,SAAS,GACnC4C,qBADmC,GAEnCC,oBAFH;;AAIA,QAAK4B,oBAAL,EAA4B;AAC3BZ,MAAAA,WAAW,CAAEY,oBAAF,CAAX;AACA;AACD;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACC,WAASC,cAAT,CAAyB3E,MAAzB,EAAiCC,SAAjC,EAA6C;AAC5C,QAAM2E,eAAe,GAAG7E,kBAAkB,CACzCC,MADyC,EAEzCC,SAFyC,EAGzCoD,SAAS,CAACa,OAH+B,CAA1C;AAKA,WAAO,CAAEU,eAAF,IAAqB,CAAE,yBAAe5E,MAAf,EAAuB4E,eAAvB,CAA9B;AACA;;AAED,WAASC,SAAT,CAAoBZ,KAApB,EAA4B;AAAA,QACnBxE,OADmB,GACCwE,KADD,CACnBxE,OADmB;AAAA,QACVO,MADU,GACCiE,KADD,CACVjE,MADU,EAG3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAK,CAAEqD,SAAS,CAACa,OAAV,CAAkB9C,QAAlB,CAA4BpB,MAA5B,CAAP,EAA8C;AAC7C;AACA;;AAED,QAAM8E,IAAI,GAAGrF,OAAO,KAAKG,YAAzB;AACA,QAAMmF,MAAM,GAAGtF,OAAO,KAAKI,cAA3B;AACA,QAAMmF,MAAM,GAAGvF,OAAO,KAAKwF,cAA3B;AACA,QAAMC,OAAO,GAAGzF,OAAO,KAAK0F,eAA5B;AACA,QAAMC,KAAK,GAAG3F,OAAO,KAAK4F,aAA1B;AACA,QAAMC,QAAQ,GAAG7F,OAAO,KAAK8F,gBAA7B;AACA,QAAMtF,SAAS,GAAG6E,IAAI,IAAIE,MAA1B;AACA,QAAMQ,YAAY,GAAGR,MAAM,IAAIE,OAA/B;AACA,QAAMvF,UAAU,GAAGmF,IAAI,IAAIC,MAA3B;AACA,QAAMU,KAAK,GAAGD,YAAY,IAAI7F,UAA9B;AACA,QAAM+F,OAAO,GAAGzB,KAAK,CAACI,QAAtB;AACA,QAAM3E,WAAW,GAChBgG,OAAO,IAAIzB,KAAK,CAAC0B,OAAjB,IAA4B1B,KAAK,CAAC2B,MAAlC,IAA4C3B,KAAK,CAAC4B,OADnD;AAEA,QAAMC,SAAS,GAAGnG,UAAU,GAAGoG,mBAAH,GAAoBC,qBAAhD;AA5B2B,QA6BnB3G,aA7BmB,GA6BDgE,SAAS,CAACa,OA7BT,CA6BnB7E,aA7BmB;AAAA,QA8BnBC,WA9BmB,GA8BHD,aA9BG,CA8BnBC,WA9BmB,EAgC3B;AACA;AACA;AACA;AACA;AACA;;AACA,QAAKiD,qBAAL,EAA6B;AAC5B,UAAK6C,KAAL,EAAa;AACZ,YAAMa,OAAO,GAAG,2BACf1D,qBADe,EAEflD,aAFe,CAAhB;;AAKA,YAAKqG,OAAL,EAAe;AACd,cAAK1F,MAAM,KAAKiG,OAAhB,EAA0B;AACzB;AACA;AACA;AACAvC,YAAAA,SAAS,CAACQ,OAAV,GAAoB,IAApB;AACAZ,YAAAA,qBAAqB,CAACY,OAAtB,CAA8B7D,KAA9B;AACA;AACA;AACD,SATD,MASO;AACN,cAAM6F,SAAS,GAAG7F,WAAMU,QAAN,CAAeR,IAAf,CAAqB0F,OAArB,CAAlB;;AACA,cAAME,YAAY,GAAG,kBAAMD,SAAN,KAAqBD,OAA1C;;AAEA,cAAKjG,MAAM,KAAKmG,YAAhB,EAA+B;AAC9B;AACAzC,YAAAA,SAAS,CAACQ,OAAV,GAAoB,IAApB;AACAX,YAAAA,oBAAoB,CAACW,OAArB,CAA6B7D,KAA7B;AACA;AACA;AACD;AACD,OA1BD,MA0BO,IAAKiF,QAAL,EAAgB;AACtBvB,QAAAA,iBAAiB,CAAE,IAAF,CAAjB;AACA;AACD,KApE0B,CAsE3B;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAK,CAAEpE,UAAP,EAAoB;AACnBgE,MAAAA,YAAY,CAACO,OAAb,GAAuB,IAAvB;AACA,KAFD,MAEO,IAAK,CAAEP,YAAY,CAACO,OAApB,EAA8B;AACpCP,MAAAA,YAAY,CAACO,OAAb,GAAuB,2BAAkB5E,WAAlB,CAAvB;AACA,KAhF0B,CAkF3B;AACA;AACA;AACA;;;AACA,QAAK,CAAEmG,KAAP,EAAe;AACd;AACA,UAAKW,0BAAgBC,OAAhB,CAAyBpC,KAAzB,CAAL,EAAwC;AACvCR,QAAAA,gBAAgB,CAACS,OAAjB,GAA2B,6BAAoBlE,MAApB,CAA3B;AACA;;AAED,UAAKoG,0BAAgBC,OAAhB,CAAyBpC,KAAzB,EAAgC,GAAhC,CAAL,EAA6C;AAC5C;AACA;AACA;AACA;AACA,YACCjE,MAAM,CAACsG,iBAAP,GACG7C,gBAAgB,CAACS,OADpB,GAEG,6BAAoBlE,MAApB,CAHJ,EAIE;AACD6D,UAAAA,WAAW,CAAEd,UAAF,EAAcC,SAAd,CAAX;AACAiB,UAAAA,KAAK,CAACK,cAAN;AACA,SAZ2C,CAc5C;AACA;;;AACAb,QAAAA,gBAAgB,CAACS,OAAjB,GAA2B,IAA3B;AACA;;AAED;AACA,KAhH0B,CAkH3B;AACA;;;AACA,QAAKD,KAAK,CAACsC,WAAN,CAAkBC,gBAAvB,EAA0C;AACzC;AACA,KAtH0B,CAwH3B;AACA;;;AACA,QAAK,CAAEjH,qBAAqB,CAAES,MAAF,EAAUP,OAAV,EAAmBC,WAAnB,CAA5B,EAA+D;AAC9D;AACA,KA5H0B,CA8H3B;AACA;;;AA/H2B,4BAgILP,gBAAgB,CAAEa,MAAF,CAhIX;AAAA,QAgInByG,SAhImB,qBAgInBA,SAhImB;;AAiI3B,QAAMC,YAAY,GAAGD,SAAS,KAAK,KAAd,GAAsB,CAAExG,SAAxB,GAAoCA,SAAzD;;AAEA,QAAKyF,OAAL,EAAe;AACd,WACC;AACA,OAAIzF,SAAS,IAAI0C,0BAAf,IACC,CAAE1C,SAAF,IAAe2C,yBADlB,KAEA+B,cAAc,CAAE3E,MAAF,EAAUC,SAAV,CAFd,IAGA6F,SAAS,CAAE9F,MAAF,EAAUC,SAAV,CALV,EAME;AACD;AACA;AACAsE,QAAAA,eAAe,CAAEtE,SAAF,CAAf;AACAgE,QAAAA,KAAK,CAACK,cAAN;AACA;AACD,KAbD,MAaO,IACN3E,UAAU,IACV,yBAAgBK,MAAhB,EAAwBC,SAAxB,CADA,IAEA,CAAEiD,oBAHI,EAIL;AACD,UAAM0B,eAAe,GAAG7E,kBAAkB,CACzCC,MADyC,EAEzCC,SAFyC,EAGzCoD,SAAS,CAACa,OAH+B,EAIzC,IAJyC,CAA1C;;AAOA,UAAKU,eAAL,EAAuB;AACtB,2CACCA,eADD,EAEC3E,SAFD,EAGC0D,YAAY,CAACO,OAHd;AAKAD,QAAAA,KAAK,CAACK,cAAN;AACA;AACD,KApBM,MAoBA,IACNkB,YAAY,IACZlG,WAAW,CAACqH,YAAZ,GAA2BC,WAD3B,IAEA,2BAAkB5G,MAAlB,EAA0B0G,YAA1B,CAFA,IAGA,CAAExD,oBAJI,EAKL;AACD,UAAM0B,gBAAe,GAAG7E,kBAAkB,CACzCC,MADyC,EAEzC0G,YAFyC,EAGzCrD,SAAS,CAACa,OAH+B,CAA1C;;AAKA,2CAA4BU,gBAA5B,EAA6C8B,YAA7C;AACAzC,MAAAA,KAAK,CAACK,cAAN;AACA;AACD;;AAED,WAASuC,oBAAT,CAA+B5C,KAA/B,EAAuC;AAAA,QAC9BxE,OAD8B,GACRwE,KADQ,CAC9BxE,OAD8B;AAAA,QACrB4E,QADqB,GACRJ,KADQ,CACrBI,QADqB;AAEtC,QAAMS,IAAI,GAAGrF,OAAO,KAAKG,YAAzB;AACA,QAAMmF,MAAM,GAAGtF,OAAO,KAAKI,cAA3B;AACA,QAAMmF,MAAM,GAAGvF,OAAO,KAAKwF,cAA3B;AACA,QAAMC,OAAO,GAAGzF,OAAO,KAAK0F,eAA5B;AACA,QAAMlF,SAAS,GAAG6E,IAAI,IAAIE,MAA1B;AACA,QAAMQ,YAAY,GAAGR,MAAM,IAAIE,OAA/B;AACA,QAAMvF,UAAU,GAAGmF,IAAI,IAAIC,MAA3B;AACA,QAAMU,KAAK,GAAGD,YAAY,IAAI7F,UAA9B;;AAEA,QAAKF,OAAO,KAAK4F,aAAjB,EAAuB;AACtB;AACA;AACA;AACA3B,MAAAA,SAAS,CAACQ,OAAV,GAAoB,IAApB;;AAEA,UAAKG,QAAL,EAAgB;AACff,QAAAA,qBAAqB,CAACY,OAAtB,CAA8B7D,KAA9B;AACA,OAFD,MAEO;AACNkD,QAAAA,oBAAoB,CAACW,OAArB,CAA6B7D,KAA7B;AACA;AACD,KAXD,MAWO,IAAKoF,KAAL,EAAa;AACnB,UAAMqB,MAAM,GAAGzC,QAAQ,GAAGE,eAAH,GAAqBE,aAA5C;AACAqC,MAAAA,MAAM,CAAE7G,SAAF,CAAN;AACAgE,MAAAA,KAAK,CAACK,cAAN;AACA;AACD;;AAED,0BAAW,YAAM;AAChB,QAAKtC,iBAAiB,IAAI,CAAEK,gBAA5B,EAA+C;AAC9CmB,MAAAA,uBAAuB,CAACU,OAAxB,CAAgC7D,KAAhC;AACA;AACD,GAJD,EAIG,CAAE2B,iBAAF,EAAqBK,gBAArB,CAJH;AAMA,MAAM0E,SAAS,GAAG,yBAAY,2BAAZ,EAAyC;AAC1D,wBAAoB7E;AADsC,GAAzC,CAAlB,CArVmD,CAyVnD;AACA;;AACA;;AACA,SACC,4BAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAG0B;AAAjC,KACC,4BAAC,qBAAD;AACC,IAAA,GAAG,EAAGN,qBADP;AAEC,IAAA,gBAAgB,EAAGf,qBAFpB;AAGC,IAAA,YAAY,EAAGc,SAHhB;AAIC,IAAA,SAAS,EAAGK,SAJb;AAKC,IAAA,iBAAiB,EAAG1B,iBALrB;AAMC,IAAA,uBAAuB,EAAGwB;AAN3B,IADD,EASC;AACC,IAAA,GAAG,EAAGA,uBADP;AAEC,IAAA,QAAQ,EAAGxB,iBAAiB,GAAG,GAAH,GAASgF,SAFtC;AAGC,kBACChF,iBAAiB,GACd,cAAI,0BAAJ,CADc,GAEdgF,SANL,CAQC;AACA;AATD;AAUC,IAAA,KAAK,EAAG;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAVT;AAWC,IAAA,SAAS,EAAGJ;AAXb,IATD,EAsBC;AACC,IAAA,GAAG,EAAGxD,SADP;AAEC,IAAA,SAAS,EAAG0D,SAFb;AAGC,IAAA,SAAS,EAAGlC,SAHb;AAIC,IAAA,WAAW,EAAGb;AAJf,KAMGZ,QANH,CAtBD,EA8BC,4BAAC,qBAAD;AACC,IAAA,GAAG,EAAGG,oBADP;AAEC,IAAA,gBAAgB,EAAGhB,qBAFpB;AAGC,IAAA,YAAY,EAAGc,SAHhB;AAIC,IAAA,SAAS,EAAGK,SAJb;AAKC,IAAA,iBAAiB,EAAG1B,iBALrB;AAMC,IAAA,uBAAuB,EAAGwB,uBAN3B;AAOC,IAAA,SAAS;AAPV,IA9BD,CADD;AA0CA;AACA","sourcesContent":["/**\n * External dependencies\n */\nimport { find, reverse, first, last } from 'lodash';\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { useRef, useEffect, createContext } from '@wordpress/element';\nimport {\n\tcomputeCaretRect,\n\tfocus,\n\tisHorizontalEdge,\n\tisTextField,\n\tisVerticalEdge,\n\tplaceCaretAtHorizontalEdge,\n\tplaceCaretAtVerticalEdge,\n\tisEntirelySelected,\n} from '@wordpress/dom';\nimport {\n\tUP,\n\tDOWN,\n\tLEFT,\n\tRIGHT,\n\tTAB,\n\tisKeyboardEvent,\n\tESCAPE,\n} from '@wordpress/keycodes';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport {\n\tisBlockFocusStop,\n\tisInSameBlock,\n\thasInnerBlocksContext,\n\tisInsideRootBlock,\n\tgetBlockDOMNode,\n\tgetBlockClientId,\n} from '../../utils/dom';\nimport FocusCapture from './focus-capture';\nimport useMultiSelection from './use-multi-selection';\n\nexport const SelectionStart = createContext();\n\nfunction getComputedStyle( node ) {\n\treturn node.ownerDocument.defaultView.getComputedStyle( node );\n}\n\n/**\n * Returns true if the element should consider edge navigation upon a keyboard\n * event of the given directional key code, or false otherwise.\n *\n * @param {Element} element     HTML element to test.\n * @param {number}  keyCode     KeyboardEvent keyCode to test.\n * @param {boolean} hasModifier Whether a modifier is pressed.\n *\n * @return {boolean} Whether element should consider edge navigation.\n */\nexport function isNavigationCandidate( element, keyCode, hasModifier ) {\n\tconst isVertical = keyCode === UP || keyCode === DOWN;\n\n\t// Currently, all elements support unmodified vertical navigation.\n\tif ( isVertical && ! hasModifier ) {\n\t\treturn true;\n\t}\n\n\t// Native inputs should not navigate horizontally.\n\tconst { tagName } = element;\n\treturn tagName !== 'INPUT' && tagName !== 'TEXTAREA';\n}\n\n/**\n * Returns the optimal tab target from the given focused element in the\n * desired direction. A preference is made toward text fields, falling back\n * to the block focus stop if no other candidates exist for the block.\n *\n * @param {Element} target           Currently focused text field.\n * @param {boolean} isReverse        True if considering as the first field.\n * @param {Element} containerElement Element containing all blocks.\n * @param {boolean} onlyVertical     Whether to only consider tabbable elements\n *                                   that are visually above or under the\n *                                   target.\n *\n * @return {?Element} Optimal tab target, if one exists.\n */\nexport function getClosestTabbable(\n\ttarget,\n\tisReverse,\n\tcontainerElement,\n\tonlyVertical\n) {\n\t// Since the current focus target is not guaranteed to be a text field,\n\t// find all focusables. Tabbability is considered later.\n\tlet focusableNodes = focus.focusable.find( containerElement );\n\n\tif ( isReverse ) {\n\t\tfocusableNodes = reverse( focusableNodes );\n\t}\n\n\t// Consider as candidates those focusables after the current target.\n\t// It's assumed this can only be reached if the target is focusable\n\t// (on its keydown event), so no need to verify it exists in the set.\n\tfocusableNodes = focusableNodes.slice(\n\t\tfocusableNodes.indexOf( target ) + 1\n\t);\n\n\tlet targetRect;\n\n\tif ( onlyVertical ) {\n\t\ttargetRect = target.getBoundingClientRect();\n\t}\n\n\tfunction isTabCandidate( node, i, array ) {\n\t\t// Not a candidate if the node is not tabbable.\n\t\tif ( ! focus.tabbable.isTabbableIndex( node ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( onlyVertical ) {\n\t\t\tconst nodeRect = node.getBoundingClientRect();\n\n\t\t\tif (\n\t\t\t\tnodeRect.left >= targetRect.right ||\n\t\t\t\tnodeRect.right <= targetRect.left\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Prefer text fields...\n\t\tif ( isTextField( node ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// ...but settle for block focus stop.\n\t\tif ( ! isBlockFocusStop( node ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If element contains inner blocks, stop immediately at its focus\n\t\t// wrapper.\n\t\tif ( hasInnerBlocksContext( node ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If navigating out of a block (in reverse), don't consider its\n\t\t// block focus stop.\n\t\tif ( node.contains( target ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// In case of block focus stop, check to see if there's a better\n\t\t// text field candidate within.\n\t\tfor (\n\t\t\tlet offset = 1, nextNode;\n\t\t\t( nextNode = array[ i + offset ] );\n\t\t\toffset++\n\t\t) {\n\t\t\t// Abort if no longer testing descendents of focus stop.\n\t\t\tif ( ! node.contains( nextNode ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Apply same tests by recursion. This is important to consider\n\t\t\t// nestable blocks where we don't want to settle for the inner\n\t\t\t// block focus stop.\n\t\t\tif ( isTabCandidate( nextNode, i + offset, array ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn find( focusableNodes, isTabCandidate );\n}\n\nfunction selector( select ) {\n\tconst {\n\t\tgetSelectedBlockClientId,\n\t\tgetMultiSelectedBlocksStartClientId,\n\t\tgetMultiSelectedBlocksEndClientId,\n\t\tgetPreviousBlockClientId,\n\t\tgetNextBlockClientId,\n\t\tgetFirstMultiSelectedBlockClientId,\n\t\tgetLastMultiSelectedBlockClientId,\n\t\thasMultiSelection,\n\t\tgetBlockOrder,\n\t\tisNavigationMode,\n\t\tisSelectionEnabled,\n\t\tgetBlockSelectionStart,\n\t\tisMultiSelecting,\n\t\tgetSettings,\n\t} = select( 'core/block-editor' );\n\n\tconst selectedBlockClientId = getSelectedBlockClientId();\n\tconst selectionStartClientId = getMultiSelectedBlocksStartClientId();\n\tconst selectionEndClientId = getMultiSelectedBlocksEndClientId();\n\tconst blocks = getBlockOrder();\n\n\treturn {\n\t\tselectedBlockClientId,\n\t\tselectionStartClientId,\n\t\tselectionBeforeEndClientId: getPreviousBlockClientId(\n\t\t\tselectionEndClientId || selectedBlockClientId\n\t\t),\n\t\tselectionAfterEndClientId: getNextBlockClientId(\n\t\t\tselectionEndClientId || selectedBlockClientId\n\t\t),\n\t\tselectedFirstClientId: getFirstMultiSelectedBlockClientId(),\n\t\tselectedLastClientId: getLastMultiSelectedBlockClientId(),\n\t\thasMultiSelection: hasMultiSelection(),\n\t\tfirstBlock: first( blocks ),\n\t\tlastBlock: last( blocks ),\n\t\tisNavigationMode: isNavigationMode(),\n\t\tisSelectionEnabled: isSelectionEnabled(),\n\t\tblockSelectionStart: getBlockSelectionStart(),\n\t\tisMultiSelecting: isMultiSelecting(),\n\t\tkeepCaretInsideBlock: getSettings().keepCaretInsideBlock,\n\t};\n}\n\n/**\n * Handles selection and navigation across blocks. This component should be\n * wrapped around BlockList.\n *\n * @param {Object}    props          Component properties.\n * @param {WPElement} props.children Children to be rendered.\n */\nexport default function WritingFlow( { children } ) {\n\tconst container = useRef();\n\tconst focusCaptureBeforeRef = useRef();\n\tconst focusCaptureAfterRef = useRef();\n\tconst multiSelectionContainer = useRef();\n\n\tconst entirelySelected = useRef();\n\n\t// Reference that holds the a flag for enabling or disabling\n\t// capturing on the focus capture elements.\n\tconst noCapture = useRef();\n\n\t// Here a DOMRect is stored while moving the caret vertically so vertical\n\t// position of the start position can be restored. This is to recreate\n\t// browser behaviour across blocks.\n\tconst verticalRect = useRef();\n\n\tconst onSelectionStart = useMultiSelection( container );\n\n\tconst {\n\t\tselectedBlockClientId,\n\t\tselectionStartClientId,\n\t\tselectionBeforeEndClientId,\n\t\tselectionAfterEndClientId,\n\t\tselectedFirstClientId,\n\t\tselectedLastClientId,\n\t\thasMultiSelection,\n\t\tfirstBlock,\n\t\tlastBlock,\n\t\tisNavigationMode,\n\t\tisSelectionEnabled,\n\t\tblockSelectionStart,\n\t\tisMultiSelecting,\n\t\tkeepCaretInsideBlock,\n\t} = useSelect( selector, [] );\n\tconst { multiSelect, selectBlock, setNavigationMode } = useDispatch(\n\t\t'core/block-editor'\n\t);\n\n\tfunction onMouseDown( event ) {\n\t\tverticalRect.current = null;\n\n\t\tconst { ownerDocument } = event.target;\n\n\t\t// Clicking inside a selected block should exit navigation mode and block moving mode.\n\t\tif (\n\t\t\tisNavigationMode &&\n\t\t\tselectedBlockClientId &&\n\t\t\tisInsideRootBlock(\n\t\t\t\tgetBlockDOMNode( selectedBlockClientId, ownerDocument ),\n\t\t\t\tevent.target\n\t\t\t)\n\t\t) {\n\t\t\tsetNavigationMode( false );\n\t\t}\n\n\t\t// Multi-select blocks when Shift+clicking.\n\t\tif (\n\t\t\tisSelectionEnabled &&\n\t\t\t// The main button.\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n\t\t\tevent.button === 0\n\t\t) {\n\t\t\tconst clientId = getBlockClientId( event.target );\n\n\t\t\tif ( clientId ) {\n\t\t\t\tif ( event.shiftKey ) {\n\t\t\t\t\tif ( blockSelectionStart !== clientId ) {\n\t\t\t\t\t\tmultiSelect( blockSelectionStart, clientId );\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\t// Allow user to escape out of a multi-selection to a singular\n\t\t\t\t\t// selection of a block via click. This is handled here since\n\t\t\t\t\t// focus handling excludes blocks when there is multiselection,\n\t\t\t\t\t// as focus can be incurred by starting a multiselection (focus\n\t\t\t\t\t// moved to first block's multi-controls).\n\t\t\t\t} else if ( hasMultiSelection ) {\n\t\t\t\t\tselectBlock( clientId );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction expandSelection( isReverse ) {\n\t\tconst nextSelectionEndClientId = isReverse\n\t\t\t? selectionBeforeEndClientId\n\t\t\t: selectionAfterEndClientId;\n\n\t\tif ( nextSelectionEndClientId ) {\n\t\t\tmultiSelect(\n\t\t\t\tselectionStartClientId || selectedBlockClientId,\n\t\t\t\tnextSelectionEndClientId\n\t\t\t);\n\t\t}\n\t}\n\n\tfunction moveSelection( isReverse ) {\n\t\tconst focusedBlockClientId = isReverse\n\t\t\t? selectedFirstClientId\n\t\t\t: selectedLastClientId;\n\n\t\tif ( focusedBlockClientId ) {\n\t\t\tselectBlock( focusedBlockClientId );\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if the given target field is the last in its block which\n\t * can be considered for tab transition. For example, in a block with two\n\t * text fields, this would return true when reversing from the first of the\n\t * two fields, but false when reversing from the second.\n\t *\n\t * @param {Element} target    Currently focused text field.\n\t * @param {boolean} isReverse True if considering as the first field.\n\t *\n\t * @return {boolean} Whether field is at edge for tab transition.\n\t */\n\tfunction isTabbableEdge( target, isReverse ) {\n\t\tconst closestTabbable = getClosestTabbable(\n\t\t\ttarget,\n\t\t\tisReverse,\n\t\t\tcontainer.current\n\t\t);\n\t\treturn ! closestTabbable || ! isInSameBlock( target, closestTabbable );\n\t}\n\n\tfunction onKeyDown( event ) {\n\t\tconst { keyCode, target } = event;\n\n\t\t// Handle only if the event occurred within the same DOM hierarchy as\n\t\t// the rendered container. This is used to distinguish between events\n\t\t// which bubble through React's virtual event system from those which\n\t\t// strictly occur in the DOM created by the component.\n\t\t//\n\t\t// The implication here is: If it's not desirable for a bubbled event to\n\t\t// be considered by WritingFlow, it can be avoided by rendering to a\n\t\t// distinct place in the DOM (e.g. using Slot/Fill).\n\t\tif ( ! container.current.contains( target ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isUp = keyCode === UP;\n\t\tconst isDown = keyCode === DOWN;\n\t\tconst isLeft = keyCode === LEFT;\n\t\tconst isRight = keyCode === RIGHT;\n\t\tconst isTab = keyCode === TAB;\n\t\tconst isEscape = keyCode === ESCAPE;\n\t\tconst isReverse = isUp || isLeft;\n\t\tconst isHorizontal = isLeft || isRight;\n\t\tconst isVertical = isUp || isDown;\n\t\tconst isNav = isHorizontal || isVertical;\n\t\tconst isShift = event.shiftKey;\n\t\tconst hasModifier =\n\t\t\tisShift || event.ctrlKey || event.altKey || event.metaKey;\n\t\tconst isNavEdge = isVertical ? isVerticalEdge : isHorizontalEdge;\n\t\tconst { ownerDocument } = container.current;\n\t\tconst { defaultView } = ownerDocument;\n\n\t\t// In Edit mode, Tab should focus the first tabbable element after the\n\t\t// content, which is normally the sidebar (with block controls) and\n\t\t// Shift+Tab should focus the first tabbable element before the content,\n\t\t// which is normally the block toolbar.\n\t\t// Arrow keys can be used, and Tab and arrow keys can be used in\n\t\t// Navigation mode (press Esc), to navigate through blocks.\n\t\tif ( selectedBlockClientId ) {\n\t\t\tif ( isTab ) {\n\t\t\t\tconst wrapper = getBlockDOMNode(\n\t\t\t\t\tselectedBlockClientId,\n\t\t\t\t\townerDocument\n\t\t\t\t);\n\n\t\t\t\tif ( isShift ) {\n\t\t\t\t\tif ( target === wrapper ) {\n\t\t\t\t\t\t// Disable focus capturing on the focus capture element, so\n\t\t\t\t\t\t// it doesn't refocus this block and so it allows default\n\t\t\t\t\t\t// behaviour (moving focus to the next tabbable element).\n\t\t\t\t\t\tnoCapture.current = true;\n\t\t\t\t\t\tfocusCaptureBeforeRef.current.focus();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst tabbables = focus.tabbable.find( wrapper );\n\t\t\t\t\tconst lastTabbable = last( tabbables ) || wrapper;\n\n\t\t\t\t\tif ( target === lastTabbable ) {\n\t\t\t\t\t\t// See comment above.\n\t\t\t\t\t\tnoCapture.current = true;\n\t\t\t\t\t\tfocusCaptureAfterRef.current.focus();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if ( isEscape ) {\n\t\t\t\tsetNavigationMode( true );\n\t\t\t}\n\t\t}\n\n\t\t// When presing any key other than up or down, the initial vertical\n\t\t// position must ALWAYS be reset. The vertical position is saved so it\n\t\t// can be restored as well as possible on sebsequent vertical arrow key\n\t\t// presses. It may not always be possible to restore the exact same\n\t\t// position (such as at an empty line), so it wouldn't be good to\n\t\t// compute the position right before any vertical arrow key press.\n\t\tif ( ! isVertical ) {\n\t\t\tverticalRect.current = null;\n\t\t} else if ( ! verticalRect.current ) {\n\t\t\tverticalRect.current = computeCaretRect( defaultView );\n\t\t}\n\n\t\t// This logic inside this condition needs to be checked before\n\t\t// the check for event.nativeEvent.defaultPrevented.\n\t\t// The logic handles meta+a keypress and this event is default prevented\n\t\t// by RichText.\n\t\tif ( ! isNav ) {\n\t\t\t// Set immediately before the meta+a combination can be pressed.\n\t\t\tif ( isKeyboardEvent.primary( event ) ) {\n\t\t\t\tentirelySelected.current = isEntirelySelected( target );\n\t\t\t}\n\n\t\t\tif ( isKeyboardEvent.primary( event, 'a' ) ) {\n\t\t\t\t// When the target is contentEditable, selection will already\n\t\t\t\t// have been set by the browser earlier in this call stack. We\n\t\t\t\t// need check the previous result, otherwise all blocks will be\n\t\t\t\t// selected right away.\n\t\t\t\tif (\n\t\t\t\t\ttarget.isContentEditable\n\t\t\t\t\t\t? entirelySelected.current\n\t\t\t\t\t\t: isEntirelySelected( target )\n\t\t\t\t) {\n\t\t\t\t\tmultiSelect( firstBlock, lastBlock );\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t\t// After pressing primary + A we can assume isEntirelySelected is true.\n\t\t\t\t// Calling right away isEntirelySelected after primary + A may still return false on some browsers.\n\t\t\t\tentirelySelected.current = true;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Abort if navigation has already been handled (e.g. RichText inline\n\t\t// boundaries).\n\t\tif ( event.nativeEvent.defaultPrevented ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Abort if our current target is not a candidate for navigation (e.g.\n\t\t// preserve native input behaviors).\n\t\tif ( ! isNavigationCandidate( target, keyCode, hasModifier ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In the case of RTL scripts, right means previous and left means next,\n\t\t// which is the exact reverse of LTR.\n\t\tconst { direction } = getComputedStyle( target );\n\t\tconst isReverseDir = direction === 'rtl' ? ! isReverse : isReverse;\n\n\t\tif ( isShift ) {\n\t\t\tif (\n\t\t\t\t// Ensure that there is a target block.\n\t\t\t\t( ( isReverse && selectionBeforeEndClientId ) ||\n\t\t\t\t\t( ! isReverse && selectionAfterEndClientId ) ) &&\n\t\t\t\tisTabbableEdge( target, isReverse ) &&\n\t\t\t\tisNavEdge( target, isReverse )\n\t\t\t) {\n\t\t\t\t// Shift key is down, and there is multi selection or we're at\n\t\t\t\t// the end of the current block.\n\t\t\t\texpandSelection( isReverse );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t} else if (\n\t\t\tisVertical &&\n\t\t\tisVerticalEdge( target, isReverse ) &&\n\t\t\t! keepCaretInsideBlock\n\t\t) {\n\t\t\tconst closestTabbable = getClosestTabbable(\n\t\t\t\ttarget,\n\t\t\t\tisReverse,\n\t\t\t\tcontainer.current,\n\t\t\t\ttrue\n\t\t\t);\n\n\t\t\tif ( closestTabbable ) {\n\t\t\t\tplaceCaretAtVerticalEdge(\n\t\t\t\t\tclosestTabbable,\n\t\t\t\t\tisReverse,\n\t\t\t\t\tverticalRect.current\n\t\t\t\t);\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t} else if (\n\t\t\tisHorizontal &&\n\t\t\tdefaultView.getSelection().isCollapsed &&\n\t\t\tisHorizontalEdge( target, isReverseDir ) &&\n\t\t\t! keepCaretInsideBlock\n\t\t) {\n\t\t\tconst closestTabbable = getClosestTabbable(\n\t\t\t\ttarget,\n\t\t\t\tisReverseDir,\n\t\t\t\tcontainer.current\n\t\t\t);\n\t\t\tplaceCaretAtHorizontalEdge( closestTabbable, isReverseDir );\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\tfunction onMultiSelectKeyDown( event ) {\n\t\tconst { keyCode, shiftKey } = event;\n\t\tconst isUp = keyCode === UP;\n\t\tconst isDown = keyCode === DOWN;\n\t\tconst isLeft = keyCode === LEFT;\n\t\tconst isRight = keyCode === RIGHT;\n\t\tconst isReverse = isUp || isLeft;\n\t\tconst isHorizontal = isLeft || isRight;\n\t\tconst isVertical = isUp || isDown;\n\t\tconst isNav = isHorizontal || isVertical;\n\n\t\tif ( keyCode === TAB ) {\n\t\t\t// Disable focus capturing on the focus capture element, so it\n\t\t\t// doesn't refocus this element and so it allows default behaviour\n\t\t\t// (moving focus to the next tabbable element).\n\t\t\tnoCapture.current = true;\n\n\t\t\tif ( shiftKey ) {\n\t\t\t\tfocusCaptureBeforeRef.current.focus();\n\t\t\t} else {\n\t\t\t\tfocusCaptureAfterRef.current.focus();\n\t\t\t}\n\t\t} else if ( isNav ) {\n\t\t\tconst action = shiftKey ? expandSelection : moveSelection;\n\t\t\taction( isReverse );\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\tuseEffect( () => {\n\t\tif ( hasMultiSelection && ! isMultiSelecting ) {\n\t\t\tmultiSelectionContainer.current.focus();\n\t\t}\n\t}, [ hasMultiSelection, isMultiSelecting ] );\n\n\tconst className = classnames( 'block-editor-writing-flow', {\n\t\t'is-navigate-mode': isNavigationMode,\n\t} );\n\n\t// Disable reason: Wrapper itself is non-interactive, but must capture\n\t// bubbling events from children to determine focus transition intents.\n\t/* eslint-disable jsx-a11y/no-static-element-interactions */\n\treturn (\n\t\t<SelectionStart.Provider value={ onSelectionStart }>\n\t\t\t<FocusCapture\n\t\t\t\tref={ focusCaptureBeforeRef }\n\t\t\t\tselectedClientId={ selectedBlockClientId }\n\t\t\t\tcontainerRef={ container }\n\t\t\t\tnoCapture={ noCapture }\n\t\t\t\thasMultiSelection={ hasMultiSelection }\n\t\t\t\tmultiSelectionContainer={ multiSelectionContainer }\n\t\t\t/>\n\t\t\t<div\n\t\t\t\tref={ multiSelectionContainer }\n\t\t\t\ttabIndex={ hasMultiSelection ? '0' : undefined }\n\t\t\t\taria-label={\n\t\t\t\t\thasMultiSelection\n\t\t\t\t\t\t? __( 'Multiple selected blocks' )\n\t\t\t\t\t\t: undefined\n\t\t\t\t}\n\t\t\t\t// Needs to be positioned within the viewport, so focus to this\n\t\t\t\t// element does not scroll the page.\n\t\t\t\tstyle={ { position: 'fixed' } }\n\t\t\t\tonKeyDown={ onMultiSelectKeyDown }\n\t\t\t/>\n\t\t\t<div\n\t\t\t\tref={ container }\n\t\t\t\tclassName={ className }\n\t\t\t\tonKeyDown={ onKeyDown }\n\t\t\t\tonMouseDown={ onMouseDown }\n\t\t\t>\n\t\t\t\t{ children }\n\t\t\t</div>\n\t\t\t<FocusCapture\n\t\t\t\tref={ focusCaptureAfterRef }\n\t\t\t\tselectedClientId={ selectedBlockClientId }\n\t\t\t\tcontainerRef={ container }\n\t\t\t\tnoCapture={ noCapture }\n\t\t\t\thasMultiSelection={ hasMultiSelection }\n\t\t\t\tmultiSelectionContainer={ multiSelectionContainer }\n\t\t\t\tisReverse\n\t\t\t/>\n\t\t</SelectionStart.Provider>\n\t);\n\t/* eslint-enable jsx-a11y/no-static-element-interactions */\n}\n"]}