{"version":3,"sources":["@wordpress/block-editor/src/components/block-switcher/index.js"],"names":["BlockSwitcherDropdownMenu","clientIds","blocks","blockEditorStore","replaceBlocks","blockInformation","clientId","select","getBlockRootClientId","getBlockTransformItems","__experimentalGetReusableBlockTitle","blocksStore","getBlockStyles","getBlockType","rootClientId","firstBlockName","name","_isSingleBlockSelected","length","styles","_icon","reusableBlockTitle","icon","attributes","ref","isSelectionOfSameType","map","stack","possibleBlockTransformations","hasBlockStyles","blockTitle","title","isReusable","onTransform","hasPossibleBlockTransformations","blockSwitcherLabel","blockSwitcherDescription","toggleProps","position","isAlternate","className","describedBy","orientation","onClose","BlockSwitcher","getBlocksByClientId","some","block"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { castArray, uniq, truncate } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __, _n, sprintf } from '@wordpress/i18n';\nimport {\n\tDropdownMenu,\n\tToolbarButton,\n\tToolbarGroup,\n\tToolbarItem,\n} from '@wordpress/components';\nimport {\n\tswitchToBlockType,\n\tstore as blocksStore,\n\tisReusableBlock,\n} from '@wordpress/blocks';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { stack } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../store';\nimport useBlockDisplayInformation from '../use-block-display-information';\nimport BlockIcon from '../block-icon';\nimport BlockTransformationsMenu from './block-transformations-menu';\nimport BlockStylesMenu from './block-styles-menu';\n\nexport const BlockSwitcherDropdownMenu = ( { clientIds, blocks } ) => {\n\tconst { replaceBlocks } = useDispatch( blockEditorStore );\n\tconst blockInformation = useBlockDisplayInformation( blocks[ 0 ].clientId );\n\tconst {\n\t\tpossibleBlockTransformations,\n\t\thasBlockStyles,\n\t\ticon,\n\t\tblockTitle,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockRootClientId,\n\t\t\t\tgetBlockTransformItems,\n\t\t\t\t__experimentalGetReusableBlockTitle,\n\t\t\t} = select( blockEditorStore );\n\n\t\t\tconst { getBlockStyles, getBlockType } = select( blocksStore );\n\t\t\tconst rootClientId = getBlockRootClientId(\n\t\t\t\tcastArray( clientIds )[ 0 ]\n\t\t\t);\n\t\t\tconst [ { name: firstBlockName } ] = blocks;\n\t\t\tconst _isSingleBlockSelected = blocks.length === 1;\n\t\t\tconst styles =\n\t\t\t\t_isSingleBlockSelected && getBlockStyles( firstBlockName );\n\t\t\tlet _icon;\n\t\t\tlet reusableBlockTitle;\n\t\t\tif ( _isSingleBlockSelected ) {\n\t\t\t\t_icon = blockInformation?.icon; // Take into account active block variations.\n\t\t\t\treusableBlockTitle =\n\t\t\t\t\tisReusableBlock( blocks[ 0 ] ) &&\n\t\t\t\t\t__experimentalGetReusableBlockTitle(\n\t\t\t\t\t\tblocks[ 0 ].attributes.ref\n\t\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tconst isSelectionOfSameType =\n\t\t\t\t\tuniq( blocks.map( ( { name } ) => name ) ).length === 1;\n\t\t\t\t// When selection consists of blocks of multiple types, display an\n\t\t\t\t// appropriate icon to communicate the non-uniformity.\n\t\t\t\t_icon = isSelectionOfSameType\n\t\t\t\t\t? getBlockType( firstBlockName )?.icon\n\t\t\t\t\t: stack;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tpossibleBlockTransformations: getBlockTransformItems(\n\t\t\t\t\tblocks,\n\t\t\t\t\trootClientId\n\t\t\t\t),\n\t\t\t\thasBlockStyles: !! styles?.length,\n\t\t\t\ticon: _icon,\n\t\t\t\tblockTitle:\n\t\t\t\t\treusableBlockTitle || getBlockType( firstBlockName ).title,\n\t\t\t};\n\t\t},\n\t\t[ clientIds, blocks, blockInformation?.icon ]\n\t);\n\n\tconst isReusable = blocks.length === 1 && isReusableBlock( blocks[ 0 ] );\n\n\tconst onTransform = ( name ) =>\n\t\treplaceBlocks( clientIds, switchToBlockType( blocks, name ) );\n\tconst hasPossibleBlockTransformations = !! possibleBlockTransformations.length;\n\tif ( ! hasBlockStyles && ! hasPossibleBlockTransformations ) {\n\t\treturn (\n\t\t\t<ToolbarGroup>\n\t\t\t\t<ToolbarButton\n\t\t\t\t\tdisabled\n\t\t\t\t\tclassName=\"block-editor-block-switcher__no-switcher-icon\"\n\t\t\t\t\ttitle={ blockTitle }\n\t\t\t\t\ticon={ <BlockIcon icon={ icon } showColors /> }\n\t\t\t\t/>\n\t\t\t</ToolbarGroup>\n\t\t);\n\t}\n\n\tconst blockSwitcherLabel = blockTitle;\n\n\tconst blockSwitcherDescription =\n\t\t1 === blocks.length\n\t\t\t? __( 'Change block type or style' )\n\t\t\t: sprintf(\n\t\t\t\t\t/* translators: %s: number of blocks. */\n\t\t\t\t\t_n(\n\t\t\t\t\t\t'Change type of %d block',\n\t\t\t\t\t\t'Change type of %d blocks',\n\t\t\t\t\t\tblocks.length\n\t\t\t\t\t),\n\t\t\t\t\tblocks.length\n\t\t\t  );\n\n\treturn (\n\t\t<ToolbarGroup>\n\t\t\t<ToolbarItem>\n\t\t\t\t{ ( toggleProps ) => (\n\t\t\t\t\t<DropdownMenu\n\t\t\t\t\t\tclassName=\"block-editor-block-switcher\"\n\t\t\t\t\t\tlabel={ blockSwitcherLabel }\n\t\t\t\t\t\tpopoverProps={ {\n\t\t\t\t\t\t\tposition: 'bottom right',\n\t\t\t\t\t\t\tisAlternate: true,\n\t\t\t\t\t\t\tclassName: 'block-editor-block-switcher__popover',\n\t\t\t\t\t\t} }\n\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<BlockIcon\n\t\t\t\t\t\t\t\t\ticon={ icon }\n\t\t\t\t\t\t\t\t\tclassName=\"block-editor-block-switcher__toggle\"\n\t\t\t\t\t\t\t\t\tshowColors\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{ isReusable && (\n\t\t\t\t\t\t\t\t\t<span className=\"block-editor-block-switcher__toggle-text\">\n\t\t\t\t\t\t\t\t\t\t{ truncate( blockTitle, {\n\t\t\t\t\t\t\t\t\t\t\tlength: 35,\n\t\t\t\t\t\t\t\t\t\t} ) }\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttoggleProps={ {\n\t\t\t\t\t\t\tdescribedBy: blockSwitcherDescription,\n\t\t\t\t\t\t\t...toggleProps,\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tmenuProps={ { orientation: 'both' } }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ ( { onClose } ) =>\n\t\t\t\t\t\t\t( hasBlockStyles ||\n\t\t\t\t\t\t\t\thasPossibleBlockTransformations ) && (\n\t\t\t\t\t\t\t\t<div className=\"block-editor-block-switcher__container\">\n\t\t\t\t\t\t\t\t\t{ hasPossibleBlockTransformations && (\n\t\t\t\t\t\t\t\t\t\t<BlockTransformationsMenu\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"block-editor-block-switcher__transforms__menugroup\"\n\t\t\t\t\t\t\t\t\t\t\tpossibleBlockTransformations={\n\t\t\t\t\t\t\t\t\t\t\t\tpossibleBlockTransformations\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tblocks={ blocks }\n\t\t\t\t\t\t\t\t\t\t\tonSelect={ ( name ) => {\n\t\t\t\t\t\t\t\t\t\t\t\tonTransform( name );\n\t\t\t\t\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t{ hasBlockStyles && (\n\t\t\t\t\t\t\t\t\t\t<BlockStylesMenu\n\t\t\t\t\t\t\t\t\t\t\thoveredBlock={ blocks[ 0 ] }\n\t\t\t\t\t\t\t\t\t\t\tonSwitch={ onClose }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</DropdownMenu>\n\t\t\t\t) }\n\t\t\t</ToolbarItem>\n\t\t</ToolbarGroup>\n\t);\n};\n\nexport const BlockSwitcher = ( { clientIds } ) => {\n\tconst blocks = useSelect(\n\t\t( select ) =>\n\t\t\tselect( blockEditorStore ).getBlocksByClientId( clientIds ),\n\t\t[ clientIds ]\n\t);\n\n\tif ( ! blocks.length || blocks.some( ( block ) => ! block ) ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<BlockSwitcherDropdownMenu clientIds={ clientIds } blocks={ blocks } />\n\t);\n};\n\nexport default BlockSwitcher;\n"]}