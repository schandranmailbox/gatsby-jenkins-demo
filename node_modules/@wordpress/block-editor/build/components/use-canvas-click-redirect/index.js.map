{"version":3,"sources":["@wordpress/block-editor/src/components/use-canvas-click-redirect/index.js"],"names":["isTabbableTextField","isTextField","focus","tabbable","isTabbableIndex","useCanvasClickRedirect","ref","onMouseDown","event","target","current","focusableNodes","focusable","find","preventDefault","addEventListener"],"mappings":";;;;;;;AAGA;;AAKA;;AACA;;AATA;AACA;AACA;;AAGA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMA,mBAAmB,GAAG,uBAAW,CACtCC,gBADsC,EAEtCC,WAAMC,QAAN,CAAeC,eAFuB,CAAX,CAA5B;;AAKO,SAASC,sBAAT,CAAiCC,GAAjC,EAAuC;AAC7C,0BAAW,YAAM;AAChB,aAASC,WAAT,CAAsBC,KAAtB,EAA8B;AAC7B;AACA,UAAKA,KAAK,CAACC,MAAN,KAAiBH,GAAG,CAACI,OAA1B,EAAoC;AACnC;AACA;;AAED,UAAMC,cAAc,GAAGT,WAAMU,SAAN,CAAgBC,IAAhB,CAAsBP,GAAG,CAACI,OAA1B,CAAvB;;AACA,UAAMD,MAAM,GAAG,sBAAUE,cAAV,EAA0BX,mBAA1B,CAAf;;AAEA,UAAK,CAAES,MAAP,EAAgB;AACf;AACA;;AAED,2CAA4BA,MAA5B,EAAoC,IAApC;AACAD,MAAAA,KAAK,CAACM,cAAN;AACA;;AAEDR,IAAAA,GAAG,CAACI,OAAJ,CAAYK,gBAAZ,CAA8B,WAA9B,EAA2CR,WAA3C;AAEA,WAAO,YAAM;AACZD,MAAAA,GAAG,CAACI,OAAJ,CAAYK,gBAAZ,CAA8B,WAA9B,EAA2CR,WAA3C;AACA,KAFD;AAGA,GAvBD,EAuBG,EAvBH;AAwBA","sourcesContent":["/**\n * External dependencies\n */\nimport { overEvery, findLast } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useEffect } from '@wordpress/element';\nimport { focus, isTextField, placeCaretAtHorizontalEdge } from '@wordpress/dom';\n\n/**\n * Given an element, returns true if the element is a tabbable text field, or\n * false otherwise.\n *\n * @param {Element} element Element to test.\n *\n * @return {boolean} Whether element is a tabbable text field.\n */\nconst isTabbableTextField = overEvery( [\n\tisTextField,\n\tfocus.tabbable.isTabbableIndex,\n] );\n\nexport function useCanvasClickRedirect( ref ) {\n\tuseEffect( () => {\n\t\tfunction onMouseDown( event ) {\n\t\t\t// Only handle clicks on the canvas, not the content.\n\t\t\tif ( event.target !== ref.current ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst focusableNodes = focus.focusable.find( ref.current );\n\t\t\tconst target = findLast( focusableNodes, isTabbableTextField );\n\n\t\t\tif ( ! target ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tplaceCaretAtHorizontalEdge( target, true );\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\tref.current.addEventListener( 'mousedown', onMouseDown );\n\n\t\treturn () => {\n\t\t\tref.current.addEventListener( 'mousedown', onMouseDown );\n\t\t};\n\t}, [] );\n}\n"]}