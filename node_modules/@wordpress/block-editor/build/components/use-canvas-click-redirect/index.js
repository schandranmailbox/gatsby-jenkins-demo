"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useCanvasClickRedirect = useCanvasClickRedirect;

var _lodash = require("lodash");

var _element = require("@wordpress/element");

var _dom = require("@wordpress/dom");

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Given an element, returns true if the element is a tabbable text field, or
 * false otherwise.
 *
 * @param {Element} element Element to test.
 *
 * @return {boolean} Whether element is a tabbable text field.
 */
var isTabbableTextField = (0, _lodash.overEvery)([_dom.isTextField, _dom.focus.tabbable.isTabbableIndex]);

function useCanvasClickRedirect(ref) {
  (0, _element.useEffect)(function () {
    function onMouseDown(event) {
      // Only handle clicks on the canvas, not the content.
      if (event.target !== ref.current) {
        return;
      }

      var focusableNodes = _dom.focus.focusable.find(ref.current);

      var target = (0, _lodash.findLast)(focusableNodes, isTabbableTextField);

      if (!target) {
        return;
      }

      (0, _dom.placeCaretAtHorizontalEdge)(target, true);
      event.preventDefault();
    }

    ref.current.addEventListener('mousedown', onMouseDown);
    return function () {
      ref.current.addEventListener('mousedown', onMouseDown);
    };
  }, []);
}
//# sourceMappingURL=index.js.map