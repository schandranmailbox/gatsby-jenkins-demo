{"version":3,"sources":["@wordpress/block-editor/src/components/block-selection-clearer/index.js"],"names":["useBlockSelectionClearer","ref","hasSelection","select","hasSelectedBlock","hasMultiSelection","clearSelectedBlock","onMouseDown","event","target","closest","current","addEventListener","removeEventListener","BlockSelectionClearer","props"],"mappings":";;;;;;;;;;AAIA;;;;AADA;;AAHA;AACA;AACA;AAIO,SAASA,wBAAT,CAAmCC,GAAnC,EAAyC;AAC/C,MAAMC,YAAY,GAAG,qBAAW,UAAEC,MAAF,EAAc;AAAA,kBACGA,MAAM,CACrD,mBADqD,CADT;AAAA,QACrCC,gBADqC,WACrCA,gBADqC;AAAA,QACnBC,iBADmB,WACnBA,iBADmB;;AAK7C,WAAOD,gBAAgB,MAAMC,iBAAiB,EAA9C;AACA,GANoB,CAArB;;AAD+C,qBAQhB,uBAAa,mBAAb,CARgB;AAAA,MAQvCC,kBARuC,gBAQvCA,kBARuC;;AAU/C,0BAAW,YAAM;AAChB,QAAK,CAAEJ,YAAP,EAAsB;AACrB;AACA;;AAED,aAASK,WAAT,CAAsBC,KAAtB,EAA8B;AAC7B;AACA,UAAKA,KAAK,CAACC,MAAN,CAAaC,OAAb,CAAsB,WAAtB,CAAL,EAA2C;AAC1C;AACA;;AAEDJ,MAAAA,kBAAkB;AAClB;;AAEDL,IAAAA,GAAG,CAACU,OAAJ,CAAYC,gBAAZ,CAA8B,WAA9B,EAA2CL,WAA3C;AAEA,WAAO,YAAM;AACZN,MAAAA,GAAG,CAACU,OAAJ,CAAYE,mBAAZ,CAAiC,WAAjC,EAA8CN,WAA9C;AACA,KAFD;AAGA,GAnBD,EAmBG,CAAEL,YAAF,EAAgBI,kBAAhB,CAnBH;AAoBA;;AAEc,SAASQ,qBAAT,CAAgCC,KAAhC,EAAwC;AACtD,MAAMd,GAAG,GAAG,sBAAZ;AACAD,EAAAA,wBAAwB,CAAEC,GAAF,CAAxB;AACA,SAAO;AAAK,IAAA,GAAG,EAAGA;AAAX,KAAsBc,KAAtB,EAAP;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useEffect, useRef } from '@wordpress/element';\n\nexport function useBlockSelectionClearer( ref ) {\n\tconst hasSelection = useSelect( ( select ) => {\n\t\tconst { hasSelectedBlock, hasMultiSelection } = select(\n\t\t\t'core/block-editor'\n\t\t);\n\n\t\treturn hasSelectedBlock() || hasMultiSelection();\n\t} );\n\tconst { clearSelectedBlock } = useDispatch( 'core/block-editor' );\n\n\tuseEffect( () => {\n\t\tif ( ! hasSelection ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\t\t\t// Only handle clicks on the canvas, not the content.\n\t\t\tif ( event.target.closest( '.wp-block' ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearSelectedBlock();\n\t\t}\n\n\t\tref.current.addEventListener( 'mousedown', onMouseDown );\n\n\t\treturn () => {\n\t\t\tref.current.removeEventListener( 'mousedown', onMouseDown );\n\t\t};\n\t}, [ hasSelection, clearSelectedBlock ] );\n}\n\nexport default function BlockSelectionClearer( props ) {\n\tconst ref = useRef();\n\tuseBlockSelectionClearer( ref );\n\treturn <div ref={ ref } { ...props } />;\n}\n"]}