"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useBlockSelectionClearer = useBlockSelectionClearer;
exports.default = BlockSelectionClearer;

var _element = require("@wordpress/element");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _data = require("@wordpress/data");

/**
 * WordPress dependencies
 */
function useBlockSelectionClearer(ref) {
  var hasSelection = (0, _data.useSelect)(function (select) {
    var _select = select('core/block-editor'),
        hasSelectedBlock = _select.hasSelectedBlock,
        hasMultiSelection = _select.hasMultiSelection;

    return hasSelectedBlock() || hasMultiSelection();
  });

  var _useDispatch = (0, _data.useDispatch)('core/block-editor'),
      clearSelectedBlock = _useDispatch.clearSelectedBlock;

  (0, _element.useEffect)(function () {
    if (!hasSelection) {
      return;
    }

    function onMouseDown(event) {
      // Only handle clicks on the canvas, not the content.
      if (event.target.closest('.wp-block')) {
        return;
      }

      clearSelectedBlock();
    }

    ref.current.addEventListener('mousedown', onMouseDown);
    return function () {
      ref.current.removeEventListener('mousedown', onMouseDown);
    };
  }, [hasSelection, clearSelectedBlock]);
}

function BlockSelectionClearer(props) {
  var ref = (0, _element.useRef)();
  useBlockSelectionClearer(ref);
  return (0, _element.createElement)("div", (0, _extends2.default)({
    ref: ref
  }, props));
}
//# sourceMappingURL=index.js.map