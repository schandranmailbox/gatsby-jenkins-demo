"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _blocks = require("@wordpress/blocks");

var _data = require("@wordpress/data");

var _element = require("@wordpress/element");

/**
 * WordPress dependencies
 */

/**
 * Retrieves the block types inserter state.
 *
 * @param {string=}  rootClientId        Insertion's root client ID.
 * @param {Function} onInsert            function called when inserter a list of blocks.
 * @return {Array} Returns the block types state. (block types, categories, collections, onSelect handler)
 */
var useBlockTypesState = function useBlockTypesState(rootClientId, onInsert) {
  var _useSelect = (0, _data.useSelect)(function (select) {
    var _select = select('core/block-editor'),
        getInserterItems = _select.getInserterItems;

    var _select2 = select(_blocks.store),
        getCategories = _select2.getCategories,
        getCollections = _select2.getCollections;

    return {
      categories: getCategories(),
      collections: getCollections(),
      items: getInserterItems(rootClientId)
    };
  }, [rootClientId]),
      categories = _useSelect.categories,
      collections = _useSelect.collections,
      items = _useSelect.items;

  var onSelectItem = (0, _element.useCallback)(function (_ref) {
    var name = _ref.name,
        initialAttributes = _ref.initialAttributes,
        innerBlocks = _ref.innerBlocks;
    var insertedBlock = (0, _blocks.createBlock)(name, initialAttributes, (0, _blocks.createBlocksFromInnerBlocksTemplate)(innerBlocks));
    onInsert(insertedBlock);
  }, [onInsert]);
  return [items, categories, collections, onSelectItem];
};

var _default = useBlockTypesState;
exports.default = _default;
//# sourceMappingURL=use-block-types-state.js.map