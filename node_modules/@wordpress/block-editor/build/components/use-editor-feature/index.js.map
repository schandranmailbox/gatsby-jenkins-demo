{"version":3,"sources":["@wordpress/block-editor/src/components/use-editor-feature/index.js"],"names":["deprecatedFlags","settings","colors","undefined","gradients","disableCustomColors","disableCustomGradients","fontSizes","disableCustomFontSizes","enableCustomLineHeight","enableCustomUnits","enableCustomSpacing","blockAttributesMatch","blockAttributes","attributes","attribute","useEditorFeature","featurePath","blockName","name","clientId","setting","select","getBlockAttributes","getSettings","blockType","blocksStore","getBlockType","context","selectors","contextSelector","defaultsPath","blockPath","experimentalFeaturesResult","deprecatedSettingsValue"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { get, isObject } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { store as blocksStore } from '@wordpress/blocks';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { useBlockEditContext } from '../block-edit';\n\nconst deprecatedFlags = {\n\t'color.palette': ( settings ) =>\n\t\tsettings.colors === undefined ? undefined : settings.colors,\n\t'color.gradients': ( settings ) =>\n\t\tsettings.gradients === undefined ? undefined : settings.gradients,\n\t'color.custom': ( settings ) =>\n\t\tsettings.disableCustomColors === undefined\n\t\t\t? undefined\n\t\t\t: ! settings.disableCustomColors,\n\t'color.customGradient': ( settings ) =>\n\t\tsettings.disableCustomGradients === undefined\n\t\t\t? undefined\n\t\t\t: ! settings.disableCustomGradients,\n\t'typography.fontSizes': ( settings ) =>\n\t\tsettings.fontSizes === undefined ? undefined : settings.fontSizes,\n\t'typography.customFontSize': ( settings ) =>\n\t\tsettings.disableCustomFontSizes === undefined\n\t\t\t? undefined\n\t\t\t: ! settings.disableCustomFontSizes,\n\t'typography.customLineHeight': ( settings ) =>\n\t\tsettings.enableCustomLineHeight,\n\t'spacing.units': ( settings ) => {\n\t\tif ( settings.enableCustomUnits === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( settings.enableCustomUnits === true ) {\n\t\t\treturn [ 'px', 'em', 'rem', 'vh', 'vw' ];\n\t\t}\n\n\t\treturn settings.enableCustomUnits;\n\t},\n\t'spacing.customPadding': ( settings ) => settings.enableCustomSpacing,\n};\n\nfunction blockAttributesMatch( blockAttributes, attributes ) {\n\tfor ( const attribute in attributes ) {\n\t\tif ( attributes[ attribute ] !== blockAttributes[ attribute ] ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Hook that retrieves the setting for the given editor feature.\n * It works with nested objects using by finding the value at path.\n *\n * @param {string} featurePath  The path to the feature.\n *\n * @return {any} Returns the value defined for the setting.\n *\n * @example\n * ```js\n * const isEnabled = useEditorFeature( 'typography.dropCap' );\n * ```\n */\nexport default function useEditorFeature( featurePath ) {\n\tconst { name: blockName, clientId } = useBlockEditContext();\n\n\tconst setting = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getBlockAttributes, getSettings } = select(\n\t\t\t\t'core/block-editor'\n\t\t\t);\n\t\t\tconst settings = getSettings();\n\t\t\tconst blockType = select( blocksStore ).getBlockType( blockName );\n\n\t\t\tlet context = blockName;\n\t\t\tconst selectors = get( blockType, [\n\t\t\t\t'supports',\n\t\t\t\t'__experimentalSelector',\n\t\t\t] );\n\t\t\tif ( isObject( selectors ) ) {\n\t\t\t\tconst blockAttributes = getBlockAttributes( clientId ) || {};\n\t\t\t\tfor ( const contextSelector in selectors ) {\n\t\t\t\t\tconst { attributes } = selectors[ contextSelector ];\n\t\t\t\t\tif ( blockAttributesMatch( blockAttributes, attributes ) ) {\n\t\t\t\t\t\tcontext = contextSelector;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 1 - Use __experimental features, if available.\n\t\t\t// We cascade to the all value if the block one is not available.\n\t\t\tconst defaultsPath = `__experimentalFeatures.defaults.${ featurePath }`;\n\t\t\tconst blockPath = `__experimentalFeatures.${ context }.${ featurePath }`;\n\t\t\tconst experimentalFeaturesResult =\n\t\t\t\tget( settings, blockPath ) ?? get( settings, defaultsPath );\n\t\t\tif ( experimentalFeaturesResult !== undefined ) {\n\t\t\t\treturn experimentalFeaturesResult;\n\t\t\t}\n\n\t\t\t// 2 - Use deprecated settings, otherwise.\n\t\t\tconst deprecatedSettingsValue = deprecatedFlags[ featurePath ]\n\t\t\t\t? deprecatedFlags[ featurePath ]( settings )\n\t\t\t\t: undefined;\n\t\t\tif ( deprecatedSettingsValue !== undefined ) {\n\t\t\t\treturn deprecatedSettingsValue;\n\t\t\t}\n\n\t\t\t// 3 - Fall back for typography.dropCap:\n\t\t\t// This is only necessary to support typography.dropCap.\n\t\t\t// when __experimentalFeatures are not present (core without plugin).\n\t\t\t// To remove when __experimentalFeatures are ported to core.\n\t\t\treturn featurePath === 'typography.dropCap' ? true : undefined;\n\t\t},\n\t\t[ blockName, clientId, featurePath ]\n\t);\n\n\treturn setting;\n}\n"]}