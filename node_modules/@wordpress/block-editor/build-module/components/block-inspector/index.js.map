{"version":3,"sources":["@wordpress/block-editor/src/components/block-inspector/index.js"],"names":["__","getBlockType","getUnregisteredTypeHandlerName","hasBlockSupport","store","blocksStore","PanelBody","__experimentalUseSlot","useSlot","withSelect","SkipToSelectedBlock","BlockCard","InspectorControls","InspectorAdvancedControls","BlockStyles","MultiSelectionInspector","DefaultStylePicker","BlockVariationTransforms","useBlockDisplayInformation","BlockInspector","blockType","count","hasBlockStyles","selectedBlockClientId","selectedBlockName","showNoBlockSelectedMessage","bubblesVirtually","isSelectedBlockUnregistered","name","BlockInspectorSingleBlock","clientId","blockName","blockInformation","slotName","AdvancedControls","slot","hasFills","Boolean","fills","length","select","getSelectedBlockClientId","getSelectedBlockCount","getBlockName","getBlockStyles","blockStyles"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tgetBlockType,\n\tgetUnregisteredTypeHandlerName,\n\thasBlockSupport,\n\tstore as blocksStore,\n} from '@wordpress/blocks';\nimport {\n\tPanelBody,\n\t__experimentalUseSlot as useSlot,\n} from '@wordpress/components';\nimport { withSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport SkipToSelectedBlock from '../skip-to-selected-block';\nimport BlockCard from '../block-card';\nimport InspectorControls from '../inspector-controls';\nimport InspectorAdvancedControls from '../inspector-advanced-controls';\nimport BlockStyles from '../block-styles';\nimport MultiSelectionInspector from '../multi-selection-inspector';\nimport DefaultStylePicker from '../default-style-picker';\nimport BlockVariationTransforms from '../block-variation-transforms';\nimport useBlockDisplayInformation from '../use-block-display-information';\n\nconst BlockInspector = ( {\n\tblockType,\n\tcount,\n\thasBlockStyles,\n\tselectedBlockClientId,\n\tselectedBlockName,\n\tshowNoBlockSelectedMessage = true,\n\tbubblesVirtually = true,\n} ) => {\n\tif ( count > 1 ) {\n\t\treturn (\n\t\t\t<div className=\"block-editor-block-inspector\">\n\t\t\t\t<MultiSelectionInspector />\n\t\t\t\t<InspectorControls.Slot bubblesVirtually={ bubblesVirtually } />\n\t\t\t</div>\n\t\t);\n\t}\n\n\tconst isSelectedBlockUnregistered =\n\t\tselectedBlockName === getUnregisteredTypeHandlerName();\n\n\t/*\n\t * If the selected block is of an unregistered type, avoid showing it as an actual selection\n\t * because we want the user to focus on the unregistered block warning, not block settings.\n\t */\n\tif (\n\t\t! blockType ||\n\t\t! selectedBlockClientId ||\n\t\tisSelectedBlockUnregistered\n\t) {\n\t\tif ( showNoBlockSelectedMessage ) {\n\t\t\treturn (\n\t\t\t\t<span className=\"block-editor-block-inspector__no-blocks\">\n\t\t\t\t\t{ __( 'No block selected.' ) }\n\t\t\t\t</span>\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t}\n\treturn (\n\t\t<BlockInspectorSingleBlock\n\t\t\tclientId={ selectedBlockClientId }\n\t\t\tblockName={ blockType.name }\n\t\t\thasBlockStyles={ hasBlockStyles }\n\t\t\tbubblesVirtually={ bubblesVirtually }\n\t\t/>\n\t);\n};\n\nconst BlockInspectorSingleBlock = ( {\n\tclientId,\n\tblockName,\n\thasBlockStyles,\n\tbubblesVirtually,\n} ) => {\n\tconst blockInformation = useBlockDisplayInformation( clientId );\n\treturn (\n\t\t<div className=\"block-editor-block-inspector\">\n\t\t\t<BlockCard { ...blockInformation } />\n\t\t\t<BlockVariationTransforms blockClientId={ clientId } />\n\t\t\t{ hasBlockStyles && (\n\t\t\t\t<div>\n\t\t\t\t\t<PanelBody title={ __( 'Styles' ) }>\n\t\t\t\t\t\t<BlockStyles clientId={ clientId } />\n\t\t\t\t\t\t{ hasBlockSupport(\n\t\t\t\t\t\t\tblockName,\n\t\t\t\t\t\t\t'defaultStylePicker',\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t) && <DefaultStylePicker blockName={ blockName } /> }\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</div>\n\t\t\t) }\n\t\t\t<InspectorControls.Slot bubblesVirtually={ bubblesVirtually } />\n\t\t\t<div>\n\t\t\t\t<AdvancedControls\n\t\t\t\t\tslotName={ InspectorAdvancedControls.slotName }\n\t\t\t\t\tbubblesVirtually={ bubblesVirtually }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<SkipToSelectedBlock key=\"back\" />\n\t\t</div>\n\t);\n};\n\nconst AdvancedControls = ( { slotName, bubblesVirtually } ) => {\n\tconst slot = useSlot( slotName );\n\tconst hasFills = Boolean( slot.fills && slot.fills.length );\n\n\tif ( ! hasFills ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PanelBody\n\t\t\tclassName=\"block-editor-block-inspector__advanced\"\n\t\t\ttitle={ __( 'Advanced' ) }\n\t\t\tinitialOpen={ false }\n\t\t>\n\t\t\t<InspectorAdvancedControls.Slot\n\t\t\t\tbubblesVirtually={ bubblesVirtually }\n\t\t\t/>\n\t\t</PanelBody>\n\t);\n};\n\nexport default withSelect( ( select ) => {\n\tconst {\n\t\tgetSelectedBlockClientId,\n\t\tgetSelectedBlockCount,\n\t\tgetBlockName,\n\t} = select( 'core/block-editor' );\n\tconst { getBlockStyles } = select( blocksStore );\n\tconst selectedBlockClientId = getSelectedBlockClientId();\n\tconst selectedBlockName =\n\t\tselectedBlockClientId && getBlockName( selectedBlockClientId );\n\tconst blockType =\n\t\tselectedBlockClientId && getBlockType( selectedBlockName );\n\tconst blockStyles =\n\t\tselectedBlockClientId && getBlockStyles( selectedBlockName );\n\treturn {\n\t\tcount: getSelectedBlockCount(),\n\t\thasBlockStyles: blockStyles && blockStyles.length > 0,\n\t\tselectedBlockName,\n\t\tselectedBlockClientId,\n\t\tblockType,\n\t};\n} )( BlockInspector );\n"]}