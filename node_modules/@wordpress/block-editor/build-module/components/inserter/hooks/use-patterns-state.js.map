{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/hooks/use-patterns-state.js"],"names":["map","useCallback","cloneBlock","useDispatch","useSelect","__","sprintf","store","noticesStore","usePatternsState","onInsert","select","getSettings","__experimentalBlockPatterns","__experimentalBlockPatternCategories","patterns","patternCategories","createSuccessNotice","onClickPattern","pattern","blocks","block","name","title","type"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,GAAT,QAAoB,QAApB;AAEA;AACA;AACA;;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,iBAAvC;AACA,SAASC,EAAT,EAAaC,OAAb,QAA4B,iBAA5B;AACA,SAASC,KAAK,IAAIC,YAAlB,QAAsC,oBAAtC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAEC,QAAF,EAAgB;AAAA,mBACAN,SAAS,CAAE,UAAEO,MAAF,EAAc;AAAA,8BAI5DA,MAAM,CAAE,mBAAF,CAAN,CAA8BC,WAA9B,EAJ4D;AAAA,QAE/DC,2BAF+D,uBAE/DA,2BAF+D;AAAA,QAG/DC,oCAH+D,uBAG/DA,oCAH+D;;AAKhE,WAAO;AACNC,MAAAA,QAAQ,EAAEF,2BADJ;AAENG,MAAAA,iBAAiB,EAAEF;AAFb,KAAP;AAIA,GATgD,EAS9C,EAT8C,CADT;AAAA,MAChCE,iBADgC,cAChCA,iBADgC;AAAA,MACbD,QADa,cACbA,QADa;;AAAA,qBAWRZ,WAAW,CAAEK,YAAF,CAXH;AAAA,MAWhCS,mBAXgC,gBAWhCA,mBAXgC;;AAYxC,MAAMC,cAAc,GAAGjB,WAAW,CAAE,UAAEkB,OAAF,EAAWC,MAAX,EAAuB;AAC1DV,IAAAA,QAAQ,CACPV,GAAG,CAAEoB,MAAF,EAAU,UAAEC,KAAF;AAAA,aAAanB,UAAU,CAAEmB,KAAF,CAAvB;AAAA,KAAV,CADI,EAEPF,OAAO,CAACG,IAFD,CAAR;AAIAL,IAAAA,mBAAmB,CAClBX,OAAO;AACN;AACAD,IAAAA,EAAE,CAAE,8BAAF,CAFI,EAGNc,OAAO,CAACI,KAHF,CADW,EAMlB;AACCC,MAAAA,IAAI,EAAE;AADP,KANkB,CAAnB;AAUA,GAfiC,EAe/B,EAf+B,CAAlC;AAiBA,SAAO,CAAET,QAAF,EAAYC,iBAAZ,EAA+BE,cAA/B,CAAP;AACA,CA9BD;;AAgCA,eAAeT,gBAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { map } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useCallback } from '@wordpress/element';\nimport { cloneBlock } from '@wordpress/blocks';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { store as noticesStore } from '@wordpress/notices';\n\n/**\n * Retrieves the block patterns inserter state.\n *\n * @param {Function} onInsert function called when inserter a list of blocks.\n *\n * @return {Array} Returns the patterns state. (patterns, categories, onSelect handler)\n */\nconst usePatternsState = ( onInsert ) => {\n\tconst { patternCategories, patterns } = useSelect( ( select ) => {\n\t\tconst {\n\t\t\t__experimentalBlockPatterns,\n\t\t\t__experimentalBlockPatternCategories,\n\t\t} = select( 'core/block-editor' ).getSettings();\n\t\treturn {\n\t\t\tpatterns: __experimentalBlockPatterns,\n\t\t\tpatternCategories: __experimentalBlockPatternCategories,\n\t\t};\n\t}, [] );\n\tconst { createSuccessNotice } = useDispatch( noticesStore );\n\tconst onClickPattern = useCallback( ( pattern, blocks ) => {\n\t\tonInsert(\n\t\t\tmap( blocks, ( block ) => cloneBlock( block ) ),\n\t\t\tpattern.name\n\t\t);\n\t\tcreateSuccessNotice(\n\t\t\tsprintf(\n\t\t\t\t/* translators: %s: block pattern title. */\n\t\t\t\t__( 'Block pattern \"%s\" inserted.' ),\n\t\t\t\tpattern.title\n\t\t\t),\n\t\t\t{\n\t\t\t\ttype: 'snackbar',\n\t\t\t}\n\t\t);\n\t}, [] );\n\n\treturn [ patterns, patternCategories, onClickPattern ];\n};\n\nexport default usePatternsState;\n"]}