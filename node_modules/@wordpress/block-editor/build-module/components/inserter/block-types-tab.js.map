{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/block-types-tab.js"],"names":["map","findIndex","flow","sortBy","groupBy","orderBy","__","_x","useMemo","useEffect","BlockTypesList","InserterPanel","useBlockTypesState","getBlockNamespace","item","name","split","MAX_SUGGESTED_ITEMS","BlockTypesTab","rootClientId","onInsert","onHover","showMostUsedBlocks","items","categories","collections","onSelectItem","suggestedItems","slice","uncategorizedItems","filter","category","itemsPerCategory","getCategoryIndex","slug","itemList","itemsPerCollection","result","Object","keys","forEach","namespace","length","categoryItems","title","icon","collection","collectionItems"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA,SAASA,GAAT,EAAcC,SAAd,EAAyBC,IAAzB,EAA+BC,MAA/B,EAAuCC,OAAvC,EAAgDC,OAAhD,QAA+D,QAA/D;AAEA;AACA;AACA;;AACA,SAASC,EAAT,EAAaC,EAAb,QAAuB,iBAAvB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,oBAAnC;AAEA;AACA;AACA;;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,aAAP,MAA0B,SAA1B;AACA,OAAOC,kBAAP,MAA+B,+BAA/B;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAEC,IAAF;AAAA,SAAYA,IAAI,CAACC,IAAL,CAAUC,KAAV,CAAiB,GAAjB,EAAwB,CAAxB,CAAZ;AAAA,CAA1B;;AAEA,IAAMC,mBAAmB,GAAG,CAA5B;AAEA,OAAO,SAASC,aAAT,OAKH;AAAA,MAJHC,YAIG,QAJHA,YAIG;AAAA,MAHHC,QAGG,QAHHA,QAGG;AAAA,MAFHC,OAEG,QAFHA,OAEG;AAAA,MADHC,kBACG,QADHA,kBACG;;AAAA,4BACsDV,kBAAkB,CAC1EO,YAD0E,EAE1EC,QAF0E,CADxE;AAAA;AAAA,MACKG,KADL;AAAA,MACYC,UADZ;AAAA,MACwBC,WADxB;AAAA,MACqCC,YADrC;;AAMH,MAAMC,cAAc,GAAGnB,OAAO,CAAE,YAAM;AACrC,WAAOH,OAAO,CAAEkB,KAAF,EAAS,CAAE,UAAF,CAAT,EAAyB,CAAE,MAAF,CAAzB,CAAP,CAA6CK,KAA7C,CACN,CADM,EAENX,mBAFM,CAAP;AAIA,GAL6B,EAK3B,CAAEM,KAAF,CAL2B,CAA9B;AAOA,MAAMM,kBAAkB,GAAGrB,OAAO,CAAE,YAAM;AACzC,WAAOe,KAAK,CAACO,MAAN,CAAc,UAAEhB,IAAF;AAAA,aAAY,CAAEA,IAAI,CAACiB,QAAnB;AAAA,KAAd,CAAP;AACA,GAFiC,EAE/B,CAAER,KAAF,CAF+B,CAAlC;AAIA,MAAMS,gBAAgB,GAAGxB,OAAO,CAAE,YAAM;AACvC,QAAMyB,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAEnB,IAAF,EAAY;AACpC,aAAOb,SAAS,CACfuB,UADe,EAEf,UAAEO,QAAF;AAAA,eAAgBA,QAAQ,CAACG,IAAT,KAAkBpB,IAAI,CAACiB,QAAvC;AAAA,OAFe,CAAhB;AAIA,KALD;;AAOA,WAAO7B,IAAI,CACV,UAAEiC,QAAF;AAAA,aACCA,QAAQ,CAACL,MAAT,CACC,UAAEhB,IAAF;AAAA,eAAYA,IAAI,CAACiB,QAAL,IAAiBjB,IAAI,CAACiB,QAAL,KAAkB,UAA/C;AAAA,OADD,CADD;AAAA,KADU,EAKV,UAAEI,QAAF;AAAA,aAAgBhC,MAAM,CAAEgC,QAAF,EAAYF,gBAAZ,CAAtB;AAAA,KALU,EAMV,UAAEE,QAAF;AAAA,aAAgB/B,OAAO,CAAE+B,QAAF,EAAY,UAAZ,CAAvB;AAAA,KANU,CAAJ,CAOJZ,KAPI,CAAP;AAQA,GAhB+B,EAgB7B,CAAEA,KAAF,EAASC,UAAT,CAhB6B,CAAhC;AAkBA,MAAMY,kBAAkB,GAAG5B,OAAO,CAAE,YAAM;AACzC;AACA,QAAM6B,MAAM,qBAAQZ,WAAR,CAAZ;;AACAa,IAAAA,MAAM,CAACC,IAAP,CAAad,WAAb,EAA2Be,OAA3B,CAAoC,UAAEC,SAAF,EAAiB;AACpDJ,MAAAA,MAAM,CAAEI,SAAF,CAAN,GAAsBlB,KAAK,CAACO,MAAN,CACrB,UAAEhB,IAAF;AAAA,eAAYD,iBAAiB,CAAEC,IAAF,CAAjB,KAA8B2B,SAA1C;AAAA,OADqB,CAAtB;;AAGA,UAAKJ,MAAM,CAAEI,SAAF,CAAN,CAAoBC,MAApB,KAA+B,CAApC,EAAwC;AACvC,eAAOL,MAAM,CAAEI,SAAF,CAAb;AACA;AACD,KAPD;AASA,WAAOJ,MAAP;AACA,GAbiC,EAa/B,CAAEd,KAAF,EAASE,WAAT,CAb+B,CAAlC,CAnCG,CAkDH;;AACAhB,EAAAA,SAAS,CAAE;AAAA,WAAM;AAAA,aAAMY,OAAO,CAAE,IAAF,CAAb;AAAA,KAAN;AAAA,GAAF,EAA+B,EAA/B,CAAT;AAEA,SACC,2BACGC,kBAAkB,IAAI,CAAC,CAAEK,cAAc,CAACe,MAAxC,IACD,cAAC,aAAD;AAAe,IAAA,KAAK,EAAGnC,EAAE,CAAE,WAAF,EAAe,QAAf;AAAzB,KACC,cAAC,cAAD;AACC,IAAA,KAAK,EAAGoB,cADT;AAEC,IAAA,QAAQ,EAAGD,YAFZ;AAGC,IAAA,OAAO,EAAGL,OAHX;AAIC,IAAA,KAAK,EAAGd,EAAE,CAAE,WAAF,EAAe,QAAf;AAJX,IADD,CAFF,EAYGP,GAAG,CAAEwB,UAAF,EAAc,UAAEO,QAAF,EAAgB;AAClC,QAAMY,aAAa,GAAGX,gBAAgB,CAAED,QAAQ,CAACG,IAAX,CAAtC;;AACA,QAAK,CAAES,aAAF,IAAmB,CAAEA,aAAa,CAACD,MAAxC,EAAiD;AAChD,aAAO,IAAP;AACA;;AACD,WACC,cAAC,aAAD;AACC,MAAA,GAAG,EAAGX,QAAQ,CAACG,IADhB;AAEC,MAAA,KAAK,EAAGH,QAAQ,CAACa,KAFlB;AAGC,MAAA,IAAI,EAAGb,QAAQ,CAACc;AAHjB,OAKC,cAAC,cAAD;AACC,MAAA,KAAK,EAAGF,aADT;AAEC,MAAA,QAAQ,EAAGjB,YAFZ;AAGC,MAAA,OAAO,EAAGL,OAHX;AAIC,MAAA,KAAK,EAAGU,QAAQ,CAACa;AAJlB,MALD,CADD;AAcA,GAnBI,CAZN,EAiCG,CAAEf,kBAAkB,CAACa,MAArB,IACD,cAAC,aAAD;AACC,IAAA,SAAS,EAAC,mDADX;AAEC,IAAA,KAAK,EAAGpC,EAAE,CAAE,eAAF;AAFX,KAIC,cAAC,cAAD;AACC,IAAA,KAAK,EAAGuB,kBADT;AAEC,IAAA,QAAQ,EAAGH,YAFZ;AAGC,IAAA,OAAO,EAAGL,OAHX;AAIC,IAAA,KAAK,EAAGf,EAAE,CAAE,eAAF;AAJX,IAJD,CAlCF,EA+CGN,GAAG,CAAEyB,WAAF,EAAe,UAAEqB,UAAF,EAAcL,SAAd,EAA6B;AAChD,QAAMM,eAAe,GAAGX,kBAAkB,CAAEK,SAAF,CAA1C;;AACA,QAAK,CAAEM,eAAF,IAAqB,CAAEA,eAAe,CAACL,MAA5C,EAAqD;AACpD,aAAO,IAAP;AACA;;AAED,WACC,cAAC,aAAD;AACC,MAAA,GAAG,EAAGD,SADP;AAEC,MAAA,KAAK,EAAGK,UAAU,CAACF,KAFpB;AAGC,MAAA,IAAI,EAAGE,UAAU,CAACD;AAHnB,OAKC,cAAC,cAAD;AACC,MAAA,KAAK,EAAGE,eADT;AAEC,MAAA,QAAQ,EAAGrB,YAFZ;AAGC,MAAA,OAAO,EAAGL,OAHX;AAIC,MAAA,KAAK,EAAGyB,UAAU,CAACF;AAJpB,MALD,CADD;AAcA,GApBI,CA/CN,CADD;AAuEA;AAED,eAAe1B,aAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { map, findIndex, flow, sortBy, groupBy, orderBy } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __, _x } from '@wordpress/i18n';\nimport { useMemo, useEffect } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport BlockTypesList from '../block-types-list';\nimport InserterPanel from './panel';\nimport useBlockTypesState from './hooks/use-block-types-state';\n\nconst getBlockNamespace = ( item ) => item.name.split( '/' )[ 0 ];\n\nconst MAX_SUGGESTED_ITEMS = 6;\n\nexport function BlockTypesTab( {\n\trootClientId,\n\tonInsert,\n\tonHover,\n\tshowMostUsedBlocks,\n} ) {\n\tconst [ items, categories, collections, onSelectItem ] = useBlockTypesState(\n\t\trootClientId,\n\t\tonInsert\n\t);\n\n\tconst suggestedItems = useMemo( () => {\n\t\treturn orderBy( items, [ 'frecency' ], [ 'desc' ] ).slice(\n\t\t\t0,\n\t\t\tMAX_SUGGESTED_ITEMS\n\t\t);\n\t}, [ items ] );\n\n\tconst uncategorizedItems = useMemo( () => {\n\t\treturn items.filter( ( item ) => ! item.category );\n\t}, [ items ] );\n\n\tconst itemsPerCategory = useMemo( () => {\n\t\tconst getCategoryIndex = ( item ) => {\n\t\t\treturn findIndex(\n\t\t\t\tcategories,\n\t\t\t\t( category ) => category.slug === item.category\n\t\t\t);\n\t\t};\n\n\t\treturn flow(\n\t\t\t( itemList ) =>\n\t\t\t\titemList.filter(\n\t\t\t\t\t( item ) => item.category && item.category !== 'reusable'\n\t\t\t\t),\n\t\t\t( itemList ) => sortBy( itemList, getCategoryIndex ),\n\t\t\t( itemList ) => groupBy( itemList, 'category' )\n\t\t)( items );\n\t}, [ items, categories ] );\n\n\tconst itemsPerCollection = useMemo( () => {\n\t\t// Create a new Object to avoid mutating collection.\n\t\tconst result = { ...collections };\n\t\tObject.keys( collections ).forEach( ( namespace ) => {\n\t\t\tresult[ namespace ] = items.filter(\n\t\t\t\t( item ) => getBlockNamespace( item ) === namespace\n\t\t\t);\n\t\t\tif ( result[ namespace ].length === 0 ) {\n\t\t\t\tdelete result[ namespace ];\n\t\t\t}\n\t\t} );\n\n\t\treturn result;\n\t}, [ items, collections ] );\n\n\t// Hide block preview on unmount.\n\tuseEffect( () => () => onHover( null ), [] );\n\n\treturn (\n\t\t<div>\n\t\t\t{ showMostUsedBlocks && !! suggestedItems.length && (\n\t\t\t\t<InserterPanel title={ _x( 'Most used', 'blocks' ) }>\n\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\titems={ suggestedItems }\n\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\tlabel={ _x( 'Most used', 'blocks' ) }\n\t\t\t\t\t/>\n\t\t\t\t</InserterPanel>\n\t\t\t) }\n\n\t\t\t{ map( categories, ( category ) => {\n\t\t\t\tconst categoryItems = itemsPerCategory[ category.slug ];\n\t\t\t\tif ( ! categoryItems || ! categoryItems.length ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t<InserterPanel\n\t\t\t\t\t\tkey={ category.slug }\n\t\t\t\t\t\ttitle={ category.title }\n\t\t\t\t\t\ticon={ category.icon }\n\t\t\t\t\t>\n\t\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\t\titems={ categoryItems }\n\t\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\t\tlabel={ category.title }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</InserterPanel>\n\t\t\t\t);\n\t\t\t} ) }\n\n\t\t\t{ ! uncategorizedItems.length && (\n\t\t\t\t<InserterPanel\n\t\t\t\t\tclassName=\"block-editor-inserter__uncategorized-blocks-panel\"\n\t\t\t\t\ttitle={ __( 'Uncategorized' ) }\n\t\t\t\t>\n\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\titems={ uncategorizedItems }\n\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\tlabel={ __( 'Uncategorized' ) }\n\t\t\t\t\t/>\n\t\t\t\t</InserterPanel>\n\t\t\t) }\n\n\t\t\t{ map( collections, ( collection, namespace ) => {\n\t\t\t\tconst collectionItems = itemsPerCollection[ namespace ];\n\t\t\t\tif ( ! collectionItems || ! collectionItems.length ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<InserterPanel\n\t\t\t\t\t\tkey={ namespace }\n\t\t\t\t\t\ttitle={ collection.title }\n\t\t\t\t\t\ticon={ collection.icon }\n\t\t\t\t\t>\n\t\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\t\titems={ collectionItems }\n\t\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\t\tlabel={ collection.title }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</InserterPanel>\n\t\t\t\t);\n\t\t\t} ) }\n\t\t</div>\n\t);\n}\n\nexport default BlockTypesTab;\n"]}