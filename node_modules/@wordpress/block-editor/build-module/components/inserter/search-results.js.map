{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/search-results.js"],"names":["orderBy","isEmpty","useMemo","useEffect","__","_n","sprintf","VisuallyHidden","useDebounce","useAsyncList","speak","BlockTypesList","BlockPatternsList","__experimentalInserterMenuExtension","InserterPanel","InserterNoResults","useInsertionPoint","usePatternsState","useBlockTypesState","searchBlockItems","searchItems","InserterSearchResults","filterValue","onSelect","onHover","rootClientId","clientId","isAppender","selectBlockOnInsert","maxBlockPatterns","maxBlockTypes","showBlockDirectory","isDraggable","debouncedSpeak","destinationRootClientId","onInsertBlocks","blockTypes","blockTypeCategories","blockTypeCollections","onSelectBlockType","patterns","onSelectBlockPattern","filteredBlockTypes","results","undefined","slice","filteredBlockPatterns","count","length","resultsFoundMessage","currentShownPatterns","hasItems","fills"],"mappings":";;;AAAA;AACA;AACA;AACA,SAASA,OAAT,EAAkBC,OAAlB,QAAiC,QAAjC;AAEA;AACA;AACA;;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,oBAAnC;AACA,SAASC,EAAT,EAAaC,EAAb,EAAiBC,OAAjB,QAAgC,iBAAhC;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,oBAA1C;AACA,SAASC,KAAT,QAAsB,iBAAtB;AAEA;AACA;AACA;;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,iBAAP,MAA8B,wBAA9B;AACA,OAAOC,mCAAP,MAAgD,4BAAhD;AACA,OAAOC,aAAP,MAA0B,SAA1B;AACA,OAAOC,iBAAP,MAA8B,cAA9B;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,kBAAP,MAA+B,+BAA/B;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,gBAA9C;;AAEA,SAASC,qBAAT,OAYI;AAAA,MAXHC,WAWG,QAXHA,WAWG;AAAA,MAVHC,QAUG,QAVHA,QAUG;AAAA,MATHC,OASG,QATHA,OASG;AAAA,MARHC,YAQG,QARHA,YAQG;AAAA,MAPHC,QAOG,QAPHA,QAOG;AAAA,MANHC,UAMG,QANHA,UAMG;AAAA,MALHC,mBAKG,QALHA,mBAKG;AAAA,MAJHC,gBAIG,QAJHA,gBAIG;AAAA,MAHHC,aAGG,QAHHA,aAGG;AAAA,mCAFHC,kBAEG;AAAA,MAFHA,kBAEG,sCAFkB,KAElB;AAAA,8BADHC,WACG;AAAA,MADHA,WACG,iCADW,IACX;AACH,MAAMC,cAAc,GAAGzB,WAAW,CAAEE,KAAF,EAAS,GAAT,CAAlC;;AADG,2BAGiDM,iBAAiB,CAAE;AACtEO,IAAAA,QAAQ,EAARA,QADsE;AAEtEE,IAAAA,YAAY,EAAZA,YAFsE;AAGtEC,IAAAA,QAAQ,EAARA,QAHsE;AAItEC,IAAAA,UAAU,EAAVA,UAJsE;AAKtEC,IAAAA,mBAAmB,EAAnBA;AALsE,GAAF,CAHlE;AAAA;AAAA,MAGKM,uBAHL;AAAA,MAG8BC,cAH9B;;AAAA,4BAeCjB,kBAAkB,CAAEgB,uBAAF,EAA2BC,cAA3B,CAfnB;AAAA;AAAA,MAWFC,UAXE;AAAA,MAYFC,mBAZE;AAAA,MAaFC,oBAbE;AAAA,MAcFC,iBAdE;;AAAA,0BAgB0CtB,gBAAgB,CAC5DkB,cAD4D,CAhB1D;AAAA;AAAA,MAgBKK,QAhBL;AAAA,MAgBiBC,oBAhBjB;;AAoBH,MAAMC,kBAAkB,GAAGxC,OAAO,CAAE,YAAM;AACzC,QAAMyC,OAAO,GAAGxB,gBAAgB,CAC/BnB,OAAO,CAAEoC,UAAF,EAAc,CAAE,UAAF,CAAd,EAA8B,CAAE,MAAF,CAA9B,CADwB,EAE/BC,mBAF+B,EAG/BC,oBAH+B,EAI/BhB,WAJ+B,CAAhC;AAOA,WAAOQ,aAAa,KAAKc,SAAlB,GACJD,OAAO,CAACE,KAAR,CAAe,CAAf,EAAkBf,aAAlB,CADI,GAEJa,OAFH;AAGA,GAXiC,EAW/B,CACFrB,WADE,EAEFc,UAFE,EAGFC,mBAHE,EAIFC,oBAJE,EAKFR,aALE,CAX+B,CAAlC;AAmBA,MAAMgB,qBAAqB,GAAG5C,OAAO,CAAE,YAAM;AAC5C,QAAMyC,OAAO,GAAGvB,WAAW,CAAEoB,QAAF,EAAYlB,WAAZ,CAA3B;AACA,WAAOO,gBAAgB,KAAKe,SAArB,GACJD,OAAO,CAACE,KAAR,CAAe,CAAf,EAAkBhB,gBAAlB,CADI,GAEJc,OAFH;AAGA,GALoC,EAKlC,CAAErB,WAAF,EAAekB,QAAf,EAAyBX,gBAAzB,CALkC,CAArC,CAvCG,CA8CH;;AACA1B,EAAAA,SAAS,CAAE,YAAM;AAChB,QAAK,CAAEmB,WAAP,EAAqB;AACpB;AACA;;AACD,QAAMyB,KAAK,GAAGL,kBAAkB,CAACM,MAAnB,GAA4BF,qBAAqB,CAACE,MAAhE;AACA,QAAMC,mBAAmB,GAAG3C,OAAO;AAClC;AACAD,IAAAA,EAAE,CAAE,kBAAF,EAAsB,mBAAtB,EAA2C0C,KAA3C,CAFgC,EAGlCA,KAHkC,CAAnC;AAKAd,IAAAA,cAAc,CAAEgB,mBAAF,CAAd;AACA,GAXQ,EAWN,CAAE3B,WAAF,EAAeW,cAAf,CAXM,CAAT;AAaA,MAAMiB,oBAAoB,GAAGzC,YAAY,CAAEqC,qBAAF,CAAzC;AAEA,MAAMK,QAAQ,GACb,CAAElD,OAAO,CAAEyC,kBAAF,CAAT,IAAmC,CAAEzC,OAAO,CAAE6C,qBAAF,CAD7C;AAGA,SACC,8BACG,CAAEf,kBAAF,IAAwB,CAAEoB,QAA1B,IAAsC,cAAC,iBAAD,OADzC,EAGG,CAAC,CAAET,kBAAkB,CAACM,MAAtB,IACD,cAAC,aAAD;AACC,IAAA,KAAK,EACJ,cAAC,cAAD,QAAkB5C,EAAE,CAAE,QAAF,CAApB;AAFF,KAKC,cAAC,cAAD;AACC,IAAA,KAAK,EAAGsC,kBADT;AAEC,IAAA,QAAQ,EAAGH,iBAFZ;AAGC,IAAA,OAAO,EAAGf,OAHX;AAIC,IAAA,KAAK,EAAGpB,EAAE,CAAE,QAAF,CAJX;AAKC,IAAA,WAAW,EAAG4B;AALf,IALD,CAJF,EAmBG,CAAC,CAAEU,kBAAkB,CAACM,MAAtB,IACD,CAAC,CAAEF,qBAAqB,CAACE,MADxB,IAEA;AAAK,IAAA,SAAS,EAAC;AAAf,IArBH,EAwBG,CAAC,CAAEF,qBAAqB,CAACE,MAAzB,IACD,cAAC,aAAD;AACC,IAAA,KAAK,EACJ,cAAC,cAAD,QACG5C,EAAE,CAAE,gBAAF,CADL;AAFF,KAOC;AAAK,IAAA,SAAS,EAAC;AAAf,KACC,cAAC,iBAAD;AACC,IAAA,aAAa,EAAG8C,oBADjB;AAEC,IAAA,aAAa,EAAGJ,qBAFjB;AAGC,IAAA,cAAc,EAAGL,oBAHlB;AAIC,IAAA,WAAW,EAAGT;AAJf,IADD,CAPD,CAzBF,EA2CGD,kBAAkB,IACnB,cAAC,mCAAD,CAAqC,IAArC;AACC,IAAA,SAAS,EAAG;AACXR,MAAAA,QAAQ,EAAEgB,iBADC;AAEXf,MAAAA,OAAO,EAAPA,OAFW;AAGXF,MAAAA,WAAW,EAAXA,WAHW;AAIX6B,MAAAA,QAAQ,EAARA,QAJW;AAKX1B,MAAAA,YAAY,EAAES;AALH;AADb,KASG,UAAEkB,KAAF,EAAa;AACd,QAAKA,KAAK,CAACJ,MAAX,EAAoB;AACnB,aAAOI,KAAP;AACA;;AACD,QAAK,CAAED,QAAP,EAAkB;AACjB,aAAO,cAAC,iBAAD,OAAP;AACA;;AACD,WAAO,IAAP;AACA,GAjBF,CA5CF,CADD;AAmEA;;AAED,eAAe9B,qBAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { orderBy, isEmpty } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useMemo, useEffect } from '@wordpress/element';\nimport { __, _n, sprintf } from '@wordpress/i18n';\nimport { VisuallyHidden } from '@wordpress/components';\nimport { useDebounce, useAsyncList } from '@wordpress/compose';\nimport { speak } from '@wordpress/a11y';\n\n/**\n * Internal dependencies\n */\nimport BlockTypesList from '../block-types-list';\nimport BlockPatternsList from '../block-patterns-list';\nimport __experimentalInserterMenuExtension from '../inserter-menu-extension';\nimport InserterPanel from './panel';\nimport InserterNoResults from './no-results';\nimport useInsertionPoint from './hooks/use-insertion-point';\nimport usePatternsState from './hooks/use-patterns-state';\nimport useBlockTypesState from './hooks/use-block-types-state';\nimport { searchBlockItems, searchItems } from './search-items';\n\nfunction InserterSearchResults( {\n\tfilterValue,\n\tonSelect,\n\tonHover,\n\trootClientId,\n\tclientId,\n\tisAppender,\n\tselectBlockOnInsert,\n\tmaxBlockPatterns,\n\tmaxBlockTypes,\n\tshowBlockDirectory = false,\n\tisDraggable = true,\n} ) {\n\tconst debouncedSpeak = useDebounce( speak, 500 );\n\n\tconst [ destinationRootClientId, onInsertBlocks ] = useInsertionPoint( {\n\t\tonSelect,\n\t\trootClientId,\n\t\tclientId,\n\t\tisAppender,\n\t\tselectBlockOnInsert,\n\t} );\n\tconst [\n\t\tblockTypes,\n\t\tblockTypeCategories,\n\t\tblockTypeCollections,\n\t\tonSelectBlockType,\n\t] = useBlockTypesState( destinationRootClientId, onInsertBlocks );\n\tconst [ patterns, , onSelectBlockPattern ] = usePatternsState(\n\t\tonInsertBlocks\n\t);\n\n\tconst filteredBlockTypes = useMemo( () => {\n\t\tconst results = searchBlockItems(\n\t\t\torderBy( blockTypes, [ 'frecency' ], [ 'desc' ] ),\n\t\t\tblockTypeCategories,\n\t\t\tblockTypeCollections,\n\t\t\tfilterValue\n\t\t);\n\n\t\treturn maxBlockTypes !== undefined\n\t\t\t? results.slice( 0, maxBlockTypes )\n\t\t\t: results;\n\t}, [\n\t\tfilterValue,\n\t\tblockTypes,\n\t\tblockTypeCategories,\n\t\tblockTypeCollections,\n\t\tmaxBlockTypes,\n\t] );\n\n\tconst filteredBlockPatterns = useMemo( () => {\n\t\tconst results = searchItems( patterns, filterValue );\n\t\treturn maxBlockPatterns !== undefined\n\t\t\t? results.slice( 0, maxBlockPatterns )\n\t\t\t: results;\n\t}, [ filterValue, patterns, maxBlockPatterns ] );\n\n\t// Announce search results on change\n\tuseEffect( () => {\n\t\tif ( ! filterValue ) {\n\t\t\treturn;\n\t\t}\n\t\tconst count = filteredBlockTypes.length + filteredBlockPatterns.length;\n\t\tconst resultsFoundMessage = sprintf(\n\t\t\t/* translators: %d: number of results. */\n\t\t\t_n( '%d result found.', '%d results found.', count ),\n\t\t\tcount\n\t\t);\n\t\tdebouncedSpeak( resultsFoundMessage );\n\t}, [ filterValue, debouncedSpeak ] );\n\n\tconst currentShownPatterns = useAsyncList( filteredBlockPatterns );\n\n\tconst hasItems =\n\t\t! isEmpty( filteredBlockTypes ) || ! isEmpty( filteredBlockPatterns );\n\n\treturn (\n\t\t<>\n\t\t\t{ ! showBlockDirectory && ! hasItems && <InserterNoResults /> }\n\n\t\t\t{ !! filteredBlockTypes.length && (\n\t\t\t\t<InserterPanel\n\t\t\t\t\ttitle={\n\t\t\t\t\t\t<VisuallyHidden>{ __( 'Blocks' ) }</VisuallyHidden>\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\titems={ filteredBlockTypes }\n\t\t\t\t\t\tonSelect={ onSelectBlockType }\n\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\tlabel={ __( 'Blocks' ) }\n\t\t\t\t\t\tisDraggable={ isDraggable }\n\t\t\t\t\t/>\n\t\t\t\t</InserterPanel>\n\t\t\t) }\n\n\t\t\t{ !! filteredBlockTypes.length &&\n\t\t\t\t!! filteredBlockPatterns.length && (\n\t\t\t\t\t<div className=\"block-editor-inserter__quick-inserter-separator\" />\n\t\t\t\t) }\n\n\t\t\t{ !! filteredBlockPatterns.length && (\n\t\t\t\t<InserterPanel\n\t\t\t\t\ttitle={\n\t\t\t\t\t\t<VisuallyHidden>\n\t\t\t\t\t\t\t{ __( 'Block Patterns' ) }\n\t\t\t\t\t\t</VisuallyHidden>\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"block-editor-inserter__quick-inserter-patterns\">\n\t\t\t\t\t\t<BlockPatternsList\n\t\t\t\t\t\t\tshownPatterns={ currentShownPatterns }\n\t\t\t\t\t\t\tblockPatterns={ filteredBlockPatterns }\n\t\t\t\t\t\t\tonClickPattern={ onSelectBlockPattern }\n\t\t\t\t\t\t\tisDraggable={ isDraggable }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</InserterPanel>\n\t\t\t) }\n\n\t\t\t{ showBlockDirectory && (\n\t\t\t\t<__experimentalInserterMenuExtension.Slot\n\t\t\t\t\tfillProps={ {\n\t\t\t\t\t\tonSelect: onSelectBlockType,\n\t\t\t\t\t\tonHover,\n\t\t\t\t\t\tfilterValue,\n\t\t\t\t\t\thasItems,\n\t\t\t\t\t\trootClientId: destinationRootClientId,\n\t\t\t\t\t} }\n\t\t\t\t>\n\t\t\t\t\t{ ( fills ) => {\n\t\t\t\t\t\tif ( fills.length ) {\n\t\t\t\t\t\t\treturn fills;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( ! hasItems ) {\n\t\t\t\t\t\t\treturn <InserterNoResults />;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t} }\n\t\t\t\t</__experimentalInserterMenuExtension.Slot>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nexport default InserterSearchResults;\n"]}