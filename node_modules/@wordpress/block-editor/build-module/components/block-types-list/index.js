import _extends from "@babel/runtime/helpers/esm/extends";
import { createElement } from "@wordpress/element";

/**
 * WordPress dependencies
 */
import { getBlockMenuDefaultClassName } from '@wordpress/blocks';
import { __unstableComposite as Composite, __unstableUseCompositeState as useCompositeState } from '@wordpress/components';
/**
 * Internal dependencies
 */

import InserterListItem from '../inserter-list-item';

function BlockTypesList(_ref) {
  var _ref$items = _ref.items,
      items = _ref$items === void 0 ? [] : _ref$items,
      onSelect = _ref.onSelect,
      _ref$onHover = _ref.onHover,
      onHover = _ref$onHover === void 0 ? function () {} : _ref$onHover,
      children = _ref.children,
      label = _ref.label,
      _ref$isDraggable = _ref.isDraggable,
      isDraggable = _ref$isDraggable === void 0 ? true : _ref$isDraggable;
  var composite = useCompositeState();
  return (
    /*
     * Disable reason: The `list` ARIA role is redundant but
     * Safari+VoiceOver won't announce the list otherwise.
     */

    /* eslint-disable jsx-a11y/no-redundant-roles */
    createElement(Composite, _extends({}, composite, {
      role: "listbox",
      className: "block-editor-block-types-list",
      "aria-label": label
    }), items.map(function (item) {
      return createElement(InserterListItem, {
        key: item.id,
        item: item,
        className: getBlockMenuDefaultClassName(item.id),
        onSelect: onSelect,
        onHover: onHover,
        composite: composite,
        isDraggable: isDraggable
      });
    }), children)
    /* eslint-enable jsx-a11y/no-redundant-roles */

  );
}

export default BlockTypesList;
//# sourceMappingURL=index.js.map