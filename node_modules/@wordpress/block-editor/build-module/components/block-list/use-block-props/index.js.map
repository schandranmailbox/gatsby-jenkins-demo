{"version":3,"sources":["@wordpress/block-editor/src/components/block-list/use-block-props/index.js"],"names":["classnames","omit","useRef","useEffect","useContext","__","sprintf","__unstableGetBlockProps","getBlockProps","useMovingAnimation","SetBlockNodes","BlockListBlockContext","useFocusFirstElement","useIsHovered","useBlockMovingModeClassNames","useEventHandlers","useBlockProps","props","__unstableIsHtml","fallbackRef","ref","setBlockNodes","clientId","isSelected","isFirstMultiSelected","isLastMultiSelected","isPartOfMultiSelection","enableAnimation","index","className","name","mode","blockTitle","wrapperProps","node","current","nodes","blockLabel","isHovered","blockMovingModeClassNames","htmlSuffix","id","tabIndex","role","style","save"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { omit } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useRef, useEffect, useContext } from '@wordpress/element';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { __unstableGetBlockProps as getBlockProps } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport useMovingAnimation from '../../use-moving-animation';\nimport { SetBlockNodes } from '../';\nimport { BlockListBlockContext } from '../block';\nimport { useFocusFirstElement } from './use-focus-first-element';\nimport { useIsHovered } from './use-is-hovered';\nimport { useBlockMovingModeClassNames } from './use-block-moving-mode-class-names';\nimport { useEventHandlers } from './use-event-handlers';\n\n/**\n * This hook is used to lightly mark an element as a block element. The element\n * should be the outermost element of a block. Call this hook and pass the\n * returned props to the element to mark as a block. If you define a ref for the\n * element, it is important to pass the ref to this hook, which the hook in turn\n * will pass to the component through the props it returns. Optionally, you can\n * also pass any other props through this hook, and they will be merged and\n * returned.\n *\n * @param {Object}  props   Optional. Props to pass to the element. Must contain\n *                          the ref if one is defined.\n * @param {Object}  options Options for internal use only.\n * @param {boolean} options.__unstableIsHtml\n *\n * @return {Object} Props to pass to the element to mark as a block.\n */\nexport function useBlockProps( props = {}, { __unstableIsHtml } = {} ) {\n\tconst fallbackRef = useRef();\n\tconst ref = props.ref || fallbackRef;\n\tconst setBlockNodes = useContext( SetBlockNodes );\n\tconst {\n\t\tclientId,\n\t\tisSelected,\n\t\tisFirstMultiSelected,\n\t\tisLastMultiSelected,\n\t\tisPartOfMultiSelection,\n\t\tenableAnimation,\n\t\tindex,\n\t\tclassName,\n\t\tname,\n\t\tmode,\n\t\tblockTitle,\n\t\twrapperProps = {},\n\t} = useContext( BlockListBlockContext );\n\n\t// Provide the selected node, or the first and last nodes of a multi-\n\t// selection, so it can be used to position the contextual block toolbar.\n\t// We only provide what is necessary, and remove the nodes again when they\n\t// are no longer selected.\n\tuseEffect( () => {\n\t\tif ( isSelected || isFirstMultiSelected || isLastMultiSelected ) {\n\t\t\tconst node = ref.current;\n\t\t\tsetBlockNodes( ( nodes ) => ( {\n\t\t\t\t...nodes,\n\t\t\t\t[ clientId ]: node,\n\t\t\t} ) );\n\t\t\treturn () => {\n\t\t\t\tsetBlockNodes( ( nodes ) => omit( nodes, clientId ) );\n\t\t\t};\n\t\t}\n\t}, [ isSelected, isFirstMultiSelected, isLastMultiSelected ] );\n\n\t// Set new block node if it changes.\n\t// This effect should happen on every render, so no dependencies should be\n\t// added.\n\tuseEffect( () => {\n\t\tconst node = ref.current;\n\t\tsetBlockNodes( ( nodes ) => {\n\t\t\tif ( ! nodes[ clientId ] || nodes[ clientId ] === node ) {\n\t\t\t\treturn nodes;\n\t\t\t}\n\n\t\t\treturn { ...nodes, [ clientId ]: node };\n\t\t} );\n\t} );\n\n\t// translators: %s: Type of block (i.e. Text, Image etc)\n\tconst blockLabel = sprintf( __( 'Block: %s' ), blockTitle );\n\n\tuseFocusFirstElement( ref, clientId );\n\tuseEventHandlers( ref, clientId );\n\n\t// Block Reordering animation\n\tuseMovingAnimation(\n\t\tref,\n\t\tisSelected || isPartOfMultiSelection,\n\t\tisSelected || isFirstMultiSelected,\n\t\tenableAnimation,\n\t\tindex\n\t);\n\n\tconst isHovered = useIsHovered( ref );\n\tconst blockMovingModeClassNames = useBlockMovingModeClassNames( clientId );\n\tconst htmlSuffix = mode === 'html' && ! __unstableIsHtml ? '-visual' : '';\n\n\treturn {\n\t\t...wrapperProps,\n\t\t...props,\n\t\tref,\n\t\tid: `block-${ clientId }${ htmlSuffix }`,\n\t\ttabIndex: 0,\n\t\trole: 'group',\n\t\t'aria-label': blockLabel,\n\t\t'data-block': clientId,\n\t\t'data-type': name,\n\t\t'data-title': blockTitle,\n\t\tclassName: classnames(\n\t\t\tclassName,\n\t\t\tprops.className,\n\t\t\twrapperProps.className,\n\t\t\tblockMovingModeClassNames,\n\t\t\t{ 'is-hovered': isHovered }\n\t\t),\n\t\tstyle: { ...wrapperProps.style, ...props.style },\n\t};\n}\n\n/**\n * Call within a save function to get the props for the block wrapper.\n *\n * @param {Object} props Optional. Props to pass to the element.\n */\nuseBlockProps.save = getBlockProps;\n"]}