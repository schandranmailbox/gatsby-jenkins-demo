import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import scrollIntoView from 'dom-scroll-into-view';
/**
 * WordPress dependencies
 */

import { useEffect, useRef } from '@wordpress/element';
import { useSelect } from '@wordpress/data';
import { getScrollContainer } from '@wordpress/dom';
/**
 * Internal dependencies
 */

import { getBlockDOMNode } from '../../utils/dom';
export function useScrollMultiSelectionIntoView(ref) {
  var selectionEnd = useSelect(function (select) {
    var _select = select('core/block-editor'),
        getBlockSelectionEnd = _select.getBlockSelectionEnd,
        hasMultiSelection = _select.hasMultiSelection,
        isMultiSelecting = _select.isMultiSelecting;

    var blockSelectionEnd = getBlockSelectionEnd();

    if (!blockSelectionEnd || isMultiSelecting() || !hasMultiSelection()) {
      return;
    }

    return blockSelectionEnd;
  }, []);
  useEffect(function () {
    if (!selectionEnd) {
      return;
    }

    var ownerDocument = ref.current.ownerDocument;
    var extentNode = getBlockDOMNode(selectionEnd, ownerDocument);

    if (!extentNode) {
      return;
    }

    var scrollContainer = getScrollContainer(extentNode); // If there's no scroll container, it follows that there's no scrollbar
    // and thus there's no need to try to scroll into view.

    if (!scrollContainer) {
      return;
    }

    scrollIntoView(extentNode, scrollContainer, {
      onlyScrollIfNeeded: true
    });
  }, [selectionEnd]);
}
/**
 * Scrolls the multi block selection end into view if not in view already. This
 * is important to do after selection by keyboard.
 */

export default function MultiSelectScrollIntoView() {
  var ref = useRef();
  useScrollMultiSelectionIntoView(ref);
  return createElement("div", {
    ref: ref
  });
}
//# sourceMappingURL=index.js.map