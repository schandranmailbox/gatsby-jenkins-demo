import { createElement } from "@wordpress/element";

/**
 * WordPress dependencies
 */
import { MenuItem } from '@wordpress/components';
import { __ } from '@wordpress/i18n';
import { isReusableBlock } from '@wordpress/blocks';
import { useSelect } from '@wordpress/data';
import { BlockSettingsMenuControls } from '@wordpress/block-editor';
import { addQueryArgs } from '@wordpress/url';

function ReusableBlocksManageButton(_ref) {
  var clientId = _ref.clientId;

  var _useSelect = useSelect(function (select) {
    var _select = select('core/block-editor'),
        getBlock = _select.getBlock;

    var _select2 = select('core'),
        canUser = _select2.canUser;

    var reusableBlock = getBlock(clientId);
    return {
      isVisible: !!reusableBlock && isReusableBlock(reusableBlock) && !!canUser('update', 'blocks', reusableBlock.attributes.ref)
    };
  }, [clientId]),
      isVisible = _useSelect.isVisible;

  if (!isVisible) {
    return null;
  }

  return createElement(BlockSettingsMenuControls, null, createElement(MenuItem, {
    href: addQueryArgs('edit.php', {
      post_type: 'wp_block'
    })
  }, __('Manage Reusable blocks')));
}

export default ReusableBlocksManageButton;
//# sourceMappingURL=reusable-blocks-manage-button.js.map