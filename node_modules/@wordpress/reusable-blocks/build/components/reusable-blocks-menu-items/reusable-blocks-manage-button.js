"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _components = require("@wordpress/components");

var _i18n = require("@wordpress/i18n");

var _blocks = require("@wordpress/blocks");

var _data = require("@wordpress/data");

var _blockEditor = require("@wordpress/block-editor");

var _url = require("@wordpress/url");

/**
 * WordPress dependencies
 */
function ReusableBlocksManageButton(_ref) {
  var clientId = _ref.clientId;

  var _useSelect = (0, _data.useSelect)(function (select) {
    var _select = select('core/block-editor'),
        getBlock = _select.getBlock;

    var _select2 = select('core'),
        canUser = _select2.canUser;

    var reusableBlock = getBlock(clientId);
    return {
      isVisible: !!reusableBlock && (0, _blocks.isReusableBlock)(reusableBlock) && !!canUser('update', 'blocks', reusableBlock.attributes.ref)
    };
  }, [clientId]),
      isVisible = _useSelect.isVisible;

  if (!isVisible) {
    return null;
  }

  return (0, _element.createElement)(_blockEditor.BlockSettingsMenuControls, null, (0, _element.createElement)(_components.MenuItem, {
    href: (0, _url.addQueryArgs)('edit.php', {
      post_type: 'wp_block'
    })
  }, (0, _i18n.__)('Manage Reusable blocks')));
}

var _default = ReusableBlocksManageButton;
exports.default = _default;
//# sourceMappingURL=reusable-blocks-manage-button.js.map