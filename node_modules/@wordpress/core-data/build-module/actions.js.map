{"version":3,"sources":["@wordpress/core-data/src/actions.js"],"names":["deleteEntityRecord","editEntityRecord","undo","redo","saveEntityRecord","__experimentalBatch","saveEditedEntityRecord","castArray","get","isEqual","find","v4","uuid","controls","apiFetch","__unstableAwaitPromise","addQueryArgs","receiveItems","removeItems","receiveQueriedItems","getKindEntities","DEFAULT_ENTITY_KEY","__unstableAcquireStoreLock","__unstableReleaseStoreLock","createBatch","getDispatch","receiveUserQuery","queryID","users","type","receiveCurrentUser","currentUser","addEntities","entities","receiveEntityRecords","kind","name","records","query","invalidateCache","edits","map","record","status","title","action","receiveCurrentTheme","currentTheme","receiveThemeSupports","themeSupports","receiveEmbedPreview","url","preview","recordId","__unstableFetch","entity","deletedRecord","exclusive","lock","path","baseURL","options","method","error","select","Error","transientEdits","mergedEdits","editedRecord","edit","Object","keys","reduce","acc","key","recordValue","editedRecordValue","value","undefined","meta","undoIgnore","undoEdit","isUndo","redoEdit","isRedo","__unstableCreateUndoLevel","isAutosave","entityIdKey","entries","evaluatedValue","persistedRecord","currentUserId","id","autosavePost","data","includes","updatedRecord","newRecord","receiveAutosaves","__unstablePrePersist","requests","batch","dispatch","api","add","resultPromises","request","Promise","all","run","results","receiveUploadPermissions","hasUploadPermissions","isAllowed","receiveUserPermission","postId","autosaves"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { castArray, get, isEqual, find } from 'lodash';\nimport { v4 as uuid } from 'uuid';\n\n/**\n * WordPress dependencies\n */\nimport { controls } from '@wordpress/data';\nimport { apiFetch, __unstableAwaitPromise } from '@wordpress/data-controls';\nimport { addQueryArgs } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport { receiveItems, removeItems, receiveQueriedItems } from './queried-data';\nimport { getKindEntities, DEFAULT_ENTITY_KEY } from './entities';\nimport {\n\t__unstableAcquireStoreLock,\n\t__unstableReleaseStoreLock,\n} from './locks';\nimport { createBatch } from './batch';\nimport { getDispatch } from './controls';\n\n/**\n * Returns an action object used in signalling that authors have been received.\n *\n * @param {string}       queryID Query ID.\n * @param {Array|Object} users   Users received.\n *\n * @return {Object} Action object.\n */\nexport function receiveUserQuery( queryID, users ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_QUERY',\n\t\tusers: castArray( users ),\n\t\tqueryID,\n\t};\n}\n\n/**\n * Returns an action used in signalling that the current user has been received.\n *\n * @param {Object} currentUser Current user object.\n *\n * @return {Object} Action object.\n */\nexport function receiveCurrentUser( currentUser ) {\n\treturn {\n\t\ttype: 'RECEIVE_CURRENT_USER',\n\t\tcurrentUser,\n\t};\n}\n\n/**\n * Returns an action object used in adding new entities.\n *\n * @param {Array} entities  Entities received.\n *\n * @return {Object} Action object.\n */\nexport function addEntities( entities ) {\n\treturn {\n\t\ttype: 'ADD_ENTITIES',\n\t\tentities,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that entity records have been received.\n *\n * @param {string}       kind            Kind of the received entity.\n * @param {string}       name            Name of the received entity.\n * @param {Array|Object} records         Records received.\n * @param {?Object}      query           Query Object.\n * @param {?boolean}     invalidateCache Should invalidate query caches.\n * @param {?Object}      edits           Edits to reset.\n * @return {Object} Action object.\n */\nexport function receiveEntityRecords(\n\tkind,\n\tname,\n\trecords,\n\tquery,\n\tinvalidateCache = false,\n\tedits\n) {\n\t// Auto drafts should not have titles, but some plugins rely on them so we can't filter this\n\t// on the server.\n\tif ( kind === 'postType' ) {\n\t\trecords = castArray( records ).map( ( record ) =>\n\t\t\trecord.status === 'auto-draft' ? { ...record, title: '' } : record\n\t\t);\n\t}\n\tlet action;\n\tif ( query ) {\n\t\taction = receiveQueriedItems( records, query, edits );\n\t} else {\n\t\taction = receiveItems( records, edits );\n\t}\n\n\treturn {\n\t\t...action,\n\t\tkind,\n\t\tname,\n\t\tinvalidateCache,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the current theme has been received.\n *\n * @param {Object} currentTheme The current theme.\n *\n * @return {Object} Action object.\n */\nexport function receiveCurrentTheme( currentTheme ) {\n\treturn {\n\t\ttype: 'RECEIVE_CURRENT_THEME',\n\t\tcurrentTheme,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the index has been received.\n *\n * @param {Object} themeSupports Theme support for the current theme.\n *\n * @return {Object} Action object.\n */\nexport function receiveThemeSupports( themeSupports ) {\n\treturn {\n\t\ttype: 'RECEIVE_THEME_SUPPORTS',\n\t\tthemeSupports,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the preview data for\n * a given URl has been received.\n *\n * @param {string}  url     URL to preview the embed for.\n * @param {*}       preview Preview data.\n *\n * @return {Object} Action object.\n */\nexport function receiveEmbedPreview( url, preview ) {\n\treturn {\n\t\ttype: 'RECEIVE_EMBED_PREVIEW',\n\t\turl,\n\t\tpreview,\n\t};\n}\n\n/**\n * Action triggered to delete an entity record.\n *\n * @param {string}   kind                      Kind of the deleted entity.\n * @param {string}   name                      Name of the deleted entity.\n * @param {string}   recordId                  Record ID of the deleted entity.\n * @param {?Object}  query                     Special query parameters for the\n *                                             DELETE API call.\n * @param {Object}   [options]                 Delete options.\n * @param {Function} [options.__unstableFetch] Internal use only. Function to\n *                                             call instead of `apiFetch()`.\n *                                             Must return a control descriptor.\n */\nexport function* deleteEntityRecord(\n\tkind,\n\tname,\n\trecordId,\n\tquery,\n\t{ __unstableFetch = null } = {}\n) {\n\tconst entities = yield getKindEntities( kind );\n\tconst entity = find( entities, { kind, name } );\n\tlet error;\n\tlet deletedRecord = false;\n\tif ( ! entity ) {\n\t\treturn;\n\t}\n\n\tconst lock = yield* __unstableAcquireStoreLock(\n\t\t'core',\n\t\t[ 'entities', 'data', kind, name, recordId ],\n\t\t{ exclusive: true }\n\t);\n\ttry {\n\t\tyield {\n\t\t\ttype: 'DELETE_ENTITY_RECORD_START',\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId,\n\t\t};\n\n\t\ttry {\n\t\t\tlet path = `${ entity.baseURL }/${ recordId }`;\n\n\t\t\tif ( query ) {\n\t\t\t\tpath = addQueryArgs( path, query );\n\t\t\t}\n\n\t\t\tconst options = {\n\t\t\t\tpath,\n\t\t\t\tmethod: 'DELETE',\n\t\t\t};\n\t\t\tif ( __unstableFetch ) {\n\t\t\t\tdeletedRecord = yield __unstableAwaitPromise(\n\t\t\t\t\t__unstableFetch( options )\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tdeletedRecord = yield apiFetch( options );\n\t\t\t}\n\n\t\t\tyield removeItems( kind, name, recordId, true );\n\t\t} catch ( _error ) {\n\t\t\terror = _error;\n\t\t}\n\n\t\tyield {\n\t\t\ttype: 'DELETE_ENTITY_RECORD_FINISH',\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId,\n\t\t\terror,\n\t\t};\n\n\t\treturn deletedRecord;\n\t} finally {\n\t\tyield* __unstableReleaseStoreLock( lock );\n\t}\n}\n\n/**\n * Returns an action object that triggers an\n * edit to an entity record.\n *\n * @param {string} kind     Kind of the edited entity record.\n * @param {string} name     Name of the edited entity record.\n * @param {number} recordId Record ID of the edited entity record.\n * @param {Object} edits    The edits.\n * @param {Object} options  Options for the edit.\n * @param {boolean} options.undoIgnore Whether to ignore the edit in undo history or not.\n *\n * @return {Object} Action object.\n */\nexport function* editEntityRecord( kind, name, recordId, edits, options = {} ) {\n\tconst entity = yield controls.select( 'core', 'getEntity', kind, name );\n\tif ( ! entity ) {\n\t\tthrow new Error(\n\t\t\t`The entity being edited (${ kind }, ${ name }) does not have a loaded config.`\n\t\t);\n\t}\n\tconst { transientEdits = {}, mergedEdits = {} } = entity;\n\tconst record = yield controls.select(\n\t\t'core',\n\t\t'getRawEntityRecord',\n\t\tkind,\n\t\tname,\n\t\trecordId\n\t);\n\tconst editedRecord = yield controls.select(\n\t\t'core',\n\t\t'getEditedEntityRecord',\n\t\tkind,\n\t\tname,\n\t\trecordId\n\t);\n\n\tconst edit = {\n\t\tkind,\n\t\tname,\n\t\trecordId,\n\t\t// Clear edits when they are equal to their persisted counterparts\n\t\t// so that the property is not considered dirty.\n\t\tedits: Object.keys( edits ).reduce( ( acc, key ) => {\n\t\t\tconst recordValue = record[ key ];\n\t\t\tconst editedRecordValue = editedRecord[ key ];\n\t\t\tconst value = mergedEdits[ key ]\n\t\t\t\t? { ...editedRecordValue, ...edits[ key ] }\n\t\t\t\t: edits[ key ];\n\t\t\tacc[ key ] = isEqual( recordValue, value ) ? undefined : value;\n\t\t\treturn acc;\n\t\t}, {} ),\n\t\ttransientEdits,\n\t};\n\treturn {\n\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t...edit,\n\t\tmeta: {\n\t\t\tundo: ! options.undoIgnore && {\n\t\t\t\t...edit,\n\t\t\t\t// Send the current values for things like the first undo stack entry.\n\t\t\t\tedits: Object.keys( edits ).reduce( ( acc, key ) => {\n\t\t\t\t\tacc[ key ] = editedRecord[ key ];\n\t\t\t\t\treturn acc;\n\t\t\t\t}, {} ),\n\t\t\t},\n\t\t},\n\t};\n}\n\n/**\n * Action triggered to undo the last edit to\n * an entity record, if any.\n */\nexport function* undo() {\n\tconst undoEdit = yield controls.select( 'core', 'getUndoEdit' );\n\tif ( ! undoEdit ) {\n\t\treturn;\n\t}\n\tyield {\n\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t...undoEdit,\n\t\tmeta: {\n\t\t\tisUndo: true,\n\t\t},\n\t};\n}\n\n/**\n * Action triggered to redo the last undoed\n * edit to an entity record, if any.\n */\nexport function* redo() {\n\tconst redoEdit = yield controls.select( 'core', 'getRedoEdit' );\n\tif ( ! redoEdit ) {\n\t\treturn;\n\t}\n\tyield {\n\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t...redoEdit,\n\t\tmeta: {\n\t\t\tisRedo: true,\n\t\t},\n\t};\n}\n\n/**\n * Forces the creation of a new undo level.\n *\n * @return {Object} Action object.\n */\nexport function __unstableCreateUndoLevel() {\n\treturn { type: 'CREATE_UNDO_LEVEL' };\n}\n\n/**\n * Action triggered to save an entity record.\n *\n * @param {string}   kind                       Kind of the received entity.\n * @param {string}   name                       Name of the received entity.\n * @param {Object}   record                     Record to be saved.\n * @param {Object}   options                    Saving options.\n * @param {boolean}  [options.isAutosave=false] Whether this is an autosave.\n * @param {Function} [options.__unstableFetch]  Internal use only. Function to\n *                                              call instead of `apiFetch()`.\n *                                              Must return a control\n *                                              descriptor.\n */\nexport function* saveEntityRecord(\n\tkind,\n\tname,\n\trecord,\n\t{ isAutosave = false, __unstableFetch = null } = {}\n) {\n\tconst entities = yield getKindEntities( kind );\n\tconst entity = find( entities, { kind, name } );\n\tif ( ! entity ) {\n\t\treturn;\n\t}\n\tconst entityIdKey = entity.key || DEFAULT_ENTITY_KEY;\n\tconst recordId = record[ entityIdKey ];\n\n\tconst lock = yield* __unstableAcquireStoreLock(\n\t\t'core',\n\t\t[ 'entities', 'data', kind, name, recordId || uuid() ],\n\t\t{ exclusive: true }\n\t);\n\ttry {\n\t\t// Evaluate optimized edits.\n\t\t// (Function edits that should be evaluated on save to avoid expensive computations on every edit.)\n\t\tfor ( const [ key, value ] of Object.entries( record ) ) {\n\t\t\tif ( typeof value === 'function' ) {\n\t\t\t\tconst evaluatedValue = value(\n\t\t\t\t\tyield controls.select(\n\t\t\t\t\t\t'core',\n\t\t\t\t\t\t'getEditedEntityRecord',\n\t\t\t\t\t\tkind,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\trecordId\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tyield editEntityRecord(\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\trecordId,\n\t\t\t\t\t{\n\t\t\t\t\t\t[ key ]: evaluatedValue,\n\t\t\t\t\t},\n\t\t\t\t\t{ undoIgnore: true }\n\t\t\t\t);\n\t\t\t\trecord[ key ] = evaluatedValue;\n\t\t\t}\n\t\t}\n\n\t\tyield {\n\t\t\ttype: 'SAVE_ENTITY_RECORD_START',\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId,\n\t\t\tisAutosave,\n\t\t};\n\t\tlet updatedRecord;\n\t\tlet error;\n\t\ttry {\n\t\t\tconst path = `${ entity.baseURL }${\n\t\t\t\trecordId ? '/' + recordId : ''\n\t\t\t}`;\n\t\t\tconst persistedRecord = yield controls.select(\n\t\t\t\t'core',\n\t\t\t\t'getRawEntityRecord',\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId\n\t\t\t);\n\n\t\t\tif ( isAutosave ) {\n\t\t\t\t// Most of this autosave logic is very specific to posts.\n\t\t\t\t// This is fine for now as it is the only supported autosave,\n\t\t\t\t// but ideally this should all be handled in the back end,\n\t\t\t\t// so the client just sends and receives objects.\n\t\t\t\tconst currentUser = yield controls.select(\n\t\t\t\t\t'core',\n\t\t\t\t\t'getCurrentUser'\n\t\t\t\t);\n\t\t\t\tconst currentUserId = currentUser ? currentUser.id : undefined;\n\t\t\t\tconst autosavePost = yield controls.select(\n\t\t\t\t\t'core',\n\t\t\t\t\t'getAutosave',\n\t\t\t\t\tpersistedRecord.type,\n\t\t\t\t\tpersistedRecord.id,\n\t\t\t\t\tcurrentUserId\n\t\t\t\t);\n\t\t\t\t// Autosaves need all expected fields to be present.\n\t\t\t\t// So we fallback to the previous autosave and then\n\t\t\t\t// to the actual persisted entity if the edits don't\n\t\t\t\t// have a value.\n\t\t\t\tlet data = { ...persistedRecord, ...autosavePost, ...record };\n\t\t\t\tdata = Object.keys( data ).reduce(\n\t\t\t\t\t( acc, key ) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t[ 'title', 'excerpt', 'content' ].includes( key )\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// Edits should be the \"raw\" attribute values.\n\t\t\t\t\t\t\tacc[ key ] = get( data[ key ], 'raw', data[ key ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tstatus:\n\t\t\t\t\t\t\tdata.status === 'auto-draft'\n\t\t\t\t\t\t\t\t? 'draft'\n\t\t\t\t\t\t\t\t: data.status,\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tconst options = {\n\t\t\t\t\tpath: `${ path }/autosaves`,\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\tdata,\n\t\t\t\t};\n\t\t\t\tif ( __unstableFetch ) {\n\t\t\t\t\tupdatedRecord = yield __unstableAwaitPromise(\n\t\t\t\t\t\t__unstableFetch( options )\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tupdatedRecord = yield apiFetch( options );\n\t\t\t\t}\n\t\t\t\t// An autosave may be processed by the server as a regular save\n\t\t\t\t// when its update is requested by the author and the post had\n\t\t\t\t// draft or auto-draft status.\n\t\t\t\tif ( persistedRecord.id === updatedRecord.id ) {\n\t\t\t\t\tlet newRecord = {\n\t\t\t\t\t\t...persistedRecord,\n\t\t\t\t\t\t...data,\n\t\t\t\t\t\t...updatedRecord,\n\t\t\t\t\t};\n\t\t\t\t\tnewRecord = Object.keys( newRecord ).reduce(\n\t\t\t\t\t\t( acc, key ) => {\n\t\t\t\t\t\t\t// These properties are persisted in autosaves.\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t[ 'title', 'excerpt', 'content' ].includes(\n\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t// Edits should be the \"raw\" attribute values.\n\t\t\t\t\t\t\t\tacc[ key ] = get(\n\t\t\t\t\t\t\t\t\tnewRecord[ key ],\n\t\t\t\t\t\t\t\t\t'raw',\n\t\t\t\t\t\t\t\t\tnewRecord[ key ]\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else if ( key === 'status' ) {\n\t\t\t\t\t\t\t\t// Status is only persisted in autosaves when going from\n\t\t\t\t\t\t\t\t// \"auto-draft\" to \"draft\".\n\t\t\t\t\t\t\t\tacc[ key ] =\n\t\t\t\t\t\t\t\t\tpersistedRecord.status === 'auto-draft' &&\n\t\t\t\t\t\t\t\t\tnewRecord.status === 'draft'\n\t\t\t\t\t\t\t\t\t\t? newRecord.status\n\t\t\t\t\t\t\t\t\t\t: persistedRecord.status;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// These properties are not persisted in autosaves.\n\t\t\t\t\t\t\t\tacc[ key ] = get(\n\t\t\t\t\t\t\t\t\tpersistedRecord[ key ],\n\t\t\t\t\t\t\t\t\t'raw',\n\t\t\t\t\t\t\t\t\tpersistedRecord[ key ]\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{}\n\t\t\t\t\t);\n\t\t\t\t\tyield receiveEntityRecords(\n\t\t\t\t\t\tkind,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tnewRecord,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tyield receiveAutosaves( persistedRecord.id, updatedRecord );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet edits = record;\n\t\t\t\tif ( entity.__unstablePrePersist ) {\n\t\t\t\t\tedits = {\n\t\t\t\t\t\t...edits,\n\t\t\t\t\t\t...entity.__unstablePrePersist(\n\t\t\t\t\t\t\tpersistedRecord,\n\t\t\t\t\t\t\tedits\n\t\t\t\t\t\t),\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst options = {\n\t\t\t\t\tpath,\n\t\t\t\t\tmethod: recordId ? 'PUT' : 'POST',\n\t\t\t\t\tdata: edits,\n\t\t\t\t};\n\t\t\t\tif ( __unstableFetch ) {\n\t\t\t\t\tupdatedRecord = yield __unstableAwaitPromise(\n\t\t\t\t\t\t__unstableFetch( options )\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tupdatedRecord = yield apiFetch( options );\n\t\t\t\t}\n\t\t\t\tyield receiveEntityRecords(\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\tupdatedRecord,\n\t\t\t\t\tundefined,\n\t\t\t\t\ttrue,\n\t\t\t\t\tedits\n\t\t\t\t);\n\t\t\t}\n\t\t} catch ( _error ) {\n\t\t\terror = _error;\n\t\t}\n\t\tyield {\n\t\t\ttype: 'SAVE_ENTITY_RECORD_FINISH',\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId,\n\t\t\terror,\n\t\t\tisAutosave,\n\t\t};\n\n\t\treturn updatedRecord;\n\t} finally {\n\t\tyield* __unstableReleaseStoreLock( lock );\n\t}\n}\n\n/**\n * Runs multiple core-data actions at the same time using one API request.\n *\n * Example:\n *\n * ```\n * const [ savedRecord, updatedRecord, deletedRecord ] =\n *   await dispatch( 'core' ).__experimentalBatch( [\n *     ( { saveEntityRecord } ) => saveEntityRecord( 'root', 'widget', widget ),\n *     ( { saveEditedEntityRecord } ) => saveEntityRecord( 'root', 'widget', 123 ),\n *     ( { deleteEntityRecord } ) => deleteEntityRecord( 'root', 'widget', 123, null ),\n *   ] );\n * ```\n *\n * @param {Array} requests Array of functions which are invoked simultaneously.\n *                         Each function is passed an object containing\n *                         `saveEntityRecord`, `saveEditedEntityRecord`, and\n *                         `deleteEntityRecord`.\n *\n * @return {Promise} A promise that resolves to an array containing the return\n *                   values of each function given in `requests`.\n */\nexport function* __experimentalBatch( requests ) {\n\tconst batch = createBatch();\n\tconst dispatch = yield getDispatch();\n\tconst api = {\n\t\tsaveEntityRecord( kind, name, record, options ) {\n\t\t\treturn batch.add( ( add ) =>\n\t\t\t\tdispatch( 'core' ).saveEntityRecord( kind, name, record, {\n\t\t\t\t\t...options,\n\t\t\t\t\t__unstableFetch: add,\n\t\t\t\t} )\n\t\t\t);\n\t\t},\n\t\tsaveEditedEntityRecord( kind, name, recordId, options ) {\n\t\t\treturn batch.add( ( add ) =>\n\t\t\t\tdispatch( 'core' ).saveEditedEntityRecord(\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\trecordId,\n\t\t\t\t\t{\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\t__unstableFetch: add,\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t);\n\t\t},\n\t\tdeleteEntityRecord( kind, name, recordId, query, options ) {\n\t\t\treturn batch.add( ( add ) =>\n\t\t\t\tdispatch( 'core' ).deleteEntityRecord(\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\trecordId,\n\t\t\t\t\tquery,\n\t\t\t\t\t{\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\t__unstableFetch: add,\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t);\n\t\t},\n\t};\n\tconst resultPromises = requests.map( ( request ) => request( api ) );\n\tconst [ , ...results ] = yield __unstableAwaitPromise(\n\t\tPromise.all( [ batch.run(), ...resultPromises ] )\n\t);\n\treturn results;\n}\n\n/**\n * Action triggered to save an entity record's edits.\n *\n * @param {string} kind     Kind of the entity.\n * @param {string} name     Name of the entity.\n * @param {Object} recordId ID of the record.\n * @param {Object} options  Saving options.\n */\nexport function* saveEditedEntityRecord( kind, name, recordId, options ) {\n\tif (\n\t\t! ( yield controls.select(\n\t\t\t'core',\n\t\t\t'hasEditsForEntityRecord',\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId\n\t\t) )\n\t) {\n\t\treturn;\n\t}\n\tconst edits = yield controls.select(\n\t\t'core',\n\t\t'getEntityRecordNonTransientEdits',\n\t\tkind,\n\t\tname,\n\t\trecordId\n\t);\n\tconst record = { id: recordId, ...edits };\n\treturn yield* saveEntityRecord( kind, name, record, options );\n}\n\n/**\n * Returns an action object used in signalling that Upload permissions have been received.\n *\n * @param {boolean} hasUploadPermissions Does the user have permission to upload files?\n *\n * @return {Object} Action object.\n */\nexport function receiveUploadPermissions( hasUploadPermissions ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_PERMISSION',\n\t\tkey: 'create/media',\n\t\tisAllowed: hasUploadPermissions,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the current user has\n * permission to perform an action on a REST resource.\n *\n * @param {string}  key       A key that represents the action and REST resource.\n * @param {boolean} isAllowed Whether or not the user can perform the action.\n *\n * @return {Object} Action object.\n */\nexport function receiveUserPermission( key, isAllowed ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_PERMISSION',\n\t\tkey,\n\t\tisAllowed,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the autosaves for a\n * post have been received.\n *\n * @param {number}       postId    The id of the post that is parent to the autosave.\n * @param {Array|Object} autosaves An array of autosaves or singular autosave object.\n *\n * @return {Object} Action object.\n */\nexport function receiveAutosaves( postId, autosaves ) {\n\treturn {\n\t\ttype: 'RECEIVE_AUTOSAVES',\n\t\tpostId,\n\t\tautosaves: castArray( autosaves ),\n\t};\n}\n"]}