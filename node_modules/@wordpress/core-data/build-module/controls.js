import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/esm/asyncToGenerator";

/**
 * WordPress dependencies
 */
import { createRegistryControl } from '@wordpress/data';
export function regularFetch(url) {
  return {
    type: 'REGULAR_FETCH',
    url: url
  };
}
export function getDispatch() {
  return {
    type: 'GET_DISPATCH'
  };
}
var controls = {
  REGULAR_FETCH: function REGULAR_FETCH(_ref) {
    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
      var url, _yield$window$fetch$t, data;

      return _regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              url = _ref.url;
              _context.next = 3;
              return window.fetch(url).then(function (res) {
                return res.json();
              });

            case 3:
              _yield$window$fetch$t = _context.sent;
              data = _yield$window$fetch$t.data;
              return _context.abrupt("return", data);

            case 6:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }))();
  },
  GET_DISPATCH: createRegistryControl(function (_ref2) {
    var dispatch = _ref2.dispatch;
    return function () {
      return dispatch;
    };
  })
};
export default controls;
//# sourceMappingURL=controls.js.map