{"version":3,"sources":["@wordpress/core-data/src/locks/utils.js"],"names":["iteratePath","iterateDescendants","deepCopyLocksTreePath","tree","path","newTree","currentNode","branchName","children","locks","getNode","nextNode","node","stack","Object","values","length","childNode","pop","push","hasConflictingLock","exclusive","filter","lock"],"mappings":";;;;oDA6BiBA,W;qDAaAC,kB;;;;;;;;;;;;AA1CjB,OAAO,SAASC,qBAAT,CAAgCC,IAAhC,EAAsCC,IAAtC,EAA6C;AACnD,MAAMC,OAAO,qBAAQF,IAAR,CAAb;;AACA,MAAIG,WAAW,GAAGD,OAAlB;;AAFmD,6CAGzBD,IAHyB;AAAA;;AAAA;AAGnD,wDAAiC;AAAA,UAArBG,UAAqB;AAChCD,MAAAA,WAAW,CAACE,QAAZ,mCACIF,WAAW,CAACE,QADhB,2BAEGD,UAFH;AAGEE,QAAAA,KAAK,EAAE,EAHT;AAIED,QAAAA,QAAQ,EAAE;AAJZ,SAKKF,WAAW,CAACE,QAAZ,CAAsBD,UAAtB,CALL;AAQAD,MAAAA,WAAW,GAAGA,WAAW,CAACE,QAAZ,CAAsBD,UAAtB,CAAd;AACA;AAbkD;AAAA;AAAA;AAAA;AAAA;;AAcnD,SAAOF,OAAP;AACA;AAED,OAAO,SAASK,OAAT,CAAkBP,IAAlB,EAAwBC,IAAxB,EAA+B;AACrC,MAAIE,WAAW,GAAGH,IAAlB;;AADqC,8CAEXC,IAFW;AAAA;;AAAA;AAErC,2DAAiC;AAAA,UAArBG,UAAqB;AAChC,UAAMI,QAAQ,GAAGL,WAAW,CAACE,QAAZ,CAAsBD,UAAtB,CAAjB;;AACA,UAAK,CAAEI,QAAP,EAAkB;AACjB,eAAO,IAAP;AACA;;AACDL,MAAAA,WAAW,GAAGK,QAAd;AACA;AARoC;AAAA;AAAA;AAAA;AAAA;;AASrC,SAAOL,WAAP;AACA;AAED,OAAO,SAAUN,WAAV,CAAuBG,IAAvB,EAA6BC,IAA7B;AAAA;;AAAA;AAAA;AAAA;AAAA;AACFE,UAAAA,WADE,GACYH,IADZ;AAAA;AAEN,iBAAMG,WAAN;;AAFM;AAAA,kDAGoBF,IAHpB;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGMG,UAAAA,UAHN;AAICI,UAAAA,QAJD,GAIYL,WAAW,CAACE,QAAZ,CAAsBD,UAAtB,CAJZ;;AAAA,cAKEI,QALF;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAQL,iBAAMA,QAAN;;AARK;AASLL,UAAAA,WAAW,GAAGK,QAAd;;AATK;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaP,OAAO,SAAUV,kBAAV,CAA8BW,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AACAC,UAAAA,KADA,GACQC,MAAM,CAACC,MAAP,CAAeH,IAAI,CAACJ,QAApB,CADR;;AAAA;AAAA,eAEEK,KAAK,CAACG,MAFR;AAAA;AAAA;AAAA;;AAGCC,UAAAA,SAHD,GAGaJ,KAAK,CAACK,GAAN,EAHb;AAAA;AAIL,iBAAMD,SAAN;;AAJK;AAKLJ,UAAAA,KAAK,CAACM,IAAN,OAAAN,KAAK,qBAAUC,MAAM,CAACC,MAAP,CAAeE,SAAS,CAACT,QAAzB,CAAV,EAAL;AALK;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASP,OAAO,SAASY,kBAAT,OAA4CX,KAA5C,EAAoD;AAAA,MAArBY,SAAqB,QAArBA,SAAqB;;AAC1D,MAAKA,SAAS,IAAIZ,KAAK,CAACO,MAAxB,EAAiC;AAChC,WAAO,IAAP;AACA;;AAED,MAAK,CAAEK,SAAF,IAAeZ,KAAK,CAACa,MAAN,CAAc,UAAEC,IAAF;AAAA,WAAYA,IAAI,CAACF,SAAjB;AAAA,GAAd,EAA2CL,MAA/D,EAAwE;AACvE,WAAO,IAAP;AACA;;AAED,SAAO,KAAP;AACA","sourcesContent":["export function deepCopyLocksTreePath( tree, path ) {\n\tconst newTree = { ...tree };\n\tlet currentNode = newTree;\n\tfor ( const branchName of path ) {\n\t\tcurrentNode.children = {\n\t\t\t...currentNode.children,\n\t\t\t[ branchName ]: {\n\t\t\t\tlocks: [],\n\t\t\t\tchildren: {},\n\t\t\t\t...currentNode.children[ branchName ],\n\t\t\t},\n\t\t};\n\t\tcurrentNode = currentNode.children[ branchName ];\n\t}\n\treturn newTree;\n}\n\nexport function getNode( tree, path ) {\n\tlet currentNode = tree;\n\tfor ( const branchName of path ) {\n\t\tconst nextNode = currentNode.children[ branchName ];\n\t\tif ( ! nextNode ) {\n\t\t\treturn null;\n\t\t}\n\t\tcurrentNode = nextNode;\n\t}\n\treturn currentNode;\n}\n\nexport function* iteratePath( tree, path ) {\n\tlet currentNode = tree;\n\tyield currentNode;\n\tfor ( const branchName of path ) {\n\t\tconst nextNode = currentNode.children[ branchName ];\n\t\tif ( ! nextNode ) {\n\t\t\tbreak;\n\t\t}\n\t\tyield nextNode;\n\t\tcurrentNode = nextNode;\n\t}\n}\n\nexport function* iterateDescendants( node ) {\n\tconst stack = Object.values( node.children );\n\twhile ( stack.length ) {\n\t\tconst childNode = stack.pop();\n\t\tyield childNode;\n\t\tstack.push( ...Object.values( childNode.children ) );\n\t}\n}\n\nexport function hasConflictingLock( { exclusive }, locks ) {\n\tif ( exclusive && locks.length ) {\n\t\treturn true;\n\t}\n\n\tif ( ! exclusive && locks.filter( ( lock ) => lock.exclusive ).length ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n"]}