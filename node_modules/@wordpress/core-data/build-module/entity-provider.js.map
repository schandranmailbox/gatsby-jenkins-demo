{"version":3,"sources":["@wordpress/core-data/src/entity-provider.js"],"names":["createContext","useContext","useCallback","useEffect","useSelect","useDispatch","parse","__unstableSerializeAndClean","EMPTY_ARRAY","defaultEntities","kinds","entities","reduce","acc","entity","kind","name","context","getEntity","type","Error","EntityProvider","id","children","Provider","useEntityId","useEntityProp","prop","_id","providerId","select","getEntityRecord","getEditedEntityRecord","editedEntity","value","fullValue","editEntityRecord","setValue","newValue","useEntityBlockEditor","blocks","content","__unstableCreateUndoLevel","parsedContent","undoIgnore","onChange","newBlocks","options","selectionStart","selectionEnd","edits","noChange","blocksForSerialization","onInput"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport {\n\tcreateContext,\n\tuseContext,\n\tuseCallback,\n\tuseEffect,\n} from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { parse, __unstableSerializeAndClean } from '@wordpress/blocks';\n\nconst EMPTY_ARRAY = [];\n\n/**\n * Internal dependencies\n */\nimport { defaultEntities, kinds } from './entities';\n\nconst entities = {\n\t...defaultEntities.reduce( ( acc, entity ) => {\n\t\tif ( ! acc[ entity.kind ] ) {\n\t\t\tacc[ entity.kind ] = {};\n\t\t}\n\t\tacc[ entity.kind ][ entity.name ] = { context: createContext() };\n\t\treturn acc;\n\t}, {} ),\n\t...kinds.reduce( ( acc, kind ) => {\n\t\tacc[ kind.name ] = {};\n\t\treturn acc;\n\t}, {} ),\n};\nconst getEntity = ( kind, type ) => {\n\tif ( ! entities[ kind ] ) {\n\t\tthrow new Error( `Missing entity config for kind: ${ kind }.` );\n\t}\n\n\tif ( ! entities[ kind ][ type ] ) {\n\t\tentities[ kind ][ type ] = { context: createContext() };\n\t}\n\n\treturn entities[ kind ][ type ];\n};\n\n/**\n * Context provider component for providing\n * an entity for a specific entity type.\n *\n * @param {Object} props          The component's props.\n * @param {string} props.kind     The entity kind.\n * @param {string} props.type     The entity type.\n * @param {number} props.id       The entity ID.\n * @param {*}      props.children The children to wrap.\n *\n * @return {Object} The provided children, wrapped with\n *                   the entity's context provider.\n */\nexport default function EntityProvider( { kind, type, id, children } ) {\n\tconst Provider = getEntity( kind, type ).context.Provider;\n\treturn <Provider value={ id }>{ children }</Provider>;\n}\n\n/**\n * Hook that returns the ID for the nearest\n * provided entity of the specified type.\n *\n * @param {string} kind The entity kind.\n * @param {string} type The entity type.\n */\nexport function useEntityId( kind, type ) {\n\treturn useContext( getEntity( kind, type ).context );\n}\n\n/**\n * Hook that returns the value and a setter for the\n * specified property of the nearest provided\n * entity of the specified type.\n *\n * @param {string} kind  The entity kind.\n * @param {string} type  The entity type.\n * @param {string} prop  The property name.\n * @param {string} [_id] An entity ID to use instead of the context-provided one.\n *\n * @return {[*, Function]} A tuple where the first item is the\n *                          property value and the second is the\n *                          setter.\n */\nexport function useEntityProp( kind, type, prop, _id ) {\n\tconst providerId = useEntityId( kind, type );\n\tconst id = _id ?? providerId;\n\n\tconst { value, fullValue } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEntityRecord, getEditedEntityRecord } = select( 'core' );\n\t\t\tconst entity = getEntityRecord( kind, type, id ); // Trigger resolver.\n\t\t\tconst editedEntity = getEditedEntityRecord( kind, type, id );\n\t\t\treturn entity && editedEntity\n\t\t\t\t? {\n\t\t\t\t\t\tvalue: editedEntity[ prop ],\n\t\t\t\t\t\tfullValue: entity[ prop ],\n\t\t\t\t  }\n\t\t\t\t: {};\n\t\t},\n\t\t[ kind, type, id, prop ]\n\t);\n\tconst { editEntityRecord } = useDispatch( 'core' );\n\tconst setValue = useCallback(\n\t\t( newValue ) => {\n\t\t\teditEntityRecord( kind, type, id, {\n\t\t\t\t[ prop ]: newValue,\n\t\t\t} );\n\t\t},\n\t\t[ kind, type, id, prop ]\n\t);\n\n\treturn [ value, setValue, fullValue ];\n}\n\n/**\n * Hook that returns block content getters and setters for\n * the nearest provided entity of the specified type.\n *\n * The return value has the shape `[ blocks, onInput, onChange ]`.\n * `onInput` is for block changes that don't create undo levels\n * or dirty the post, non-persistent changes, and `onChange` is for\n * peristent changes. They map directly to the props of a\n * `BlockEditorProvider` and are intended to be used with it,\n * or similar components or hooks.\n *\n * @param {string} kind                            The entity kind.\n * @param {string} type                            The entity type.\n * @param {Object} options\n * @param {string} [options.id]                    An entity ID to use instead of the context-provided one.\n *\n * @return {[WPBlock[], Function, Function]} The block array and setters.\n */\nexport function useEntityBlockEditor( kind, type, { id: _id } = {} ) {\n\tconst providerId = useEntityId( kind, type );\n\tconst id = _id ?? providerId;\n\tconst { content, blocks } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEditedEntityRecord } = select( 'core' );\n\t\t\tconst editedEntity = getEditedEntityRecord( kind, type, id );\n\t\t\treturn {\n\t\t\t\tblocks: editedEntity.blocks,\n\t\t\t\tcontent: editedEntity.content,\n\t\t\t};\n\t\t},\n\t\t[ kind, type, id ]\n\t);\n\tconst { __unstableCreateUndoLevel, editEntityRecord } = useDispatch(\n\t\t'core'\n\t);\n\n\tuseEffect( () => {\n\t\t// Load the blocks from the content if not already in state\n\t\t// Guard against other instances that might have\n\t\t// set content to a function already or the blocks are already in state.\n\t\tif ( content && typeof content !== 'function' && ! blocks ) {\n\t\t\tconst parsedContent = parse( content );\n\t\t\teditEntityRecord(\n\t\t\t\tkind,\n\t\t\t\ttype,\n\t\t\t\tid,\n\t\t\t\t{\n\t\t\t\t\tblocks: parsedContent,\n\t\t\t\t},\n\t\t\t\t{ undoIgnore: true }\n\t\t\t);\n\t\t}\n\t}, [ content ] );\n\n\tconst onChange = useCallback(\n\t\t( newBlocks, options ) => {\n\t\t\tconst { selectionStart, selectionEnd } = options;\n\t\t\tconst edits = { blocks: newBlocks, selectionStart, selectionEnd };\n\n\t\t\tconst noChange = blocks === edits.blocks;\n\t\t\tif ( noChange ) {\n\t\t\t\treturn __unstableCreateUndoLevel( kind, type, id );\n\t\t\t}\n\n\t\t\t// We create a new function here on every persistent edit\n\t\t\t// to make sure the edit makes the post dirty and creates\n\t\t\t// a new undo level.\n\t\t\tedits.content = ( { blocks: blocksForSerialization = [] } ) =>\n\t\t\t\t__unstableSerializeAndClean( blocksForSerialization );\n\n\t\t\teditEntityRecord( kind, type, id, edits );\n\t\t},\n\t\t[ kind, type, id, blocks ]\n\t);\n\n\tconst onInput = useCallback(\n\t\t( newBlocks, options ) => {\n\t\t\tconst { selectionStart, selectionEnd } = options;\n\t\t\tconst edits = { blocks: newBlocks, selectionStart, selectionEnd };\n\t\t\teditEntityRecord( kind, type, id, edits );\n\t\t},\n\t\t[ kind, type, id ]\n\t);\n\n\treturn [ blocks ?? EMPTY_ARRAY, onInput, onChange ];\n}\n"]}