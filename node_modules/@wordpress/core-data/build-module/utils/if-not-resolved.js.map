{"version":3,"sources":["@wordpress/core-data/src/utils/if-not-resolved.js"],"names":["controls","ifNotResolved","resolver","selectorName","resolveIfNotResolved","args","select","hasStartedResolution"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,QAAT,QAAyB,iBAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAEC,QAAF,EAAYC,YAAZ;AAAA;AAAA;;AACrB;AACD;AACA;AAHsB,6BAIrB,SAAUC,oBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAmCC,IAAnC;AAAmCA,gBAAAA,IAAnC;AAAA;;AAAA;AAC8B,qBAAML,QAAQ,CAACM,MAAT,CAClC,MADkC,EAElC,sBAFkC,EAGlCH,YAHkC,EAIlCE,IAJkC,CAAN;;AAD9B;AACOE,cAAAA,oBADP;;AAAA,kBAQQA,oBARR;AAAA;AAAA;AAAA;;AASE,4CAAOL,QAAQ,MAAR,SAAaG,IAAb,CAAP;;AATF;AAAA;AAAA;AAAA;AAAA;AAAA,SAAUD,oBAAV;AAAA,KAJqB;AAAA;AAAA,CAAtB;;AAiBA,eAAeH,aAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { controls } from '@wordpress/data';\n\n/**\n * Higher-order function which invokes the given resolver only if it has not\n * already been resolved with the arguments passed to the enhanced function.\n *\n * This only considers resolution state, and notably does not support resolver\n * custom `isFulfilled` behavior.\n *\n * @param {Function} resolver     Original resolver.\n * @param {string}   selectorName Selector name associated with resolver.\n *\n * @return {Function} Enhanced resolver.\n */\nconst ifNotResolved = ( resolver, selectorName ) =>\n\t/**\n\t * @param {...any} args Original resolver arguments.\n\t */\n\tfunction* resolveIfNotResolved( ...args ) {\n\t\tconst hasStartedResolution = yield controls.select(\n\t\t\t'core',\n\t\t\t'hasStartedResolution',\n\t\t\tselectorName,\n\t\t\targs\n\t\t);\n\n\t\tif ( ! hasStartedResolution ) {\n\t\t\tyield* resolver( ...args );\n\t\t}\n\t};\n\nexport default ifNotResolved;\n"]}