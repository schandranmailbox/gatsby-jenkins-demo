{"version":3,"sources":["@wordpress/core-data/src/entities.js"],"names":["loadPostTypeEntities","loadTaxonomyEntities","getKindEntities","upperFirst","camelCase","map","find","get","startCase","controls","apiFetch","__","addEntities","DEFAULT_ENTITY_KEY","defaultEntities","label","name","kind","baseURL","getTitle","record","key","plural","transientEdits","blocks","kinds","loadEntities","prePersistPostType","persistedRecord","edits","newEdits","status","title","path","postTypes","postType","isTemplate","includes","rest_base","labels","singular_name","selectionStart","selectionEnd","mergedEdits","meta","rendered","slug","String","id","__unstablePrePersist","undefined","taxonomies","taxonomy","getMethodName","prefix","usePlural","entity","kindPrefix","nameSuffix","suffix","select","entities","length","kindConfig"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { upperFirst, camelCase, map, find, get, startCase } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { controls } from '@wordpress/data';\nimport { apiFetch } from '@wordpress/data-controls';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { addEntities } from './actions';\n\nexport const DEFAULT_ENTITY_KEY = 'id';\n\nexport const defaultEntities = [\n\t{\n\t\tlabel: __( 'Base' ),\n\t\tname: '__unstableBase',\n\t\tkind: 'root',\n\t\tbaseURL: '',\n\t},\n\t{\n\t\tlabel: __( 'Site' ),\n\t\tname: 'site',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/settings',\n\t\tgetTitle: ( record ) => {\n\t\t\treturn get( record, [ 'title' ], __( 'Site Title' ) );\n\t\t},\n\t},\n\t{\n\t\tlabel: __( 'Post Type' ),\n\t\tname: 'postType',\n\t\tkind: 'root',\n\t\tkey: 'slug',\n\t\tbaseURL: '/wp/v2/types',\n\t},\n\t{\n\t\tname: 'media',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/media',\n\t\tplural: 'mediaItems',\n\t\tlabel: __( 'Media' ),\n\t},\n\t{\n\t\tname: 'taxonomy',\n\t\tkind: 'root',\n\t\tkey: 'slug',\n\t\tbaseURL: '/wp/v2/taxonomies',\n\t\tplural: 'taxonomies',\n\t\tlabel: __( 'Taxonomy' ),\n\t},\n\t{\n\t\tname: 'sidebar',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/sidebars',\n\t\tplural: 'sidebars',\n\t\ttransientEdits: { blocks: true },\n\t\tlabel: __( 'Widget areas' ),\n\t},\n\t{\n\t\tname: 'widget',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/widgets',\n\t\tplural: 'widgets',\n\t\ttransientEdits: { blocks: true },\n\t\tlabel: __( 'Widgets' ),\n\t},\n\t{\n\t\tlabel: __( 'User' ),\n\t\tname: 'user',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/users',\n\t\tplural: 'users',\n\t},\n\t{\n\t\tname: 'comment',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/comments',\n\t\tplural: 'comments',\n\t\tlabel: __( 'Comment' ),\n\t},\n\t{\n\t\tname: 'menu',\n\t\tkind: 'root',\n\t\tbaseURL: '/__experimental/menus',\n\t\tplural: 'menus',\n\t\tlabel: __( 'Menu' ),\n\t},\n\t{\n\t\tname: 'menuItem',\n\t\tkind: 'root',\n\t\tbaseURL: '/__experimental/menu-items',\n\t\tplural: 'menuItems',\n\t\tlabel: __( 'Menu Item' ),\n\t},\n\t{\n\t\tname: 'menuLocation',\n\t\tkind: 'root',\n\t\tbaseURL: '/__experimental/menu-locations',\n\t\tplural: 'menuLocations',\n\t\tlabel: __( 'Menu Location' ),\n\t\tkey: 'name',\n\t},\n];\n\nexport const kinds = [\n\t{ name: 'postType', loadEntities: loadPostTypeEntities },\n\t{ name: 'taxonomy', loadEntities: loadTaxonomyEntities },\n];\n\n/**\n * Returns a function to be used to retrieve extra edits to apply before persisting a post type.\n *\n * @param {Object} persistedRecord Already persisted Post\n * @param {Object} edits Edits.\n * @return {Object} Updated edits.\n */\nexport const prePersistPostType = ( persistedRecord, edits ) => {\n\tconst newEdits = {};\n\n\tif ( persistedRecord?.status === 'auto-draft' ) {\n\t\t// Saving an auto-draft should create a draft by default.\n\t\tif ( ! edits.status && ! newEdits.status ) {\n\t\t\tnewEdits.status = 'draft';\n\t\t}\n\n\t\t// Fix the auto-draft default title.\n\t\tif (\n\t\t\t( ! edits.title || edits.title === 'Auto Draft' ) &&\n\t\t\t! newEdits.title &&\n\t\t\t( ! persistedRecord?.title ||\n\t\t\t\tpersistedRecord?.title === 'Auto Draft' )\n\t\t) {\n\t\t\tnewEdits.title = '';\n\t\t}\n\t}\n\n\treturn newEdits;\n};\n\n/**\n * Returns the list of post type entities.\n *\n * @return {Promise} Entities promise\n */\nfunction* loadPostTypeEntities() {\n\tconst postTypes = yield apiFetch( { path: '/wp/v2/types?context=edit' } );\n\treturn map( postTypes, ( postType, name ) => {\n\t\tconst isTemplate = [ 'wp_template', 'wp_template_part' ].includes(\n\t\t\tname\n\t\t);\n\t\treturn {\n\t\t\tkind: 'postType',\n\t\t\tbaseURL: '/wp/v2/' + postType.rest_base,\n\t\t\tname,\n\t\t\tlabel: postType.labels.singular_name,\n\t\t\ttransientEdits: {\n\t\t\t\tblocks: true,\n\t\t\t\tselectionStart: true,\n\t\t\t\tselectionEnd: true,\n\t\t\t},\n\t\t\tmergedEdits: { meta: true },\n\t\t\tgetTitle: ( record ) =>\n\t\t\t\trecord?.title?.rendered ||\n\t\t\t\trecord?.title ||\n\t\t\t\t( isTemplate ? startCase( record.slug ) : String( record.id ) ),\n\t\t\t__unstablePrePersist: isTemplate ? undefined : prePersistPostType,\n\t\t};\n\t} );\n}\n\n/**\n * Returns the list of the taxonomies entities.\n *\n * @return {Promise} Entities promise\n */\nfunction* loadTaxonomyEntities() {\n\tconst taxonomies = yield apiFetch( {\n\t\tpath: '/wp/v2/taxonomies?context=edit',\n\t} );\n\treturn map( taxonomies, ( taxonomy, name ) => {\n\t\treturn {\n\t\t\tkind: 'taxonomy',\n\t\t\tbaseURL: '/wp/v2/' + taxonomy.rest_base,\n\t\t\tname,\n\t\t\tlabel: taxonomy.labels.singular_name,\n\t\t};\n\t} );\n}\n\n/**\n * Returns the entity's getter method name given its kind and name.\n *\n * @param {string}  kind      Entity kind.\n * @param {string}  name      Entity name.\n * @param {string}  prefix    Function prefix.\n * @param {boolean} usePlural Whether to use the plural form or not.\n *\n * @return {string} Method name\n */\nexport const getMethodName = (\n\tkind,\n\tname,\n\tprefix = 'get',\n\tusePlural = false\n) => {\n\tconst entity = find( defaultEntities, { kind, name } );\n\tconst kindPrefix = kind === 'root' ? '' : upperFirst( camelCase( kind ) );\n\tconst nameSuffix =\n\t\tupperFirst( camelCase( name ) ) + ( usePlural ? 's' : '' );\n\tconst suffix =\n\t\tusePlural && entity.plural\n\t\t\t? upperFirst( camelCase( entity.plural ) )\n\t\t\t: nameSuffix;\n\treturn `${ prefix }${ kindPrefix }${ suffix }`;\n};\n\n/**\n * Loads the kind entities into the store.\n *\n * @param {string} kind  Kind\n *\n * @return {Array} Entities\n */\nexport function* getKindEntities( kind ) {\n\tlet entities = yield controls.select( 'core', 'getEntitiesByKind', kind );\n\tif ( entities && entities.length !== 0 ) {\n\t\treturn entities;\n\t}\n\n\tconst kindConfig = find( kinds, { name: kind } );\n\tif ( ! kindConfig ) {\n\t\treturn [];\n\t}\n\n\tentities = yield kindConfig.loadEntities();\n\tyield addEntities( entities );\n\n\treturn entities;\n}\n"]}