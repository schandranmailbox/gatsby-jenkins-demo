{"version":3,"sources":["@wordpress/core-data/src/index.js"],"names":["entitySelectors","defaultEntities","reduce","result","entity","kind","name","state","key","selectors","getEntityRecord","args","getEntityRecords","entityResolvers","resolvers","pluralMethodName","shouldInvalidate","action","entityActions","actions","saveEntityRecord","query","deleteEntityRecord","storeConfig","reducer","controls","customControls","locksActions","locksSelectors","store","STORE_NAME"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { createReduxStore, register } from '@wordpress/data';\nimport { controls } from '@wordpress/data-controls';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as selectors from './selectors';\nimport * as actions from './actions';\nimport * as resolvers from './resolvers';\nimport * as locksSelectors from './locks/selectors';\nimport * as locksActions from './locks/actions';\nimport customControls from './controls';\nimport { defaultEntities, getMethodName } from './entities';\nimport { STORE_NAME } from './name';\n\n// The entity selectors/resolvers and actions are shortcuts to their generic equivalents\n// (getEntityRecord, getEntityRecords, updateEntityRecord, updateEntityRecordss)\n// Instead of getEntityRecord, the consumer could use more user-frieldly named selector: getPostType, getTaxonomy...\n// The \"kind\" and the \"name\" of the entity are combined to generate these shortcuts.\n\nconst entitySelectors = defaultEntities.reduce( ( result, entity ) => {\n\tconst { kind, name } = entity;\n\tresult[ getMethodName( kind, name ) ] = ( state, key ) =>\n\t\tselectors.getEntityRecord( state, kind, name, key );\n\tresult[ getMethodName( kind, name, 'get', true ) ] = ( state, ...args ) =>\n\t\tselectors.getEntityRecords( state, kind, name, ...args );\n\treturn result;\n}, {} );\n\nconst entityResolvers = defaultEntities.reduce( ( result, entity ) => {\n\tconst { kind, name } = entity;\n\tresult[ getMethodName( kind, name ) ] = ( key ) =>\n\t\tresolvers.getEntityRecord( kind, name, key );\n\tconst pluralMethodName = getMethodName( kind, name, 'get', true );\n\tresult[ pluralMethodName ] = ( ...args ) =>\n\t\tresolvers.getEntityRecords( kind, name, ...args );\n\tresult[ pluralMethodName ].shouldInvalidate = ( action, ...args ) =>\n\t\tresolvers.getEntityRecords.shouldInvalidate(\n\t\t\taction,\n\t\t\tkind,\n\t\t\tname,\n\t\t\t...args\n\t\t);\n\treturn result;\n}, {} );\n\nconst entityActions = defaultEntities.reduce( ( result, entity ) => {\n\tconst { kind, name } = entity;\n\tresult[ getMethodName( kind, name, 'save' ) ] = ( key ) =>\n\t\tactions.saveEntityRecord( kind, name, key );\n\tresult[ getMethodName( kind, name, 'delete' ) ] = ( key, query ) =>\n\t\tactions.deleteEntityRecord( kind, name, key, query );\n\treturn result;\n}, {} );\n\nconst storeConfig = {\n\treducer,\n\tcontrols: { ...customControls, ...controls },\n\tactions: { ...actions, ...entityActions, ...locksActions },\n\tselectors: { ...selectors, ...entitySelectors, ...locksSelectors },\n\tresolvers: { ...resolvers, ...entityResolvers },\n};\n\n/**\n * Store definition for the code data namespace.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\n *\n * @type {Object}\n */\nexport const store = createReduxStore( STORE_NAME, storeConfig );\n\nregister( store );\n\nexport { default as EntityProvider } from './entity-provider';\nexport * from './entity-provider';\n"]}