import { createElement } from "@wordpress/element";

/**
 * WordPress dependencies
 */
import { __ } from '@wordpress/i18n';
import { useSelect, useDispatch } from '@wordpress/data';
import { decodeEntities } from '@wordpress/html-entities';
import { SelectControl } from '@wordpress/components';

function PostAuthorSelect() {
  var _useDispatch = useDispatch('core/editor'),
      editPost = _useDispatch.editPost;

  var _useSelect = useSelect(function (select) {
    var authorsFromAPI = select('core').getAuthors();
    return {
      postAuthor: select('core/editor').getEditedPostAttribute('author'),
      authors: authorsFromAPI.map(function (author) {
        return {
          label: decodeEntities(author.name),
          value: author.id
        };
      })
    };
  }, []),
      postAuthor = _useSelect.postAuthor,
      authors = _useSelect.authors;

  var setAuthorId = function setAuthorId(value) {
    var author = Number(value);
    editPost({
      author: author
    });
  };

  return createElement(SelectControl, {
    className: "post-author-selector",
    label: __('Author'),
    options: authors,
    onChange: setAuthorId,
    value: postAuthor
  });
}

export default PostAuthorSelect;
//# sourceMappingURL=select.js.map