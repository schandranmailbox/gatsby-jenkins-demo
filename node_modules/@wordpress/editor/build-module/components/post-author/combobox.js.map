{"version":3,"sources":["@wordpress/editor/src/components/post-author/combobox.js"],"names":["debounce","useState","useMemo","useEffect","useSelect","useDispatch","__","ComboboxControl","PostAuthorCombobox","fieldValue","setFieldValue","select","__unstableGetAuthor","getAuthors","isResolving","getEditedPostAttribute","author","query","search","authorId","postAuthor","authors","isLoading","editPost","authorOptions","fetchedAuthors","map","value","id","label","name","foundAuthor","findIndex","handleSelect","postAuthorId","handleKeydown","inputValue"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { debounce } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useState, useMemo, useEffect } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { ComboboxControl } from '@wordpress/components';\n\nfunction PostAuthorCombobox() {\n\tconst [ fieldValue, setFieldValue ] = useState();\n\n\tconst { authorId, isLoading, authors, postAuthor } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { __unstableGetAuthor, getAuthors, isResolving } = select(\n\t\t\t\t'core'\n\t\t\t);\n\t\t\tconst { getEditedPostAttribute } = select( 'core/editor' );\n\t\t\tconst author = __unstableGetAuthor(\n\t\t\t\tgetEditedPostAttribute( 'author' )\n\t\t\t);\n\t\t\tconst query =\n\t\t\t\t! fieldValue || '' === fieldValue ? {} : { search: fieldValue };\n\t\t\treturn {\n\t\t\t\tauthorId: getEditedPostAttribute( 'author' ),\n\t\t\t\tpostAuthor: author,\n\t\t\t\tauthors: getAuthors( query ),\n\t\t\t\tisLoading: isResolving( 'core', 'getAuthors', [ query ] ),\n\t\t\t};\n\t\t},\n\t\t[ fieldValue ]\n\t);\n\tconst { editPost } = useDispatch( 'core/editor' );\n\n\tconst authorOptions = useMemo( () => {\n\t\tconst fetchedAuthors = ( authors ?? [] ).map( ( author ) => {\n\t\t\treturn {\n\t\t\t\tvalue: author.id,\n\t\t\t\tlabel: author.name,\n\t\t\t};\n\t\t} );\n\n\t\t// Ensure the current author is included in the dropdown list.\n\t\tconst foundAuthor = fetchedAuthors.findIndex(\n\t\t\t( { value } ) => postAuthor?.id === value\n\t\t);\n\n\t\tif ( foundAuthor < 0 && postAuthor ) {\n\t\t\treturn [\n\t\t\t\t{ value: postAuthor.id, label: postAuthor.name },\n\t\t\t\t...fetchedAuthors,\n\t\t\t];\n\t\t}\n\n\t\treturn fetchedAuthors;\n\t}, [ authors, postAuthor ] );\n\n\t// Initializes the post author properly\n\t// Also ensures external changes are reflected.\n\tuseEffect( () => {\n\t\tif ( postAuthor ) {\n\t\t\tsetFieldValue( postAuthor.name );\n\t\t}\n\t}, [ postAuthor ] );\n\n\t/**\n\t * Handle author selection.\n\t *\n\t * @param {number} postAuthorId The selected Author.\n\t */\n\tconst handleSelect = ( postAuthorId ) => {\n\t\tif ( ! postAuthorId ) {\n\t\t\treturn;\n\t\t}\n\t\teditPost( { author: postAuthorId } );\n\t};\n\n\t/**\n\t * Handle user input.\n\t *\n\t * @param {string} inputValue The current value of the input field.\n\t */\n\tconst handleKeydown = ( inputValue ) => {\n\t\tsetFieldValue( inputValue );\n\t};\n\n\tif ( ! postAuthor ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<ComboboxControl\n\t\t\tlabel={ __( 'Author' ) }\n\t\t\toptions={ authorOptions }\n\t\t\tvalue={ authorId }\n\t\t\tonFilterValueChange={ debounce( handleKeydown, 300 ) }\n\t\t\tonChange={ handleSelect }\n\t\t\tisLoading={ isLoading }\n\t\t\tallowReset={ false }\n\t\t/>\n\t);\n}\n\nexport default PostAuthorCombobox;\n"]}