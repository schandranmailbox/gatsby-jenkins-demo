{"version":3,"sources":["@wordpress/editor/src/components/post-title/index.js"],"names":["TextareaAutosize","classnames","__","useEffect","useRef","useState","decodeEntities","ENTER","useSelect","useDispatch","VisuallyHidden","useInstanceId","pasteHandler","PostTypeSupportCheck","REGEXP_NEWLINES","PostTitle","instanceId","ref","isSelected","setIsSelected","editPost","insertDefaultBlock","clearSelectedBlock","insertBlocks","select","getEditedPostAttribute","_isCleanNewPost","isCleanNewPost","getSettings","titlePlaceholder","focusMode","_hasFixedToolbar","hasFixedToolbar","title","placeholder","isFocusMode","ownerDocument","current","activeElement","body","focus","onEnterPress","undefined","onInsertBlockAfter","blocks","onUpdate","newTitle","onSelect","onUnselect","onChange","event","target","value","replace","onKeyDown","keyCode","preventDefault","onPaste","clipboardData","plainText","html","getData","error1","error2","window","console","log","content","HTML","length","firstBlock","name","attributes","slice","className","decodedPlaceholder"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport TextareaAutosize from 'react-autosize-textarea';\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useEffect, useRef, useState } from '@wordpress/element';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { ENTER } from '@wordpress/keycodes';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { VisuallyHidden } from '@wordpress/components';\nimport { useInstanceId } from '@wordpress/compose';\nimport { pasteHandler } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport PostTypeSupportCheck from '../post-type-support-check';\n\n/**\n * Constants\n */\nconst REGEXP_NEWLINES = /[\\r\\n]+/g;\n\nexport default function PostTitle() {\n\tconst instanceId = useInstanceId( PostTitle );\n\tconst ref = useRef();\n\tconst [ isSelected, setIsSelected ] = useState( false );\n\tconst { editPost } = useDispatch( 'core/editor' );\n\tconst {\n\t\tinsertDefaultBlock,\n\t\tclearSelectedBlock,\n\t\tinsertBlocks,\n\t} = useDispatch( 'core/block-editor' );\n\tconst {\n\t\tisCleanNewPost,\n\t\ttitle,\n\t\tplaceholder,\n\t\tisFocusMode,\n\t\thasFixedToolbar,\n\t} = useSelect( ( select ) => {\n\t\tconst {\n\t\t\tgetEditedPostAttribute,\n\t\t\tisCleanNewPost: _isCleanNewPost,\n\t\t} = select( 'core/editor' );\n\t\tconst { getSettings } = select( 'core/block-editor' );\n\t\tconst {\n\t\t\ttitlePlaceholder,\n\t\t\tfocusMode,\n\t\t\thasFixedToolbar: _hasFixedToolbar,\n\t\t} = getSettings();\n\n\t\treturn {\n\t\t\tisCleanNewPost: _isCleanNewPost(),\n\t\t\ttitle: getEditedPostAttribute( 'title' ),\n\t\t\tplaceholder: titlePlaceholder,\n\t\t\tisFocusMode: focusMode,\n\t\t\thasFixedToolbar: _hasFixedToolbar,\n\t\t};\n\t} );\n\n\tuseEffect( () => {\n\t\tconst { ownerDocument } = ref.current;\n\t\tconst { activeElement, body } = ownerDocument;\n\n\t\t// Only autofocus the title when the post is entirely empty. This should\n\t\t// only happen for a new post, which means we focus the title on new\n\t\t// post so the author can start typing right away, without needing to\n\t\t// click anything.\n\t\tif ( isCleanNewPost && ( ! activeElement || body === activeElement ) ) {\n\t\t\tref.current.focus();\n\t\t}\n\t}, [ isCleanNewPost ] );\n\n\tfunction onEnterPress() {\n\t\tinsertDefaultBlock( undefined, undefined, 0 );\n\t}\n\n\tfunction onInsertBlockAfter( blocks ) {\n\t\tinsertBlocks( blocks, 0 );\n\t}\n\n\tfunction onUpdate( newTitle ) {\n\t\teditPost( { title: newTitle } );\n\t}\n\n\tfunction onSelect() {\n\t\tsetIsSelected( true );\n\t\tclearSelectedBlock();\n\t}\n\n\tfunction onUnselect() {\n\t\tsetIsSelected( false );\n\t}\n\n\tfunction onChange( event ) {\n\t\tonUpdate( event.target.value.replace( REGEXP_NEWLINES, ' ' ) );\n\t}\n\n\tfunction onKeyDown( event ) {\n\t\tif ( event.keyCode === ENTER ) {\n\t\t\tevent.preventDefault();\n\t\t\tonEnterPress();\n\t\t}\n\t}\n\n\tfunction onPaste( event ) {\n\t\tconst clipboardData = event.clipboardData;\n\n\t\tlet plainText = '';\n\t\tlet html = '';\n\n\t\t// IE11 only supports `Text` as an argument for `getData` and will\n\t\t// otherwise throw an invalid argument error, so we try the standard\n\t\t// arguments first, then fallback to `Text` if they fail.\n\t\ttry {\n\t\t\tplainText = clipboardData.getData( 'text/plain' );\n\t\t\thtml = clipboardData.getData( 'text/html' );\n\t\t} catch ( error1 ) {\n\t\t\ttry {\n\t\t\t\thtml = clipboardData.getData( 'Text' );\n\t\t\t} catch ( error2 ) {\n\t\t\t\t// Some browsers like UC Browser paste plain text by default and\n\t\t\t\t// don't support clipboardData at all, so allow default\n\t\t\t\t// behaviour.\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Allows us to ask for this information when we get a report.\n\t\twindow.console.log( 'Received HTML:\\n\\n', html );\n\t\twindow.console.log( 'Received plain text:\\n\\n', plainText );\n\n\t\tconst content = pasteHandler( {\n\t\t\tHTML: html,\n\t\t\tplainText,\n\t\t} );\n\n\t\tif ( typeof content !== 'string' && content.length ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tconst [ firstBlock ] = content;\n\n\t\t\tif (\n\t\t\t\t! title &&\n\t\t\t\t( firstBlock.name === 'core/heading' ||\n\t\t\t\t\tfirstBlock.name === 'core/paragraph' )\n\t\t\t) {\n\t\t\t\tonUpdate( firstBlock.attributes.content );\n\t\t\t\tonInsertBlockAfter( content.slice( 1 ) );\n\t\t\t} else {\n\t\t\t\tonInsertBlockAfter( content );\n\t\t\t}\n\t\t}\n\t}\n\n\t// The wp-block className is important for editor styles.\n\t// This same block is used in both the visual and the code editor.\n\tconst className = classnames(\n\t\t'wp-block editor-post-title editor-post-title__block',\n\t\t{\n\t\t\t'is-selected': isSelected,\n\t\t\t'is-focus-mode': isFocusMode,\n\t\t\t'has-fixed-toolbar': hasFixedToolbar,\n\t\t}\n\t);\n\tconst decodedPlaceholder = decodeEntities( placeholder );\n\n\treturn (\n\t\t<PostTypeSupportCheck supportKeys=\"title\">\n\t\t\t<div className={ className }>\n\t\t\t\t<VisuallyHidden\n\t\t\t\t\tas=\"label\"\n\t\t\t\t\thtmlFor={ `post-title-${ instanceId }` }\n\t\t\t\t>\n\t\t\t\t\t{ decodedPlaceholder || __( 'Add title' ) }\n\t\t\t\t</VisuallyHidden>\n\t\t\t\t<TextareaAutosize\n\t\t\t\t\tref={ ref }\n\t\t\t\t\tid={ `post-title-${ instanceId }` }\n\t\t\t\t\tclassName=\"editor-post-title__input\"\n\t\t\t\t\tvalue={ title }\n\t\t\t\t\tonChange={ onChange }\n\t\t\t\t\tplaceholder={ decodedPlaceholder || __( 'Add title' ) }\n\t\t\t\t\tonFocus={ onSelect }\n\t\t\t\t\tonBlur={ onUnselect }\n\t\t\t\t\tonKeyDown={ onKeyDown }\n\t\t\t\t\tonKeyPress={ onUnselect }\n\t\t\t\t\tonPaste={ onPaste }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</PostTypeSupportCheck>\n\t);\n}\n"]}