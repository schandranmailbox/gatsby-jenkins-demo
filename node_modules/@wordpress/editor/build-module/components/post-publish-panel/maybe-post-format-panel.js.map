{"version":3,"sources":["@wordpress/editor/src/components/post-publish-panel/maybe-post-format-panel.js"],"names":["find","get","includes","Button","PanelBody","useDispatch","useSelect","__","sprintf","POST_FORMATS","getSuggestion","supportedFormats","suggestedPostFormat","formats","filter","format","id","PostFormatSuggestion","suggestionText","onUpdatePostFormat","PostFormatPanel","select","getEditedPostAttribute","getSuggestedPostFormat","getThemeSupports","currentPostFormat","suggestion","editPost","panelBodyTitle","caption"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { find, get, includes } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Button, PanelBody } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { __, sprintf } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { POST_FORMATS } from '../post-format';\n\nconst getSuggestion = ( supportedFormats, suggestedPostFormat ) => {\n\tconst formats = POST_FORMATS.filter( ( format ) =>\n\t\tincludes( supportedFormats, format.id )\n\t);\n\treturn find( formats, ( format ) => format.id === suggestedPostFormat );\n};\n\nconst PostFormatSuggestion = ( {\n\tsuggestedPostFormat,\n\tsuggestionText,\n\tonUpdatePostFormat,\n} ) => (\n\t<Button isLink onClick={ () => onUpdatePostFormat( suggestedPostFormat ) }>\n\t\t{ suggestionText }\n\t</Button>\n);\n\nexport default function PostFormatPanel() {\n\tconst { currentPostFormat, suggestion } = useSelect( ( select ) => {\n\t\tconst { getEditedPostAttribute, getSuggestedPostFormat } = select(\n\t\t\t'core/editor'\n\t\t);\n\t\tconst supportedFormats = get(\n\t\t\tselect( 'core' ).getThemeSupports(),\n\t\t\t[ 'formats' ],\n\t\t\t[]\n\t\t);\n\t\treturn {\n\t\t\tcurrentPostFormat: getEditedPostAttribute( 'format' ),\n\t\t\tsuggestion: getSuggestion(\n\t\t\t\tsupportedFormats,\n\t\t\t\tgetSuggestedPostFormat()\n\t\t\t),\n\t\t};\n\t}, [] );\n\n\tconst { editPost } = useDispatch( 'core/editor' );\n\n\tconst onUpdatePostFormat = ( format ) => editPost( { format } );\n\n\tconst panelBodyTitle = [\n\t\t__( 'Suggestion:' ),\n\t\t<span className=\"editor-post-publish-panel__link\" key=\"label\">\n\t\t\t{ __( 'Use a post format' ) }\n\t\t</span>,\n\t];\n\n\tif ( ! suggestion || suggestion.id === currentPostFormat ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PanelBody initialOpen={ false } title={ panelBodyTitle }>\n\t\t\t<p>\n\t\t\t\t{ __(\n\t\t\t\t\t'Your theme uses post formats to highlight different kinds of content, like images or videos. Apply a post format to see this special styling.'\n\t\t\t\t) }\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<PostFormatSuggestion\n\t\t\t\t\tonUpdatePostFormat={ onUpdatePostFormat }\n\t\t\t\t\tsuggestedPostFormat={ suggestion.id }\n\t\t\t\t\tsuggestionText={ sprintf(\n\t\t\t\t\t\t/* translators: %s: post format */\n\t\t\t\t\t\t__( 'Apply the \"%1$s\" format.' ),\n\t\t\t\t\t\tsuggestion.caption\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t</p>\n\t\t</PanelBody>\n\t);\n}\n"]}