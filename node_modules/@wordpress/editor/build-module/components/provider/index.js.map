{"version":3,"sources":["@wordpress/editor/src/components/provider/index.js"],"names":["useEffect","useLayoutEffect","useMemo","useDispatch","useSelect","__","EntityProvider","useEntityBlockEditor","BlockEditorProvider","BlockContextProvider","ReusableBlocksMenuItems","store","noticesStore","withRegistryProvider","editorStore","useBlockEditorSettings","EditorProvider","__unstableTemplate","post","settings","recovery","initialEdits","children","defaultBlockContext","type","postId","id","postType","select","getEditorSelectionStart","getEditorSelectionEnd","__unstableIsEditorReady","isReady","selectionStart","selectionEnd","blocks","onInput","onChange","editorSettings","updatePostLock","setupEditor","updateEditorSettings","__experimentalTearDownEditor","createWarningNotice","postLock","template","autosave","actions","label","url","editLink"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useEffect, useLayoutEffect, useMemo } from '@wordpress/element';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { EntityProvider, useEntityBlockEditor } from '@wordpress/core-data';\nimport {\n\tBlockEditorProvider,\n\tBlockContextProvider,\n} from '@wordpress/block-editor';\nimport { ReusableBlocksMenuItems } from '@wordpress/reusable-blocks';\nimport { store as noticesStore } from '@wordpress/notices';\n\n/**\n * Internal dependencies\n */\nimport withRegistryProvider from './with-registry-provider';\nimport { store as editorStore } from '../../store';\nimport useBlockEditorSettings from './use-block-editor-settings';\n\nfunction EditorProvider( {\n\t__unstableTemplate,\n\tpost,\n\tsettings,\n\trecovery,\n\tinitialEdits,\n\tchildren,\n} ) {\n\tconst defaultBlockContext = useMemo( () => {\n\t\tif ( post.type === 'wp_template' ) {\n\t\t\treturn {};\n\t\t}\n\t\treturn { postId: post.id, postType: post.type };\n\t}, [ post.id, post.type ] );\n\tconst { selectionEnd, selectionStart, isReady } = useSelect( ( select ) => {\n\t\tconst {\n\t\t\tgetEditorSelectionStart,\n\t\t\tgetEditorSelectionEnd,\n\t\t\t__unstableIsEditorReady,\n\t\t} = select( editorStore );\n\t\treturn {\n\t\t\tisReady: __unstableIsEditorReady(),\n\t\t\tselectionStart: getEditorSelectionStart(),\n\t\t\tselectionEnd: getEditorSelectionEnd(),\n\t\t};\n\t}, [] );\n\tconst { id, type } = __unstableTemplate ?? post;\n\tconst [ blocks, onInput, onChange ] = useEntityBlockEditor(\n\t\t'postType',\n\t\ttype,\n\t\t{ id }\n\t);\n\tconst editorSettings = useBlockEditorSettings(\n\t\tsettings,\n\t\t!! __unstableTemplate\n\t);\n\tconst {\n\t\tupdatePostLock,\n\t\tsetupEditor,\n\t\tupdateEditorSettings,\n\t\t__experimentalTearDownEditor,\n\t} = useDispatch( editorStore );\n\tconst { createWarningNotice } = useDispatch( noticesStore );\n\n\t// Iniitialize and tear down the editor.\n\t// Ideally this should be synced on each change and not just something you do once.\n\tuseLayoutEffect( () => {\n\t\t// Assume that we don't need to initialize in the case of an error recovery.\n\t\tif ( recovery ) {\n\t\t\treturn;\n\t\t}\n\n\t\tupdatePostLock( settings.postLock );\n\t\tsetupEditor( post, initialEdits, settings.template );\n\t\tif ( settings.autosave ) {\n\t\t\tcreateWarningNotice(\n\t\t\t\t__(\n\t\t\t\t\t'There is an autosave of this post that is more recent than the version below.'\n\t\t\t\t),\n\t\t\t\t{\n\t\t\t\t\tid: 'autosave-exists',\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: __( 'View the autosave' ),\n\t\t\t\t\t\t\turl: settings.autosave.editLink,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\treturn () => {\n\t\t\t__experimentalTearDownEditor();\n\t\t};\n\t}, [] );\n\n\t// Synchronize the editor settings as they change\n\tuseEffect( () => {\n\t\tupdateEditorSettings( settings );\n\t}, [ settings ] );\n\n\tif ( ! isReady ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<EntityProvider kind=\"root\" type=\"site\">\n\t\t\t<EntityProvider kind=\"postType\" type={ post.type } id={ post.id }>\n\t\t\t\t<BlockContextProvider value={ defaultBlockContext }>\n\t\t\t\t\t<BlockEditorProvider\n\t\t\t\t\t\tvalue={ blocks }\n\t\t\t\t\t\tonChange={ onChange }\n\t\t\t\t\t\tonInput={ onInput }\n\t\t\t\t\t\tselectionStart={ selectionStart }\n\t\t\t\t\t\tselectionEnd={ selectionEnd }\n\t\t\t\t\t\tsettings={ editorSettings }\n\t\t\t\t\t\tuseSubRegistry={ false }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ children }\n\t\t\t\t\t\t<ReusableBlocksMenuItems />\n\t\t\t\t\t</BlockEditorProvider>\n\t\t\t\t</BlockContextProvider>\n\t\t\t</EntityProvider>\n\t\t</EntityProvider>\n\t);\n}\n\nexport default withRegistryProvider( EditorProvider );\n"]}