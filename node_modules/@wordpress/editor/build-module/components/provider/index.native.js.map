{"version":3,"sources":["@wordpress/editor/src/components/provider/index.native.js"],"names":["RNReactNativeGutenbergBridge","subscribeParentGetHtml","subscribeParentToggleHTMLMode","subscribeUpdateHtml","subscribeSetTitle","subscribeMediaAppend","subscribeReplaceBlock","subscribeUpdateTheme","subscribeUpdateCapabilities","subscribeShowNotice","Component","count","wordCount","parse","serialize","getUnregisteredTypeHandlerName","createBlock","withDispatch","withSelect","compose","applyFilters","validateThemeColors","validateThemeGradients","postTypeEntities","name","baseURL","map","postTypeEntity","kind","transientEdits","blocks","selectionStart","selectionEnd","mergedEdits","meta","EditorProvider","NativeEditorProvider","arguments","post","props","addEntities","receiveEntityRecords","type","capabilities","colors","gradients","updateSettings","subscriptionParentGetHtml","serializeToNativeAction","subscriptionParentToggleHTMLMode","toggleMode","subscriptionParentSetTitle","payload","editTitle","title","subscriptionParentUpdateHtml","updateHtmlAction","html","subscriptionParentReplaceBlock","replaceBlockAction","clientId","subscriptionParentMediaAppend","blockName","mediaType","newBlock","id","mediaId","mediaUrl","indexAfterSelected","selectedBlockIndex","insertionIndex","blockCount","insertBlock","subscriptionParentUpdateTheme","theme","subscriptionParentUpdateCapabilities","updateCapabilitiesAction","subscriptionParentShowNotice","createSuccessNotice","message","remove","prevProps","isReady","isUnsupportedBlock","unsupportedBlockNames","filter","block","attributes","originalName","editorDidMount","mode","hasChanges","raw","content","contentInfo","characterCount","paragraphCount","provideToNative_Html","parsed","resetEditorBlocksWithoutUndoLevel","blockClientId","replaceBlock","switchMode","clearSelectedBlock","children","select","isEditorReady","__unstableIsEditorReady","getEditorBlocks","getEditedPostAttribute","getEditedPostContent","getEditorMode","getBlockIndex","getSelectedBlockClientId","getGlobalBlockCount","selectedBlockClientId","dispatch","editPost","resetEditorBlocks","switchEditorMode","__unstableShouldCreateUndoLevel"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\n/**\n * WordPress dependencies\n */\nimport RNReactNativeGutenbergBridge, {\n\tsubscribeParentGetHtml,\n\tsubscribeParentToggleHTMLMode,\n\tsubscribeUpdateHtml,\n\tsubscribeSetTitle,\n\tsubscribeMediaAppend,\n\tsubscribeReplaceBlock,\n\tsubscribeUpdateTheme,\n\tsubscribeUpdateCapabilities,\n\tsubscribeShowNotice,\n} from '@wordpress/react-native-bridge';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { count as wordCount } from '@wordpress/wordcount';\nimport {\n\tparse,\n\tserialize,\n\tgetUnregisteredTypeHandlerName,\n\tcreateBlock,\n} from '@wordpress/blocks';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\nimport { applyFilters } from '@wordpress/hooks';\nimport {\n\tvalidateThemeColors,\n\tvalidateThemeGradients,\n} from '@wordpress/block-editor';\n\nconst postTypeEntities = [\n\t{ name: 'post', baseURL: '/wp/v2/posts' },\n\t{ name: 'page', baseURL: '/wp/v2/pages' },\n\t{ name: 'attachment', baseURL: '/wp/v2/media' },\n\t{ name: 'wp_block', baseURL: '/wp/v2/blocks' },\n].map( ( postTypeEntity ) => ( {\n\tkind: 'postType',\n\t...postTypeEntity,\n\ttransientEdits: {\n\t\tblocks: true,\n\t\tselectionStart: true,\n\t\tselectionEnd: true,\n\t},\n\tmergedEdits: {\n\t\tmeta: true,\n\t},\n} ) );\n\n/**\n * Internal dependencies\n */\nimport EditorProvider from './index.js';\n\nclass NativeEditorProvider extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\t// Keep a local reference to `post` to detect changes\n\t\tthis.post = this.props.post;\n\t\tthis.props.addEntities( postTypeEntities );\n\t\tthis.props.receiveEntityRecords(\n\t\t\t'postType',\n\t\t\tthis.post.type,\n\t\t\tthis.post\n\t\t);\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { capabilities, colors, gradients } = this.props;\n\n\t\tthis.props.updateSettings( {\n\t\t\t...capabilities,\n\t\t\t// Set theme colors for the editor\n\t\t\t...( colors ? { colors } : {} ),\n\t\t\t...( gradients ? { gradients } : {} ),\n\t\t} );\n\n\t\tthis.subscriptionParentGetHtml = subscribeParentGetHtml( () => {\n\t\t\tthis.serializeToNativeAction();\n\t\t} );\n\n\t\tthis.subscriptionParentToggleHTMLMode = subscribeParentToggleHTMLMode(\n\t\t\t() => {\n\t\t\t\tthis.toggleMode();\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentSetTitle = subscribeSetTitle( ( payload ) => {\n\t\t\tthis.props.editTitle( payload.title );\n\t\t} );\n\n\t\tthis.subscriptionParentUpdateHtml = subscribeUpdateHtml(\n\t\t\t( payload ) => {\n\t\t\t\tthis.updateHtmlAction( payload.html );\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentReplaceBlock = subscribeReplaceBlock(\n\t\t\t( payload ) => {\n\t\t\t\tthis.replaceBlockAction( payload.html, payload.clientId );\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentMediaAppend = subscribeMediaAppend(\n\t\t\t( payload ) => {\n\t\t\t\tconst blockName = 'core/' + payload.mediaType;\n\t\t\t\tconst newBlock = createBlock( blockName, {\n\t\t\t\t\tid: payload.mediaId,\n\t\t\t\t\t[ payload.mediaType === 'image'\n\t\t\t\t\t\t? 'url'\n\t\t\t\t\t\t: 'src' ]: payload.mediaUrl,\n\t\t\t\t} );\n\n\t\t\t\tconst indexAfterSelected = this.props.selectedBlockIndex + 1;\n\t\t\t\tconst insertionIndex =\n\t\t\t\t\tindexAfterSelected || this.props.blockCount;\n\n\t\t\t\tthis.props.insertBlock( newBlock, insertionIndex );\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentUpdateTheme = subscribeUpdateTheme(\n\t\t\t( theme ) => {\n\t\t\t\t// Reset the colors and gradients in case one theme was set with custom items and then updated to a theme without custom elements.\n\n\t\t\t\ttheme.colors = validateThemeColors( theme.colors );\n\n\t\t\t\ttheme.gradients = validateThemeGradients( theme.gradients );\n\n\t\t\t\tthis.props.updateSettings( theme );\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentUpdateCapabilities = subscribeUpdateCapabilities(\n\t\t\t( payload ) => {\n\t\t\t\tthis.updateCapabilitiesAction( payload );\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentShowNotice = subscribeShowNotice(\n\t\t\t( payload ) => {\n\t\t\t\tthis.props.createSuccessNotice( payload.message );\n\t\t\t}\n\t\t);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif ( this.subscriptionParentGetHtml ) {\n\t\t\tthis.subscriptionParentGetHtml.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentToggleHTMLMode ) {\n\t\t\tthis.subscriptionParentToggleHTMLMode.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentSetTitle ) {\n\t\t\tthis.subscriptionParentSetTitle.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentUpdateHtml ) {\n\t\t\tthis.subscriptionParentUpdateHtml.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentReplaceBlock ) {\n\t\t\tthis.subscriptionParentReplaceBlock.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentMediaAppend ) {\n\t\t\tthis.subscriptionParentMediaAppend.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentUpdateTheme ) {\n\t\t\tthis.subscriptionParentUpdateTheme.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentUpdateCapabilities ) {\n\t\t\tthis.subscriptionParentUpdateCapabilities.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentShowNotice ) {\n\t\t\tthis.subscriptionParentShowNotice.remove();\n\t\t}\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tif ( ! prevProps.isReady && this.props.isReady ) {\n\t\t\tconst blocks = this.props.blocks;\n\t\t\tconst isUnsupportedBlock = ( { name } ) =>\n\t\t\t\tname === getUnregisteredTypeHandlerName();\n\t\t\tconst unsupportedBlockNames = blocks\n\t\t\t\t.filter( isUnsupportedBlock )\n\t\t\t\t.map( ( block ) => block.attributes.originalName );\n\t\t\tRNReactNativeGutenbergBridge.editorDidMount(\n\t\t\t\tunsupportedBlockNames\n\t\t\t);\n\t\t}\n\t}\n\n\tserializeToNativeAction() {\n\t\tconst title = this.props.title;\n\t\tlet html;\n\n\t\tif ( this.props.mode === 'text' ) {\n\t\t\t// The HTMLTextInput component does not update the store when user is doing changes\n\t\t\t// Let's request the HTML from the component's state directly\n\t\t\thtml = applyFilters( 'native.persist-html' );\n\t\t} else {\n\t\t\thtml = serialize( this.props.blocks );\n\t\t}\n\n\t\tconst hasChanges =\n\t\t\ttitle !== this.post.title.raw || html !== this.post.content.raw;\n\n\t\t// Variable to store the content structure metrics.\n\t\tconst contentInfo = {};\n\t\tcontentInfo.characterCount = wordCount(\n\t\t\thtml,\n\t\t\t'characters_including_spaces'\n\t\t);\n\t\tcontentInfo.wordCount = wordCount( html, 'words' );\n\t\tcontentInfo.paragraphCount = this.props.paragraphCount;\n\t\tcontentInfo.blockCount = this.props.blockCount;\n\t\tRNReactNativeGutenbergBridge.provideToNative_Html(\n\t\t\thtml,\n\t\t\ttitle,\n\t\t\thasChanges,\n\t\t\tcontentInfo\n\t\t);\n\n\t\tif ( hasChanges ) {\n\t\t\tthis.post.title.raw = title;\n\t\t\tthis.post.content.raw = html;\n\t\t}\n\t}\n\n\tupdateHtmlAction( html ) {\n\t\tconst parsed = parse( html );\n\t\tthis.props.resetEditorBlocksWithoutUndoLevel( parsed );\n\t}\n\n\treplaceBlockAction( html, blockClientId ) {\n\t\tconst parsed = parse( html );\n\t\tthis.props.replaceBlock( blockClientId, parsed );\n\t}\n\n\ttoggleMode() {\n\t\tconst { mode, switchMode } = this.props;\n\t\t// refresh html content first\n\t\tthis.serializeToNativeAction();\n\t\t// make sure to blur the selected block and dismiss the keyboard\n\t\tthis.props.clearSelectedBlock();\n\t\tswitchMode( mode === 'visual' ? 'text' : 'visual' );\n\t}\n\n\tupdateCapabilitiesAction( capabilities ) {\n\t\tthis.props.updateSettings( capabilities );\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tchildren,\n\t\t\tpost, // eslint-disable-line no-unused-vars\n\t\t\t...props\n\t\t} = this.props;\n\n\t\treturn (\n\t\t\t<EditorProvider post={ this.post } { ...props }>\n\t\t\t\t{ children }\n\t\t\t</EditorProvider>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst {\n\t\t\t__unstableIsEditorReady: isEditorReady,\n\t\t\tgetEditorBlocks,\n\t\t\tgetEditedPostAttribute,\n\t\t\tgetEditedPostContent,\n\t\t} = select( 'core/editor' );\n\t\tconst { getEditorMode } = select( 'core/edit-post' );\n\n\t\tconst {\n\t\t\tgetBlockIndex,\n\t\t\tgetSelectedBlockClientId,\n\t\t\tgetGlobalBlockCount,\n\t\t} = select( 'core/block-editor' );\n\n\t\tconst selectedBlockClientId = getSelectedBlockClientId();\n\t\treturn {\n\t\t\tmode: getEditorMode(),\n\t\t\tisReady: isEditorReady(),\n\t\t\tblocks: getEditorBlocks(),\n\t\t\ttitle: getEditedPostAttribute( 'title' ),\n\t\t\tgetEditedPostContent,\n\t\t\tselectedBlockIndex: getBlockIndex( selectedBlockClientId ),\n\t\t\tblockCount: getGlobalBlockCount(),\n\t\t\tparagraphCount: getGlobalBlockCount( 'core/paragraph' ),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { editPost, resetEditorBlocks } = dispatch( 'core/editor' );\n\t\tconst {\n\t\t\tupdateSettings,\n\t\t\tclearSelectedBlock,\n\t\t\tinsertBlock,\n\t\t\treplaceBlock,\n\t\t} = dispatch( 'core/block-editor' );\n\t\tconst { switchEditorMode } = dispatch( 'core/edit-post' );\n\t\tconst { addEntities, receiveEntityRecords } = dispatch( 'core' );\n\t\tconst { createSuccessNotice } = dispatch( 'core/notices' );\n\n\t\treturn {\n\t\t\tupdateSettings,\n\t\t\taddEntities,\n\t\t\tclearSelectedBlock,\n\t\t\tinsertBlock,\n\t\t\tcreateSuccessNotice,\n\t\t\teditTitle( title ) {\n\t\t\t\teditPost( { title } );\n\t\t\t},\n\t\t\treceiveEntityRecords,\n\t\t\tresetEditorBlocksWithoutUndoLevel( blocks ) {\n\t\t\t\tresetEditorBlocks( blocks, {\n\t\t\t\t\t__unstableShouldCreateUndoLevel: false,\n\t\t\t\t} );\n\t\t\t},\n\t\t\tswitchMode( mode ) {\n\t\t\t\tswitchEditorMode( mode );\n\t\t\t},\n\t\t\treplaceBlock,\n\t\t};\n\t} ),\n] )( NativeEditorProvider );\n"]}