"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _reactNative = require("react-native");

var _data = require("@wordpress/data");

var _compose = require("@wordpress/compose");

var _blockEditor = require("@wordpress/block-editor");

var _components = require("@wordpress/components");

var _editor = _interopRequireDefault(require("./editor.scss"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var isWider = _components.alignmentHelpers.isWider,
    isFullWidth = _components.alignmentHelpers.isFullWidth;

function GroupEdit(_ref) {
  var attributes = _ref.attributes,
      hasInnerBlocks = _ref.hasInnerBlocks,
      isSelected = _ref.isSelected,
      isLastInnerBlockSelected = _ref.isLastInnerBlockSelected,
      getStylesFromColorScheme = _ref.getStylesFromColorScheme,
      mergedStyle = _ref.mergedStyle,
      blockWidth = _ref.blockWidth;
  var align = attributes.align;

  var _useResizeObserver = (0, _compose.useResizeObserver)(),
      _useResizeObserver2 = (0, _slicedToArray2.default)(_useResizeObserver, 2),
      resizeObserver = _useResizeObserver2[0],
      sizes = _useResizeObserver2[1];

  var _ref2 = sizes || {
    width: 0
  },
      width = _ref2.width;

  var screenWidth = Math.floor(_reactNative.Dimensions.get('window').width);
  var isEqualWidth = width === screenWidth;
  var renderAppender = (0, _element.useCallback)(function () {
    return (0, _element.createElement)(_reactNative.View, {
      style: (isWider(screenWidth, 'mobile') || isEqualWidth || isFullWidth(align)) && (hasInnerBlocks ? _editor.default.groupAppender : _editor.default.wideGroupAppender)
    }, (0, _element.createElement)(_blockEditor.InnerBlocks.ButtonBlockAppender, null));
  }, [align, hasInnerBlocks, width]);

  if (!isSelected && !hasInnerBlocks) {
    return (0, _element.createElement)(_reactNative.View, {
      style: [getStylesFromColorScheme(_editor.default.groupPlaceholder, _editor.default.groupPlaceholderDark), !hasInnerBlocks && _objectSpread(_objectSpread({}, _editor.default.marginVerticalDense), _editor.default.marginHorizontalNone)]
    });
  }

  return (0, _element.createElement)(_reactNative.View, {
    style: [isSelected && hasInnerBlocks && _editor.default.innerBlocks, mergedStyle, isSelected && hasInnerBlocks && (mergedStyle === null || mergedStyle === void 0 ? void 0 : mergedStyle.backgroundColor) && _editor.default.hasBackgroundAppender, isLastInnerBlockSelected && (mergedStyle === null || mergedStyle === void 0 ? void 0 : mergedStyle.backgroundColor) && _editor.default.isLastInnerBlockSelected]
  }, resizeObserver, (0, _element.createElement)(_blockEditor.InnerBlocks, {
    renderAppender: isSelected && renderAppender,
    parentWidth: width,
    blockWidth: blockWidth
  }));
}

var _default = (0, _compose.compose)([(0, _data.withSelect)(function (select, _ref3) {
  var _getBlockAttributes;

  var clientId = _ref3.clientId;

  var _select = select('core/block-editor'),
      getBlock = _select.getBlock,
      getBlockIndex = _select.getBlockIndex,
      hasSelectedInnerBlock = _select.hasSelectedInnerBlock,
      getBlockRootClientId = _select.getBlockRootClientId,
      getSelectedBlockClientId = _select.getSelectedBlockClientId,
      getBlockAttributes = _select.getBlockAttributes;

  var block = getBlock(clientId);
  var hasInnerBlocks = !!(block && block.innerBlocks.length);
  var isInnerBlockSelected = hasInnerBlocks && hasSelectedInnerBlock(clientId, true);
  var isLastInnerBlockSelected = false;

  if (isInnerBlockSelected) {
    var innerBlocks = block.innerBlocks;
    var selectedBlockClientId = getSelectedBlockClientId();
    var totalInnerBlocks = innerBlocks.length - 1;
    var blockIndex = getBlockIndex(selectedBlockClientId, clientId);
    isLastInnerBlockSelected = totalInnerBlocks === blockIndex;
  }

  var parentId = getBlockRootClientId(clientId);
  var parentBlockAlignment = (_getBlockAttributes = getBlockAttributes(parentId)) === null || _getBlockAttributes === void 0 ? void 0 : _getBlockAttributes.align;
  return {
    hasInnerBlocks: hasInnerBlocks,
    isLastInnerBlockSelected: isLastInnerBlockSelected,
    parentBlockAlignment: parentBlockAlignment
  };
}), _compose.withPreferredColorScheme])(GroupEdit);

exports.default = _default;
//# sourceMappingURL=edit.native.js.map