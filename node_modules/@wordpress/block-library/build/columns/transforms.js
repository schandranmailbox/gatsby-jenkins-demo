"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _blocks = require("@wordpress/blocks");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var MAXIMUM_SELECTED_BLOCKS = 6;
var transforms = {
  from: [{
    type: 'block',
    isMultiBlock: true,
    blocks: ['*'],
    __experimentalConvert: function __experimentalConvert(blocks) {
      var columnWidth = +(100 / blocks.length).toFixed(2);
      var innerBlocksTemplate = blocks.map(function (_ref) {
        var name = _ref.name,
            attributes = _ref.attributes,
            innerBlocks = _ref.innerBlocks;
        return ['core/column', {
          width: "".concat(columnWidth, "%")
        }, [[name, _objectSpread({}, attributes), innerBlocks]]];
      });
      return (0, _blocks.createBlock)('core/columns', {}, (0, _blocks.createBlocksFromInnerBlocksTemplate)(innerBlocksTemplate));
    },
    isMatch: function isMatch(_ref2) {
      var selectedBlocksLength = _ref2.length;
      return selectedBlocksLength && selectedBlocksLength <= MAXIMUM_SELECTED_BLOCKS;
    }
  }]
};
var _default = transforms;
exports.default = _default;
//# sourceMappingURL=transforms.js.map