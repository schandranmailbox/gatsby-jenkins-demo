{"version":3,"sources":["@wordpress/block-library/src/query-loop/edit.js"],"names":["TEMPLATE","QueryLoopEdit","clientId","context","query","perPage","offset","categoryIds","postType","tagIds","order","orderBy","author","search","exclude","sticky","inherit","queryContext","templateSlug","layout","type","layoutType","columns","page","activeBlockContext","setActiveBlockContext","select","getEntityRecords","getBlocks","categories","tags","orderby","per_page","length","startsWith","replace","posts","blocks","blockContexts","map","post","postId","id","hasLayoutFlex","blockProps","className","innerBlocksProps","template","blockContext"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { useState, useMemo } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport {\n\tBlockContextProvider,\n\tBlockPreview,\n\tuseBlockProps,\n\t__experimentalUseInnerBlocksProps as useInnerBlocksProps,\n} from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport { useQueryContext } from '../query';\n\nconst TEMPLATE = [\n\t[ 'core/post-title' ],\n\t[ 'core/post-date' ],\n\t[ 'core/post-excerpt' ],\n];\nexport default function QueryLoopEdit( {\n\tclientId,\n\tcontext: {\n\t\tquery: {\n\t\t\tperPage,\n\t\t\toffset,\n\t\t\tcategoryIds,\n\t\t\tpostType,\n\t\t\ttagIds = [],\n\t\t\torder,\n\t\t\torderBy,\n\t\t\tauthor,\n\t\t\tsearch,\n\t\t\texclude,\n\t\t\tsticky,\n\t\t\tinherit,\n\t\t} = {},\n\t\tqueryContext = [ {} ],\n\t\ttemplateSlug,\n\t\tlayout: { type: layoutType = 'flex', columns = 1 } = {},\n\t},\n} ) {\n\tconst [ { page } ] = useQueryContext() || queryContext;\n\tconst [ activeBlockContext, setActiveBlockContext ] = useState();\n\n\tconst { posts, blocks } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEntityRecords } = select( 'core' );\n\t\t\tconst { getBlocks } = select( 'core/block-editor' );\n\t\t\tconst query = {\n\t\t\t\toffset: perPage ? perPage * ( page - 1 ) + offset : 0,\n\t\t\t\tcategories: categoryIds,\n\t\t\t\ttags: tagIds,\n\t\t\t\torder,\n\t\t\t\torderby: orderBy,\n\t\t\t};\n\t\t\tif ( perPage ) {\n\t\t\t\tquery.per_page = perPage;\n\t\t\t}\n\t\t\tif ( author ) {\n\t\t\t\tquery.author = author;\n\t\t\t}\n\t\t\tif ( search ) {\n\t\t\t\tquery.search = search;\n\t\t\t}\n\t\t\tif ( exclude?.length ) {\n\t\t\t\tquery.exclude = exclude;\n\t\t\t}\n\t\t\t// If sticky is not set, it will return all posts in the results.\n\t\t\t// If sticky is set to `only`, it will limit the results to sticky posts only.\n\t\t\t// If it is anything else, it will exclude sticky posts from results. For the record the value stored is `exclude`.\n\t\t\tif ( sticky ) {\n\t\t\t\tquery.sticky = sticky === 'only';\n\t\t\t}\n\t\t\t// If `inherit` is truthy, adjust conditionally the query to create a better preview.\n\t\t\tif ( inherit ) {\n\t\t\t\t// Change the post-type if needed.\n\t\t\t\tif ( templateSlug?.startsWith( 'archive-' ) ) {\n\t\t\t\t\tquery.postType = templateSlug.replace( 'archive-', '' );\n\t\t\t\t\tpostType = query.postType;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tposts: getEntityRecords( 'postType', postType, query ),\n\t\t\t\tblocks: getBlocks( clientId ),\n\t\t\t};\n\t\t},\n\t\t[\n\t\t\tperPage,\n\t\t\tpage,\n\t\t\toffset,\n\t\t\tcategoryIds,\n\t\t\ttagIds,\n\t\t\torder,\n\t\t\torderBy,\n\t\t\tclientId,\n\t\t\tauthor,\n\t\t\tsearch,\n\t\t\tpostType,\n\t\t\texclude,\n\t\t\tsticky,\n\t\t\tinherit,\n\t\t\ttemplateSlug,\n\t\t]\n\t);\n\n\tconst blockContexts = useMemo(\n\t\t() =>\n\t\t\tposts?.map( ( post ) => ( {\n\t\t\t\tpostType: post.type,\n\t\t\t\tpostId: post.id,\n\t\t\t} ) ),\n\t\t[ posts ]\n\t);\n\tconst hasLayoutFlex = layoutType === 'flex' && columns > 1;\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classnames( {\n\t\t\t'is-flex-container': hasLayoutFlex,\n\t\t\t[ `columns-${ columns }` ]: hasLayoutFlex,\n\t\t} ),\n\t} );\n\tconst innerBlocksProps = useInnerBlocksProps( {}, { template: TEMPLATE } );\n\n\tif ( ! posts ) {\n\t\treturn <p { ...blockProps }>{ __( 'Loadingâ€¦' ) }</p>;\n\t}\n\n\tif ( ! posts.length ) {\n\t\treturn <p { ...blockProps }> { __( 'No results found.' ) }</p>;\n\t}\n\n\treturn (\n\t\t<ul { ...blockProps }>\n\t\t\t{ blockContexts &&\n\t\t\t\tblockContexts.map( ( blockContext ) => (\n\t\t\t\t\t<BlockContextProvider\n\t\t\t\t\t\tkey={ blockContext.postId }\n\t\t\t\t\t\tvalue={ blockContext }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ blockContext ===\n\t\t\t\t\t\t( activeBlockContext || blockContexts[ 0 ] ) ? (\n\t\t\t\t\t\t\t<li { ...innerBlocksProps } />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<BlockPreview\n\t\t\t\t\t\t\t\t\tblocks={ blocks }\n\t\t\t\t\t\t\t\t\t__experimentalLive\n\t\t\t\t\t\t\t\t\t__experimentalOnClick={ () =>\n\t\t\t\t\t\t\t\t\t\tsetActiveBlockContext( blockContext )\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</BlockContextProvider>\n\t\t\t\t) ) }\n\t\t</ul>\n\t);\n}\n"]}