"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = HTMLEdit;

var _element = require("@wordpress/element");

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _i18n = require("@wordpress/i18n");

var _blockEditor = require("@wordpress/block-editor");

var _components = require("@wordpress/components");

var _data = require("@wordpress/data");

/**
 * WordPress dependencies
 */
function HTMLEdit(_ref) {
  var attributes = _ref.attributes,
      setAttributes = _ref.setAttributes,
      isSelected = _ref.isSelected;

  var _useState = (0, _element.useState)(),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      isPreview = _useState2[0],
      setIsPreview = _useState2[1];

  var styles = (0, _data.useSelect)(function (select) {
    // Default styles used to unset some of the styles
    // that might be inherited from the editor style.
    var defaultStyles = "\n\t\t\thtml,body,:root {\n\t\t\t\tmargin: 0 !important;\n\t\t\t\tpadding: 0 !important;\n\t\t\t\toverflow: visible !important;\n\t\t\t\tmin-height: auto !important;\n\t\t\t}\n\t\t";
    return [defaultStyles].concat((0, _toConsumableArray2.default)((0, _blockEditor.transformStyles)(select('core/block-editor').getSettings().styles)));
  }, []);

  function switchToPreview() {
    setIsPreview(true);
  }

  function switchToHTML() {
    setIsPreview(false);
  }

  return (0, _element.createElement)("div", (0, _blockEditor.useBlockProps)({
    className: 'block-library-html__edit'
  }), (0, _element.createElement)(_blockEditor.BlockControls, null, (0, _element.createElement)(_components.ToolbarGroup, null, (0, _element.createElement)(_components.ToolbarButton, {
    className: "components-tab-button",
    isPressed: !isPreview,
    onClick: switchToHTML
  }, (0, _element.createElement)("span", null, "HTML")), (0, _element.createElement)(_components.ToolbarButton, {
    className: "components-tab-button",
    isPressed: isPreview,
    onClick: switchToPreview
  }, (0, _element.createElement)("span", null, (0, _i18n.__)('Preview'))))), (0, _element.createElement)(_components.Disabled.Consumer, null, function (isDisabled) {
    return isPreview || isDisabled ? (0, _element.createElement)(_element.Fragment, null, (0, _element.createElement)(_components.SandBox, {
      html: attributes.content,
      styles: styles
    }), !isSelected && (0, _element.createElement)("div", {
      className: "block-library-html__preview-overlay"
    })) : (0, _element.createElement)(_blockEditor.PlainText, {
      value: attributes.content,
      onChange: function onChange(content) {
        return setAttributes({
          content: content
        });
      },
      placeholder: (0, _i18n.__)('Write HTMLâ€¦'),
      "aria-label": (0, _i18n.__)('HTML')
    });
  }));
}
//# sourceMappingURL=edit.js.map