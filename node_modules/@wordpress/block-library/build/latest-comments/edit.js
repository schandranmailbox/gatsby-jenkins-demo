"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = LatestComments;

var _element = require("@wordpress/element");

var _blockEditor = require("@wordpress/block-editor");

var _components = require("@wordpress/components");

var _serverSideRender = _interopRequireDefault(require("@wordpress/server-side-render"));

var _i18n = require("@wordpress/i18n");

/**
 * WordPress dependencies
 */

/**
 * Minimum number of comments a user can show using this block.
 *
 * @type {number}
 */
var MIN_COMMENTS = 1;
/**
 * Maximum number of comments a user can show using this block.
 *
 * @type {number}
 */

var MAX_COMMENTS = 100;

function LatestComments(_ref) {
  var attributes = _ref.attributes,
      setAttributes = _ref.setAttributes;
  var commentsToShow = attributes.commentsToShow,
      displayAvatar = attributes.displayAvatar,
      displayDate = attributes.displayDate,
      displayExcerpt = attributes.displayExcerpt;
  return (0, _element.createElement)("div", (0, _blockEditor.useBlockProps)(), (0, _element.createElement)(_blockEditor.InspectorControls, null, (0, _element.createElement)(_components.PanelBody, {
    title: (0, _i18n.__)('Latest comments settings')
  }, (0, _element.createElement)(_components.ToggleControl, {
    label: (0, _i18n.__)('Display avatar'),
    checked: displayAvatar,
    onChange: function onChange() {
      return setAttributes({
        displayAvatar: !displayAvatar
      });
    }
  }), (0, _element.createElement)(_components.ToggleControl, {
    label: (0, _i18n.__)('Display date'),
    checked: displayDate,
    onChange: function onChange() {
      return setAttributes({
        displayDate: !displayDate
      });
    }
  }), (0, _element.createElement)(_components.ToggleControl, {
    label: (0, _i18n.__)('Display excerpt'),
    checked: displayExcerpt,
    onChange: function onChange() {
      return setAttributes({
        displayExcerpt: !displayExcerpt
      });
    }
  }), (0, _element.createElement)(_components.RangeControl, {
    label: (0, _i18n.__)('Number of comments'),
    value: commentsToShow,
    onChange: function onChange(value) {
      return setAttributes({
        commentsToShow: value
      });
    },
    min: MIN_COMMENTS,
    max: MAX_COMMENTS,
    required: true
  }))), (0, _element.createElement)(_components.Disabled, null, (0, _element.createElement)(_serverSideRender.default, {
    block: "core/latest-comments",
    attributes: attributes
  })));
}
//# sourceMappingURL=edit.js.map