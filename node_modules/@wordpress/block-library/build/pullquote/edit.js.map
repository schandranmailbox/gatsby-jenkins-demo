{"version":3,"sources":["@wordpress/block-library/src/pullquote/edit.js"],"names":["PullQuoteEdit","colorUtils","textColor","attributes","value","citation","setAttributes","setTextColor","setMainColor","mainColor","isSelected","insertBlocksAfter","wasTextColorAutomaticallyComputed","blockProps","style","className","isSolidColorStyle","SOLID_COLOR_CLASS","newBlockProps","color","class","backgroundColor","borderColor","pullQuoteMainColorSetter","colorValue","needTextColor","current","shouldSetTextColor","customMainColor","getMostReadableColor","pullQuoteTextColorSetter","undefined","nextValue","RichText","isEmpty","nextCitation","Platform","OS","onChange","label"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { includes } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Platform, useEffect, useRef } from '@wordpress/element';\nimport {\n\tRichText,\n\tContrastChecker,\n\tInspectorControls,\n\twithColors,\n\tPanelColorSettings,\n\tuseBlockProps,\n} from '@wordpress/block-editor';\nimport { createBlock } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { Figure } from './figure';\nimport { BlockQuote } from './blockquote';\n\n/**\n * Internal dependencies\n */\nimport { SOLID_COLOR_CLASS } from './shared';\n\nfunction PullQuoteEdit( {\n\tcolorUtils,\n\ttextColor,\n\tattributes: { value, citation },\n\tsetAttributes,\n\tsetTextColor,\n\tsetMainColor,\n\tmainColor,\n\tisSelected,\n\tinsertBlocksAfter,\n} ) {\n\tconst wasTextColorAutomaticallyComputed = useRef( false );\n\tconst blockProps = useBlockProps();\n\tconst { style = {}, className } = blockProps;\n\tconst isSolidColorStyle = includes( className, SOLID_COLOR_CLASS );\n\tconst newBlockProps = {\n\t\t...blockProps,\n\t\tclassName: classnames( className, {\n\t\t\t'has-background': isSolidColorStyle && mainColor.color,\n\t\t\t[ mainColor.class ]: isSolidColorStyle && mainColor.class,\n\t\t} ),\n\t\tstyle: isSolidColorStyle\n\t\t\t? { ...style, backgroundColor: mainColor.color }\n\t\t\t: { ...style, borderColor: mainColor.color },\n\t};\n\n\tfunction pullQuoteMainColorSetter( colorValue ) {\n\t\tconst needTextColor =\n\t\t\t! textColor.color || wasTextColorAutomaticallyComputed.current;\n\t\tconst shouldSetTextColor = isSolidColorStyle && needTextColor;\n\n\t\tif ( isSolidColorStyle ) {\n\t\t\t// If we use the solid color style, set the color using the normal mechanism.\n\t\t\tsetMainColor( colorValue );\n\t\t} else {\n\t\t\t// If we use the default style, set the color as a custom color to force the usage of an inline style.\n\t\t\t// Default style uses a border color for which classes are not available.\n\t\t\tsetAttributes( { customMainColor: colorValue } );\n\t\t}\n\n\t\tif ( shouldSetTextColor ) {\n\t\t\tif ( colorValue ) {\n\t\t\t\twasTextColorAutomaticallyComputed.current = true;\n\t\t\t\tsetTextColor( colorUtils.getMostReadableColor( colorValue ) );\n\t\t\t} else if ( wasTextColorAutomaticallyComputed.current ) {\n\t\t\t\t// We have to unset our previously computed text color on unsetting the main color.\n\t\t\t\twasTextColorAutomaticallyComputed.current = false;\n\t\t\t\tsetTextColor();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction pullQuoteTextColorSetter( colorValue ) {\n\t\tsetTextColor( colorValue );\n\t\twasTextColorAutomaticallyComputed.current = false;\n\t}\n\n\tuseEffect( () => {\n\t\t// If the block includes a named color and we switched from the\n\t\t// solid color style to the default style.\n\t\tif ( mainColor && ! isSolidColorStyle ) {\n\t\t\t// Remove the named color, and set the color as a custom color.\n\t\t\t// This is done because named colors use classes, in the default style we use a border color,\n\t\t\t// and themes don't set classes for border colors.\n\t\t\tsetAttributes( {\n\t\t\t\tmainColor: undefined,\n\t\t\t\tcustomMainColor: mainColor.color,\n\t\t\t} );\n\t\t}\n\t}, [ isSolidColorStyle, mainColor ] );\n\n\treturn (\n\t\t<>\n\t\t\t<Figure { ...newBlockProps }>\n\t\t\t\t<BlockQuote\n\t\t\t\t\tstyle={ {\n\t\t\t\t\t\tcolor: textColor.color,\n\t\t\t\t\t} }\n\t\t\t\t\tclassName={\n\t\t\t\t\t\ttextColor.color &&\n\t\t\t\t\t\tclassnames( 'has-text-color', {\n\t\t\t\t\t\t\t[ textColor.class ]: textColor.class,\n\t\t\t\t\t\t} )\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<RichText\n\t\t\t\t\t\tidentifier=\"value\"\n\t\t\t\t\t\tmultiline\n\t\t\t\t\t\tvalue={ value }\n\t\t\t\t\t\tonChange={ ( nextValue ) =>\n\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\tvalue: nextValue,\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t}\n\t\t\t\t\t\taria-label={ __( 'Pullquote text' ) }\n\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t// translators: placeholder text used for the quote\n\t\t\t\t\t\t\t__( 'Write quote…' )\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttextAlign=\"center\"\n\t\t\t\t\t/>\n\t\t\t\t\t{ ( ! RichText.isEmpty( citation ) || isSelected ) && (\n\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\tidentifier=\"citation\"\n\t\t\t\t\t\t\tvalue={ citation }\n\t\t\t\t\t\t\taria-label={ __( 'Pullquote citation text' ) }\n\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\t// translators: placeholder text used for the citation\n\t\t\t\t\t\t\t\t__( 'Write citation…' )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonChange={ ( nextCitation ) =>\n\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\tcitation: nextCitation,\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tclassName=\"wp-block-pullquote__citation\"\n\t\t\t\t\t\t\t__unstableMobileNoFocusOnMount\n\t\t\t\t\t\t\ttextAlign=\"center\"\n\t\t\t\t\t\t\t__unstableOnSplitAtEnd={ () =>\n\t\t\t\t\t\t\t\tinsertBlocksAfter(\n\t\t\t\t\t\t\t\t\tcreateBlock( 'core/paragraph' )\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</BlockQuote>\n\t\t\t</Figure>\n\t\t\t{ Platform.OS === 'web' && (\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<PanelColorSettings\n\t\t\t\t\t\ttitle={ __( 'Color settings' ) }\n\t\t\t\t\t\tcolorSettings={ [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: mainColor.color,\n\t\t\t\t\t\t\t\tonChange: pullQuoteMainColorSetter,\n\t\t\t\t\t\t\t\tlabel: __( 'Main color' ),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: textColor.color,\n\t\t\t\t\t\t\t\tonChange: pullQuoteTextColorSetter,\n\t\t\t\t\t\t\t\tlabel: __( 'Text color' ),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t] }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ isSolidColorStyle && (\n\t\t\t\t\t\t\t<ContrastChecker\n\t\t\t\t\t\t\t\t{ ...{\n\t\t\t\t\t\t\t\t\ttextColor: textColor.color,\n\t\t\t\t\t\t\t\t\tbackgroundColor: mainColor.color,\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\tisLargeText={ false }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</PanelColorSettings>\n\t\t\t\t</InspectorControls>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nexport default withColors( {\n\tmainColor: 'background-color',\n\ttextColor: 'color',\n} )( PullQuoteEdit );\n"]}