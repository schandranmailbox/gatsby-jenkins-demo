{"version":3,"sources":["@wordpress/block-library/src/image/image.js"],"names":["getFilename","url","path","split","Image","attributes","alt","caption","align","id","href","rel","linkClass","linkDestination","title","width","height","linkTarget","sizeSlug","setAttributes","isSelected","insertBlocksAfter","onReplace","onSelectImage","onSelectURL","onUploadError","containerRef","captionRef","prevUrl","select","getMedia","getMultiSelectedBlockClientIds","getBlockName","getSelectedBlock","getSelectedBlockClientId","multiSelectedClientIds","block","currentId","image","multiImageSelection","length","every","clientId","getSettings","imageEditing","imageSizes","maxWidth","mediaUpload","replaceBlocks","toggleSelection","noticesStore","createErrorNotice","createSuccessNotice","isLargeViewport","captionFocused","setCaptionFocused","isWideAligned","naturalWidth","naturalHeight","setNaturalSize","isEditingImage","setIsEditingImage","externalBlob","setExternalBlob","clientWidth","isResizable","imageSizeOptions","slug","name","value","label","coverBlockExists","window","fetch","then","response","blob","current","focus","onResizeStart","onResizeStop","onImageError","embedBlock","undefined","onSetHref","props","onSetTitle","onFocusCaption","onImageClick","updateAlt","newAlt","updateImage","newSizeSlug","newUrl","uploadExternal","filesList","onFileChange","img","type","allowedTypes","ALLOWED_MEDIA_TYPES","onError","message","canEditImage","allowCrop","controls","source_url","link","crop","upload","textColor","filename","defaultedAlt","event","target","imageWidthWithinContainer","imageHeightWithinContainer","exceedMaxWidth","ratio","currentWidth","currentHeight","minWidth","MIN_SIZE","minHeight","maxWidthBuffer","showRightHandle","showLeftHandle","top","right","bottom","left","direction","elt","delta","parseInt","imageAttributes","RichText","isEmpty"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { get, filter, map, last, pick, includes } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { isBlobURL } from '@wordpress/blob';\nimport {\n\tExternalLink,\n\tPanelBody,\n\tResizableBox,\n\tSpinner,\n\tTextareaControl,\n\tTextControl,\n\tToolbarGroup,\n\tToolbarButton,\n} from '@wordpress/components';\nimport { useViewportMatch, usePrevious } from '@wordpress/compose';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n\tBlockControls,\n\tInspectorControls,\n\tInspectorAdvancedControls,\n\tRichText,\n\t__experimentalImageSizeControl as ImageSizeControl,\n\t__experimentalImageURLInputUI as ImageURLInputUI,\n\tMediaReplaceFlow,\n} from '@wordpress/block-editor';\nimport { useEffect, useState, useRef } from '@wordpress/element';\nimport { __, sprintf, isRTL } from '@wordpress/i18n';\nimport { getPath } from '@wordpress/url';\nimport {\n\tcreateBlock,\n\tgetBlockType,\n\tswitchToBlockType,\n} from '@wordpress/blocks';\nimport { crop, textColor, upload } from '@wordpress/icons';\nimport { store as noticesStore } from '@wordpress/notices';\n\n/**\n * Internal dependencies\n */\nimport { createUpgradedEmbedBlock } from '../embed/util';\nimport useClientWidth from './use-client-width';\nimport ImageEditor, { ImageEditingProvider } from './image-editing';\nimport { isExternalImage } from './edit';\n\n/**\n * Module constants\n */\nimport { MIN_SIZE, ALLOWED_MEDIA_TYPES } from './constants';\n\nfunction getFilename( url ) {\n\tconst path = getPath( url );\n\tif ( path ) {\n\t\treturn last( path.split( '/' ) );\n\t}\n}\n\nexport default function Image( {\n\tattributes: {\n\t\turl = '',\n\t\talt,\n\t\tcaption,\n\t\talign,\n\t\tid,\n\t\thref,\n\t\trel,\n\t\tlinkClass,\n\t\tlinkDestination,\n\t\ttitle,\n\t\twidth,\n\t\theight,\n\t\tlinkTarget,\n\t\tsizeSlug,\n\t},\n\tsetAttributes,\n\tisSelected,\n\tinsertBlocksAfter,\n\tonReplace,\n\tonSelectImage,\n\tonSelectURL,\n\tonUploadError,\n\tcontainerRef,\n} ) {\n\tconst captionRef = useRef();\n\tconst prevUrl = usePrevious( url );\n\tconst { block, currentId, image, multiImageSelection } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getMedia } = select( 'core' );\n\t\t\tconst {\n\t\t\t\tgetMultiSelectedBlockClientIds,\n\t\t\t\tgetBlockName,\n\t\t\t\tgetSelectedBlock,\n\t\t\t\tgetSelectedBlockClientId,\n\t\t\t} = select( 'core/block-editor' );\n\t\t\tconst multiSelectedClientIds = getMultiSelectedBlockClientIds();\n\t\t\treturn {\n\t\t\t\tblock: getSelectedBlock(),\n\t\t\t\tcurrentId: getSelectedBlockClientId(),\n\t\t\t\timage: id && isSelected ? getMedia( id ) : null,\n\t\t\t\tmultiImageSelection:\n\t\t\t\t\tmultiSelectedClientIds.length &&\n\t\t\t\t\tmultiSelectedClientIds.every(\n\t\t\t\t\t\t( clientId ) =>\n\t\t\t\t\t\t\tgetBlockName( clientId ) === 'core/image'\n\t\t\t\t\t),\n\t\t\t};\n\t\t},\n\t\t[ id, isSelected ]\n\t);\n\tconst { imageEditing, imageSizes, maxWidth, mediaUpload } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getSettings } = select( 'core/block-editor' );\n\t\t\treturn pick( getSettings(), [\n\t\t\t\t'imageEditing',\n\t\t\t\t'imageSizes',\n\t\t\t\t'maxWidth',\n\t\t\t\t'mediaUpload',\n\t\t\t] );\n\t\t}\n\t);\n\tconst { replaceBlocks, toggleSelection } = useDispatch(\n\t\t'core/block-editor'\n\t);\n\tconst { createErrorNotice, createSuccessNotice } = useDispatch(\n\t\tnoticesStore\n\t);\n\tconst isLargeViewport = useViewportMatch( 'medium' );\n\tconst [ captionFocused, setCaptionFocused ] = useState( false );\n\tconst isWideAligned = includes( [ 'wide', 'full' ], align );\n\tconst [ { naturalWidth, naturalHeight }, setNaturalSize ] = useState( {} );\n\tconst [ isEditingImage, setIsEditingImage ] = useState( false );\n\tconst [ externalBlob, setExternalBlob ] = useState();\n\tconst clientWidth = useClientWidth( containerRef, [ align ] );\n\tconst isResizable = ! isWideAligned && isLargeViewport;\n\tconst imageSizeOptions = map(\n\t\tfilter( imageSizes, ( { slug } ) =>\n\t\t\tget( image, [ 'media_details', 'sizes', slug, 'source_url' ] )\n\t\t),\n\t\t( { name, slug } ) => ( { value: slug, label: name } )\n\t);\n\n\t// Check if the cover block is registered.\n\tconst coverBlockExists = !! getBlockType( 'core/cover' );\n\n\tuseEffect( () => {\n\t\tif ( ! isSelected ) {\n\t\t\tsetCaptionFocused( false );\n\t\t}\n\t}, [ isSelected ] );\n\n\t// If an image is externally hosted, try to fetch the image data. This may\n\t// fail if the image host doesn't allow CORS with the domain. If it works,\n\t// we can enable a button in the toolbar to upload the image.\n\tuseEffect( () => {\n\t\tif ( ! isExternalImage( id, url ) || ! isSelected || externalBlob ) {\n\t\t\treturn;\n\t\t}\n\n\t\twindow\n\t\t\t.fetch( url )\n\t\t\t.then( ( response ) => response.blob() )\n\t\t\t.then( ( blob ) => setExternalBlob( blob ) );\n\t}, [ id, url, isSelected, externalBlob ] );\n\n\t// Focus the caption after inserting an image from the placeholder. This is\n\t// done to preserve the behaviour of focussing the first tabbable element\n\t// when a block is mounted. Previously, the image block would remount when\n\t// the placeholder is removed. Maybe this behaviour could be removed.\n\tuseEffect( () => {\n\t\tif ( url && ! prevUrl && isSelected ) {\n\t\t\tcaptionRef.current.focus();\n\t\t}\n\t}, [ url, prevUrl ] );\n\n\tfunction onResizeStart() {\n\t\ttoggleSelection( false );\n\t}\n\n\tfunction onResizeStop() {\n\t\ttoggleSelection( true );\n\t}\n\n\tfunction onImageError() {\n\t\t// Check if there's an embed block that handles this URL.\n\t\tconst embedBlock = createUpgradedEmbedBlock( { attributes: { url } } );\n\t\tif ( undefined !== embedBlock ) {\n\t\t\tonReplace( embedBlock );\n\t\t}\n\t}\n\n\tfunction onSetHref( props ) {\n\t\tsetAttributes( props );\n\t}\n\n\tfunction onSetTitle( value ) {\n\t\t// This is the HTML title attribute, separate from the media object\n\t\t// title.\n\t\tsetAttributes( { title: value } );\n\t}\n\n\tfunction onFocusCaption() {\n\t\tif ( ! captionFocused ) {\n\t\t\tsetCaptionFocused( true );\n\t\t}\n\t}\n\n\tfunction onImageClick() {\n\t\tif ( captionFocused ) {\n\t\t\tsetCaptionFocused( false );\n\t\t}\n\t}\n\n\tfunction updateAlt( newAlt ) {\n\t\tsetAttributes( { alt: newAlt } );\n\t}\n\n\tfunction updateImage( newSizeSlug ) {\n\t\tconst newUrl = get( image, [\n\t\t\t'media_details',\n\t\t\t'sizes',\n\t\t\tnewSizeSlug,\n\t\t\t'source_url',\n\t\t] );\n\t\tif ( ! newUrl ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tsetAttributes( {\n\t\t\turl: newUrl,\n\t\t\twidth: undefined,\n\t\t\theight: undefined,\n\t\t\tsizeSlug: newSizeSlug,\n\t\t} );\n\t}\n\n\tfunction uploadExternal() {\n\t\tmediaUpload( {\n\t\t\tfilesList: [ externalBlob ],\n\t\t\tonFileChange( [ img ] ) {\n\t\t\t\tonSelectImage( img );\n\n\t\t\t\tif ( isBlobURL( img.url ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsetExternalBlob();\n\t\t\t\tcreateSuccessNotice( __( 'Image uploaded.' ), {\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t} );\n\t\t\t},\n\t\t\tallowedTypes: ALLOWED_MEDIA_TYPES,\n\t\t\tonError( message ) {\n\t\t\t\tcreateErrorNotice( message, { type: 'snackbar' } );\n\t\t\t},\n\t\t} );\n\t}\n\n\tuseEffect( () => {\n\t\tif ( ! isSelected ) {\n\t\t\tsetIsEditingImage( false );\n\t\t}\n\t}, [ isSelected ] );\n\n\tconst canEditImage = id && naturalWidth && naturalHeight && imageEditing;\n\tconst allowCrop = ! multiImageSelection && canEditImage && ! isEditingImage;\n\n\tconst controls = (\n\t\t<>\n\t\t\t<BlockControls>\n\t\t\t\t{ ! multiImageSelection && ! isEditingImage && (\n\t\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t\t<ImageURLInputUI\n\t\t\t\t\t\t\turl={ href || '' }\n\t\t\t\t\t\t\tonChangeUrl={ onSetHref }\n\t\t\t\t\t\t\tlinkDestination={ linkDestination }\n\t\t\t\t\t\t\tmediaUrl={ ( image && image.source_url ) || url }\n\t\t\t\t\t\t\tmediaLink={ image && image.link }\n\t\t\t\t\t\t\tlinkTarget={ linkTarget }\n\t\t\t\t\t\t\tlinkClass={ linkClass }\n\t\t\t\t\t\t\trel={ rel }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ToolbarGroup>\n\t\t\t\t) }\n\t\t\t\t{ allowCrop && (\n\t\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\t\tonClick={ () => setIsEditingImage( true ) }\n\t\t\t\t\t\t\ticon={ crop }\n\t\t\t\t\t\t\tlabel={ __( 'Crop' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ToolbarGroup>\n\t\t\t\t) }\n\t\t\t\t{ externalBlob && (\n\t\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\t\tonClick={ uploadExternal }\n\t\t\t\t\t\t\ticon={ upload }\n\t\t\t\t\t\t\tlabel={ __( 'Upload external image' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ToolbarGroup>\n\t\t\t\t) }\n\t\t\t\t{ ! multiImageSelection && ! isEditingImage && (\n\t\t\t\t\t<MediaReplaceFlow\n\t\t\t\t\t\tmediaId={ id }\n\t\t\t\t\t\tmediaURL={ url }\n\t\t\t\t\t\tallowedTypes={ ALLOWED_MEDIA_TYPES }\n\t\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\t\tonSelect={ onSelectImage }\n\t\t\t\t\t\tonSelectURL={ onSelectURL }\n\t\t\t\t\t\tonError={ onUploadError }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ ! multiImageSelection && coverBlockExists && (\n\t\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\t\ticon={ textColor }\n\t\t\t\t\t\t\tlabel={ __( 'Add text over image' ) }\n\t\t\t\t\t\t\tonClick={ () =>\n\t\t\t\t\t\t\t\treplaceBlocks(\n\t\t\t\t\t\t\t\t\tcurrentId,\n\t\t\t\t\t\t\t\t\tswitchToBlockType( block, 'core/cover' )\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ToolbarGroup>\n\t\t\t\t) }\n\t\t\t</BlockControls>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Image settings' ) }>\n\t\t\t\t\t{ ! multiImageSelection && (\n\t\t\t\t\t\t<TextareaControl\n\t\t\t\t\t\t\tlabel={ __( 'Alt text (alternative text)' ) }\n\t\t\t\t\t\t\tvalue={ alt }\n\t\t\t\t\t\t\tonChange={ updateAlt }\n\t\t\t\t\t\t\thelp={\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<ExternalLink href=\"https://www.w3.org/WAI/tutorials/images/decision-tree\">\n\t\t\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t\t\t'Describe the purpose of the image'\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t\t'Leave empty if the image is purely decorative.'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t<ImageSizeControl\n\t\t\t\t\t\tonChangeImage={ updateImage }\n\t\t\t\t\t\tonChange={ ( value ) => setAttributes( value ) }\n\t\t\t\t\t\tslug={ sizeSlug }\n\t\t\t\t\t\twidth={ width }\n\t\t\t\t\t\theight={ height }\n\t\t\t\t\t\timageSizeOptions={ imageSizeOptions }\n\t\t\t\t\t\tisResizable={ isResizable }\n\t\t\t\t\t\timageWidth={ naturalWidth }\n\t\t\t\t\t\timageHeight={ naturalHeight }\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<InspectorAdvancedControls>\n\t\t\t\t<TextControl\n\t\t\t\t\tlabel={ __( 'Title attribute' ) }\n\t\t\t\t\tvalue={ title || '' }\n\t\t\t\t\tonChange={ onSetTitle }\n\t\t\t\t\thelp={\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t'Describe the role of this image on the page.'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t<ExternalLink href=\"https://www.w3.org/TR/html52/dom.html#the-title-attribute\">\n\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t'(Note: many devices and browsers do not display this text.)'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</InspectorAdvancedControls>\n\t\t</>\n\t);\n\n\tconst filename = getFilename( url );\n\tlet defaultedAlt;\n\n\tif ( alt ) {\n\t\tdefaultedAlt = alt;\n\t} else if ( filename ) {\n\t\tdefaultedAlt = sprintf(\n\t\t\t/* translators: %s: file name */\n\t\t\t__( 'This image has an empty alt attribute; its file name is %s' ),\n\t\t\tfilename\n\t\t);\n\t} else {\n\t\tdefaultedAlt = __( 'This image has an empty alt attribute' );\n\t}\n\n\tlet img = (\n\t\t// Disable reason: Image itself is not meant to be interactive, but\n\t\t// should direct focus to block.\n\t\t/* eslint-disable jsx-a11y/no-noninteractive-element-interactions, jsx-a11y/click-events-have-key-events */\n\t\t<>\n\t\t\t<img\n\t\t\t\tsrc={ url }\n\t\t\t\talt={ defaultedAlt }\n\t\t\t\tonClick={ onImageClick }\n\t\t\t\tonError={ () => onImageError() }\n\t\t\t\tonLoad={ ( event ) => {\n\t\t\t\t\tsetNaturalSize(\n\t\t\t\t\t\tpick( event.target, [\n\t\t\t\t\t\t\t'naturalWidth',\n\t\t\t\t\t\t\t'naturalHeight',\n\t\t\t\t\t\t] )\n\t\t\t\t\t);\n\t\t\t\t} }\n\t\t\t/>\n\t\t\t{ isBlobURL( url ) && <Spinner /> }\n\t\t</>\n\t\t/* eslint-enable jsx-a11y/no-noninteractive-element-interactions, jsx-a11y/click-events-have-key-events */\n\t);\n\n\tlet imageWidthWithinContainer;\n\tlet imageHeightWithinContainer;\n\n\tif ( clientWidth && naturalWidth && naturalHeight ) {\n\t\tconst exceedMaxWidth = naturalWidth > clientWidth;\n\t\tconst ratio = naturalHeight / naturalWidth;\n\t\timageWidthWithinContainer = exceedMaxWidth ? clientWidth : naturalWidth;\n\t\timageHeightWithinContainer = exceedMaxWidth\n\t\t\t? clientWidth * ratio\n\t\t\t: naturalHeight;\n\t}\n\n\tif ( canEditImage && isEditingImage ) {\n\t\timg = (\n\t\t\t<ImageEditor\n\t\t\t\turl={ url }\n\t\t\t\twidth={ width }\n\t\t\t\theight={ height }\n\t\t\t\tclientWidth={ clientWidth }\n\t\t\t\tnaturalHeight={ naturalHeight }\n\t\t\t\tnaturalWidth={ naturalWidth }\n\t\t\t/>\n\t\t);\n\t} else if ( ! isResizable || ! imageWidthWithinContainer ) {\n\t\timg = <div style={ { width, height } }>{ img }</div>;\n\t} else {\n\t\tconst currentWidth = width || imageWidthWithinContainer;\n\t\tconst currentHeight = height || imageHeightWithinContainer;\n\n\t\tconst ratio = naturalWidth / naturalHeight;\n\t\tconst minWidth =\n\t\t\tnaturalWidth < naturalHeight ? MIN_SIZE : MIN_SIZE * ratio;\n\t\tconst minHeight =\n\t\t\tnaturalHeight < naturalWidth ? MIN_SIZE : MIN_SIZE / ratio;\n\n\t\t// With the current implementation of ResizableBox, an image needs an\n\t\t// explicit pixel value for the max-width. In absence of being able to\n\t\t// set the content-width, this max-width is currently dictated by the\n\t\t// vanilla editor style. The following variable adds a buffer to this\n\t\t// vanilla style, so 3rd party themes have some wiggleroom. This does,\n\t\t// in most cases, allow you to scale the image beyond the width of the\n\t\t// main column, though not infinitely.\n\t\t// @todo It would be good to revisit this once a content-width variable\n\t\t// becomes available.\n\t\tconst maxWidthBuffer = maxWidth * 2.5;\n\n\t\tlet showRightHandle = false;\n\t\tlet showLeftHandle = false;\n\n\t\t/* eslint-disable no-lonely-if */\n\t\t// See https://github.com/WordPress/gutenberg/issues/7584.\n\t\tif ( align === 'center' ) {\n\t\t\t// When the image is centered, show both handles.\n\t\t\tshowRightHandle = true;\n\t\t\tshowLeftHandle = true;\n\t\t} else if ( isRTL() ) {\n\t\t\t// In RTL mode the image is on the right by default.\n\t\t\t// Show the right handle and hide the left handle only when it is\n\t\t\t// aligned left. Otherwise always show the left handle.\n\t\t\tif ( align === 'left' ) {\n\t\t\t\tshowRightHandle = true;\n\t\t\t} else {\n\t\t\t\tshowLeftHandle = true;\n\t\t\t}\n\t\t} else {\n\t\t\t// Show the left handle and hide the right handle only when the\n\t\t\t// image is aligned right. Otherwise always show the right handle.\n\t\t\tif ( align === 'right' ) {\n\t\t\t\tshowLeftHandle = true;\n\t\t\t} else {\n\t\t\t\tshowRightHandle = true;\n\t\t\t}\n\t\t}\n\t\t/* eslint-enable no-lonely-if */\n\n\t\timg = (\n\t\t\t<ResizableBox\n\t\t\t\tsize={ { width, height } }\n\t\t\t\tshowHandle={ isSelected }\n\t\t\t\tminWidth={ minWidth }\n\t\t\t\tmaxWidth={ maxWidthBuffer }\n\t\t\t\tminHeight={ minHeight }\n\t\t\t\tmaxHeight={ maxWidthBuffer / ratio }\n\t\t\t\tlockAspectRatio\n\t\t\t\tenable={ {\n\t\t\t\t\ttop: false,\n\t\t\t\t\tright: showRightHandle,\n\t\t\t\t\tbottom: true,\n\t\t\t\t\tleft: showLeftHandle,\n\t\t\t\t} }\n\t\t\t\tonResizeStart={ onResizeStart }\n\t\t\t\tonResizeStop={ ( event, direction, elt, delta ) => {\n\t\t\t\t\tonResizeStop();\n\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\twidth: parseInt( currentWidth + delta.width, 10 ),\n\t\t\t\t\t\theight: parseInt( currentHeight + delta.height, 10 ),\n\t\t\t\t\t} );\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t{ img }\n\t\t\t</ResizableBox>\n\t\t);\n\t}\n\n\treturn (\n\t\t<ImageEditingProvider\n\t\t\tid={ id }\n\t\t\turl={ url }\n\t\t\tnaturalWidth={ naturalWidth }\n\t\t\tnaturalHeight={ naturalHeight }\n\t\t\tclientWidth={ clientWidth }\n\t\t\tonSaveImage={ ( imageAttributes ) =>\n\t\t\t\tsetAttributes( imageAttributes )\n\t\t\t}\n\t\t\tisEditing={ isEditingImage }\n\t\t\tonFinishEditing={ () => setIsEditingImage( false ) }\n\t\t>\n\t\t\t{ controls }\n\t\t\t{ img }\n\t\t\t{ ( ! RichText.isEmpty( caption ) || isSelected ) && (\n\t\t\t\t<RichText\n\t\t\t\t\tref={ captionRef }\n\t\t\t\t\ttagName=\"figcaption\"\n\t\t\t\t\taria-label={ __( 'Image caption text' ) }\n\t\t\t\t\tplaceholder={ __( 'Write caption…' ) }\n\t\t\t\t\tvalue={ caption }\n\t\t\t\t\tunstableOnFocus={ onFocusCaption }\n\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\tsetAttributes( { caption: value } )\n\t\t\t\t\t}\n\t\t\t\t\tisSelected={ captionFocused }\n\t\t\t\t\tinlineToolbar\n\t\t\t\t\t__unstableOnSplitAtEnd={ () =>\n\t\t\t\t\t\tinsertBlocksAfter( createBlock( 'core/paragraph' ) )\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t) }\n\t\t</ImageEditingProvider>\n\t);\n}\n"]}