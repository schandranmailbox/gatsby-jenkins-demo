"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _data = require("@wordpress/data");

var _blockEditor = require("@wordpress/block-editor");

var _blocks = require("@wordpress/blocks");

/**
 * WordPress dependencies
 */
var QueryPlaceholder = function QueryPlaceholder(_ref) {
  var _blockType$icon;

  var clientId = _ref.clientId,
      name = _ref.name,
      attributes = _ref.attributes,
      setAttributes = _ref.setAttributes;

  var _useSelect = (0, _data.useSelect)(function (select) {
    var _select = select(_blocks.store),
        getBlockVariations = _select.getBlockVariations,
        getBlockType = _select.getBlockType,
        getDefaultBlockVariation = _select.getDefaultBlockVariation;

    return {
      blockType: getBlockType(name),
      defaultVariation: getDefaultBlockVariation(name, 'block'),
      scopeVariations: getBlockVariations(name, 'block'),
      allVariations: getBlockVariations(name)
    };
  }, [name]),
      blockType = _useSelect.blockType,
      defaultVariation = _useSelect.defaultVariation,
      scopeVariations = _useSelect.scopeVariations,
      allVariations = _useSelect.allVariations;

  var _useDispatch = (0, _data.useDispatch)('core/block-editor'),
      replaceInnerBlocks = _useDispatch.replaceInnerBlocks;

  var blockProps = (0, _blockEditor.useBlockProps)();
  var matchingVariation = (0, _blockEditor.__experimentalGetMatchingVariation)(attributes, allVariations);
  var icon = (matchingVariation === null || matchingVariation === void 0 ? void 0 : matchingVariation.icon) || (blockType === null || blockType === void 0 ? void 0 : (_blockType$icon = blockType.icon) === null || _blockType$icon === void 0 ? void 0 : _blockType$icon.src);
  var label = (matchingVariation === null || matchingVariation === void 0 ? void 0 : matchingVariation.title) || (blockType === null || blockType === void 0 ? void 0 : blockType.title);
  return (0, _element.createElement)("div", blockProps, (0, _element.createElement)(_blockEditor.__experimentalBlockVariationPicker, {
    icon: icon,
    label: label,
    variations: scopeVariations,
    onSelect: function onSelect() {
      var nextVariation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultVariation;

      if (nextVariation.attributes) {
        setAttributes(nextVariation.attributes);
      }

      if (nextVariation.innerBlocks) {
        replaceInnerBlocks(clientId, (0, _blocks.createBlocksFromInnerBlocksTemplate)(nextVariation.innerBlocks), false);
      }
    }
  }));
};

var _default = QueryPlaceholder;
exports.default = _default;
//# sourceMappingURL=query-placeholder.js.map