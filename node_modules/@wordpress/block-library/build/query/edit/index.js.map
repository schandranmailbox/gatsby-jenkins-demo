{"version":3,"sources":["@wordpress/block-library/src/query/edit/index.js"],"names":["TEMPLATE","QueryContent","attributes","postId","context","setAttributes","queryId","query","layout","instanceId","blockProps","innerBlocksProps","template","select","getSettings","postsPerPage","DEFAULTS_POSTS_PER_PAGE","newQuery","exclude","length","perPage","Object","keys","updateQuery","inherit","updateLayout","newLayout","QueryEdit","props","clientId","hasInnerBlocks","getBlocks","Component","QueryPlaceholder"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { useInstanceId } from '@wordpress/compose';\nimport { useEffect } from '@wordpress/element';\nimport {\n\tBlockControls,\n\tuseBlockProps,\n\t__experimentalUseInnerBlocksProps as useInnerBlocksProps,\n} from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport QueryToolbar from './query-toolbar';\nimport QueryProvider from './query-provider';\nimport QueryInspectorControls from './query-inspector-controls';\nimport QueryPlaceholder from './query-placeholder';\nimport { DEFAULTS_POSTS_PER_PAGE } from '../constants';\n\nconst TEMPLATE = [ [ 'core/query-loop' ] ];\nexport function QueryContent( {\n\tattributes,\n\tcontext: { postId },\n\tsetAttributes,\n} ) {\n\tconst { queryId, query, layout } = attributes;\n\tconst instanceId = useInstanceId( QueryContent );\n\tconst blockProps = useBlockProps();\n\tconst innerBlocksProps = useInnerBlocksProps( {}, { template: TEMPLATE } );\n\tconst { postsPerPage } = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( 'core/block-editor' );\n\t\treturn {\n\t\t\tpostsPerPage:\n\t\t\t\t+getSettings().postsPerPage || DEFAULTS_POSTS_PER_PAGE,\n\t\t};\n\t}, [] );\n\t// Changes in query property (which is an object) need to be in the same callback,\n\t// because updates are batched after the render and changes in different query properties\n\t// would cause to overide previous wanted changes.\n\tuseEffect( () => {\n\t\tconst newQuery = {};\n\t\tif ( postId && ! query.exclude?.length ) {\n\t\t\tnewQuery.exclude = [ postId ];\n\t\t}\n\t\tif ( ! query.perPage && postsPerPage ) {\n\t\t\tnewQuery.perPage = postsPerPage;\n\t\t}\n\t\tif ( !! Object.keys( newQuery ).length ) {\n\t\t\tupdateQuery( newQuery );\n\t\t}\n\t}, [ query.perPage, query.exclude, query.inherit, postId ] );\n\t// We need this for multi-query block pagination.\n\t// Query parameters for each block are scoped to their ID.\n\tuseEffect( () => {\n\t\tif ( ! queryId ) {\n\t\t\tsetAttributes( { queryId: instanceId } );\n\t\t}\n\t}, [ queryId, instanceId ] );\n\tconst updateQuery = ( newQuery ) =>\n\t\tsetAttributes( { query: { ...query, ...newQuery } } );\n\tconst updateLayout = ( newLayout ) =>\n\t\tsetAttributes( { layout: { ...layout, ...newLayout } } );\n\treturn (\n\t\t<>\n\t\t\t<QueryInspectorControls\n\t\t\t\tattributes={ attributes }\n\t\t\t\tsetQuery={ updateQuery }\n\t\t\t\tsetLayout={ updateLayout }\n\t\t\t/>\n\t\t\t<BlockControls>\n\t\t\t\t<QueryToolbar\n\t\t\t\t\tattributes={ attributes }\n\t\t\t\t\tsetQuery={ updateQuery }\n\t\t\t\t\tsetLayout={ updateLayout }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t<div { ...blockProps }>\n\t\t\t\t<QueryProvider>\n\t\t\t\t\t<div { ...innerBlocksProps } />\n\t\t\t\t</QueryProvider>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nconst QueryEdit = ( props ) => {\n\tconst { clientId } = props;\n\tconst hasInnerBlocks = useSelect(\n\t\t( select ) =>\n\t\t\t!! select( 'core/block-editor' ).getBlocks( clientId ).length,\n\t\t[ clientId ]\n\t);\n\tconst Component = hasInnerBlocks ? QueryContent : QueryPlaceholder;\n\n\treturn <Component { ...props } />;\n};\n\nexport default QueryEdit;\nexport * from './query-provider';\n"]}