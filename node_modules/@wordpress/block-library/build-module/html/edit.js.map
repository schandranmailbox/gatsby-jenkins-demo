{"version":3,"sources":["@wordpress/block-library/src/html/edit.js"],"names":["__","useState","BlockControls","PlainText","transformStyles","useBlockProps","ToolbarButton","Disabled","SandBox","ToolbarGroup","useSelect","HTMLEdit","attributes","setAttributes","isSelected","isPreview","setIsPreview","styles","select","defaultStyles","getSettings","switchToPreview","switchToHTML","className","isDisabled","content"],"mappings":";;;;AAAA;AACA;AACA;AACA,SAASA,EAAT,QAAmB,iBAAnB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SACCC,aADD,EAECC,SAFD,EAGCC,eAHD,EAICC,aAJD,QAKO,yBALP;AAMA,SACCC,aADD,EAECC,QAFD,EAGCC,OAHD,EAICC,YAJD,QAKO,uBALP;AAMA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,eAAe,SAASC,QAAT,OAA+D;AAAA,MAA1CC,UAA0C,QAA1CA,UAA0C;AAAA,MAA9BC,aAA8B,QAA9BA,aAA8B;AAAA,MAAfC,UAAe,QAAfA,UAAe;;AAAA,kBACzCb,QAAQ,EADiC;AAAA;AAAA,MACrEc,SADqE;AAAA,MAC1DC,YAD0D;;AAG7E,MAAMC,MAAM,GAAGP,SAAS,CAAE,UAAEQ,MAAF,EAAc;AACvC;AACA;AACA,QAAMC,aAAa,yLAAnB;AASA,YACCA,aADD,4BAEIf,eAAe,CACjBc,MAAM,CAAE,mBAAF,CAAN,CAA8BE,WAA9B,GAA4CH,MAD3B,CAFnB;AAMA,GAlBuB,EAkBrB,EAlBqB,CAAxB;;AAoBA,WAASI,eAAT,GAA2B;AAC1BL,IAAAA,YAAY,CAAE,IAAF,CAAZ;AACA;;AAED,WAASM,YAAT,GAAwB;AACvBN,IAAAA,YAAY,CAAE,KAAF,CAAZ;AACA;;AAED,SACC,qBAAUX,aAAa,CAAE;AAAEkB,IAAAA,SAAS,EAAE;AAAb,GAAF,CAAvB,EACC,cAAC,aAAD,QACC,cAAC,YAAD,QACC,cAAC,aAAD;AACC,IAAA,SAAS,EAAC,uBADX;AAEC,IAAA,SAAS,EAAG,CAAER,SAFf;AAGC,IAAA,OAAO,EAAGO;AAHX,KAKC,mCALD,CADD,EAQC,cAAC,aAAD;AACC,IAAA,SAAS,EAAC,uBADX;AAEC,IAAA,SAAS,EAAGP,SAFb;AAGC,IAAA,OAAO,EAAGM;AAHX,KAKC,4BAAQrB,EAAE,CAAE,SAAF,CAAV,CALD,CARD,CADD,CADD,EAmBC,cAAC,QAAD,CAAU,QAAV,QACG,UAAEwB,UAAF;AAAA,WACDT,SAAS,IAAIS,UAAb,GACC,8BACC,cAAC,OAAD;AACC,MAAA,IAAI,EAAGZ,UAAU,CAACa,OADnB;AAEC,MAAA,MAAM,EAAGR;AAFV,MADD,EAUG,CAAEH,UAAF,IACD;AAAK,MAAA,SAAS,EAAC;AAAf,MAXF,CADD,GAgBC,cAAC,SAAD;AACC,MAAA,KAAK,EAAGF,UAAU,CAACa,OADpB;AAEC,MAAA,QAAQ,EAAG,kBAAEA,OAAF;AAAA,eACVZ,aAAa,CAAE;AAAEY,UAAAA,OAAO,EAAPA;AAAF,SAAF,CADH;AAAA,OAFZ;AAKC,MAAA,WAAW,EAAGzB,EAAE,CAAE,aAAF,CALjB;AAMC,oBAAaA,EAAE,CAAE,MAAF;AANhB,MAjBA;AAAA,GADH,CAnBD,CADD;AAmDA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useState } from '@wordpress/element';\nimport {\n\tBlockControls,\n\tPlainText,\n\ttransformStyles,\n\tuseBlockProps,\n} from '@wordpress/block-editor';\nimport {\n\tToolbarButton,\n\tDisabled,\n\tSandBox,\n\tToolbarGroup,\n} from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\n\nexport default function HTMLEdit( { attributes, setAttributes, isSelected } ) {\n\tconst [ isPreview, setIsPreview ] = useState();\n\n\tconst styles = useSelect( ( select ) => {\n\t\t// Default styles used to unset some of the styles\n\t\t// that might be inherited from the editor style.\n\t\tconst defaultStyles = `\n\t\t\thtml,body,:root {\n\t\t\t\tmargin: 0 !important;\n\t\t\t\tpadding: 0 !important;\n\t\t\t\toverflow: visible !important;\n\t\t\t\tmin-height: auto !important;\n\t\t\t}\n\t\t`;\n\n\t\treturn [\n\t\t\tdefaultStyles,\n\t\t\t...transformStyles(\n\t\t\t\tselect( 'core/block-editor' ).getSettings().styles\n\t\t\t),\n\t\t];\n\t}, [] );\n\n\tfunction switchToPreview() {\n\t\tsetIsPreview( true );\n\t}\n\n\tfunction switchToHTML() {\n\t\tsetIsPreview( false );\n\t}\n\n\treturn (\n\t\t<div { ...useBlockProps( { className: 'block-library-html__edit' } ) }>\n\t\t\t<BlockControls>\n\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\tclassName=\"components-tab-button\"\n\t\t\t\t\t\tisPressed={ ! isPreview }\n\t\t\t\t\t\tonClick={ switchToHTML }\n\t\t\t\t\t>\n\t\t\t\t\t\t<span>HTML</span>\n\t\t\t\t\t</ToolbarButton>\n\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\tclassName=\"components-tab-button\"\n\t\t\t\t\t\tisPressed={ isPreview }\n\t\t\t\t\t\tonClick={ switchToPreview }\n\t\t\t\t\t>\n\t\t\t\t\t\t<span>{ __( 'Preview' ) }</span>\n\t\t\t\t\t</ToolbarButton>\n\t\t\t\t</ToolbarGroup>\n\t\t\t</BlockControls>\n\t\t\t<Disabled.Consumer>\n\t\t\t\t{ ( isDisabled ) =>\n\t\t\t\t\tisPreview || isDisabled ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<SandBox\n\t\t\t\t\t\t\t\thtml={ attributes.content }\n\t\t\t\t\t\t\t\tstyles={ styles }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{ /*\t\n\t\t\t\t\t\t\t\t\tAn overlay is added when the block is not selected in order to register click events. \n\t\t\t\t\t\t\t\t\tSome browsers do not bubble up the clicks from the sandboxed iframe, which makes it \n\t\t\t\t\t\t\t\t\tdifficult to reselect the block. \n\t\t\t\t\t\t\t\t*/ }\n\t\t\t\t\t\t\t{ ! isSelected && (\n\t\t\t\t\t\t\t\t<div className=\"block-library-html__preview-overlay\"></div>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<PlainText\n\t\t\t\t\t\t\tvalue={ attributes.content }\n\t\t\t\t\t\t\tonChange={ ( content ) =>\n\t\t\t\t\t\t\t\tsetAttributes( { content } )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tplaceholder={ __( 'Write HTMLâ€¦' ) }\n\t\t\t\t\t\t\taria-label={ __( 'HTML' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</Disabled.Consumer>\n\t\t</div>\n\t);\n}\n"]}