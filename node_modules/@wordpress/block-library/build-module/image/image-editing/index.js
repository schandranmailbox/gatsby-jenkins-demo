import { createElement, Fragment } from "@wordpress/element";

/**
 * WordPress dependencies
 */
import { BlockControls } from '@wordpress/block-editor';
import { ToolbarGroup, ToolbarItem } from '@wordpress/components';
/**
 * Internal dependencies
 */

import Cropper from './cropper';
import ZoomDropdown from './zoom-dropdown';
import AspectRatioDropdown from './aspect-ratio-dropdown';
import RotationButton from './rotation-button';
import FormControls from './form-controls';
export default function ImageEditor(_ref) {
  var url = _ref.url,
      width = _ref.width,
      height = _ref.height,
      clientWidth = _ref.clientWidth,
      naturalHeight = _ref.naturalHeight,
      naturalWidth = _ref.naturalWidth;
  return createElement(Fragment, null, createElement(Cropper, {
    url: url,
    width: width,
    height: height,
    clientWidth: clientWidth,
    naturalHeight: naturalHeight,
    naturalWidth: naturalWidth
  }), createElement(BlockControls, null, createElement(ToolbarGroup, null, createElement(ZoomDropdown, null), createElement(ToolbarItem, null, function (toggleProps) {
    return createElement(AspectRatioDropdown, {
      toggleProps: toggleProps
    });
  })), createElement(ToolbarGroup, null, createElement(RotationButton, null)), createElement(ToolbarGroup, null, createElement(FormControls, null))));
}
export { default as ImageEditingProvider } from './context';
//# sourceMappingURL=index.js.map