import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import { createElement } from "@wordpress/element";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * WordPress dependencies
 */
import { createContext, useContext, useMemo } from '@wordpress/element';
/**
 * Internal dependencies
 */

import useSaveImage from './use-save-image';
import useTransformImage from './use-transform-image';
var ImageEditingContext = createContext({});
export var useImageEditingContext = function useImageEditingContext() {
  return useContext(ImageEditingContext);
};
export default function ImageEditingProvider(_ref) {
  var id = _ref.id,
      url = _ref.url,
      naturalWidth = _ref.naturalWidth,
      naturalHeight = _ref.naturalHeight,
      isEditing = _ref.isEditing,
      onFinishEditing = _ref.onFinishEditing,
      onSaveImage = _ref.onSaveImage,
      children = _ref.children;
  var transformImage = useTransformImage({
    url: url,
    naturalWidth: naturalWidth,
    naturalHeight: naturalHeight
  }, isEditing);
  var saveImage = useSaveImage(_objectSpread({
    id: id,
    url: url,
    onSaveImage: onSaveImage,
    onFinishEditing: onFinishEditing
  }, transformImage));
  var providerValue = useMemo(function () {
    return _objectSpread(_objectSpread({}, transformImage), saveImage);
  }, [transformImage, saveImage]);
  return createElement(ImageEditingContext.Provider, {
    value: providerValue
  }, children);
}
//# sourceMappingURL=context.js.map