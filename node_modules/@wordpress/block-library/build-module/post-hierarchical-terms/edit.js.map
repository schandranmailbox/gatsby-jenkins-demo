{"version":3,"sources":["@wordpress/block-library/src/post-hierarchical-terms/edit.js"],"names":["classnames","find","AlignmentToolbar","BlockControls","Warning","useBlockProps","__experimentalBlockVariationPicker","BlockVariationPicker","store","blocksStore","Spinner","useSelect","__","useHierarchicalTermLinks","PostHierarchicalTermsEdit","attributes","clientId","context","name","setAttributes","term","textAlign","postId","postType","select","getBlockVariations","getBlockType","getDefaultBlockVariation","blockType","defaultVariation","variations","selectedTerm","taxonomies","getTaxonomies","per_page","taxonomy","slug","hierarchical","visibility","show_ui","hierarchicalTermLinks","isLoadingHierarchicalTermLinks","hasPost","hasHierarchicalTermLinks","length","blockProps","className","icon","src","title","variation","nextAlign","reduce","prev","curr","labels","no_terms"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { find } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tAlignmentToolbar,\n\tBlockControls,\n\tWarning,\n\tuseBlockProps,\n\t__experimentalBlockVariationPicker as BlockVariationPicker,\n} from '@wordpress/block-editor';\nimport { store as blocksStore } from '@wordpress/blocks';\nimport { Spinner } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport useHierarchicalTermLinks from './use-hierarchical-term-links';\n\nexport default function PostHierarchicalTermsEdit( {\n\tattributes,\n\tclientId,\n\tcontext,\n\tname,\n\tsetAttributes,\n} ) {\n\tconst { term, textAlign } = attributes;\n\tconst { postId, postType } = context;\n\n\tconst { blockType, defaultVariation, variations } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockVariations,\n\t\t\t\tgetBlockType,\n\t\t\t\tgetDefaultBlockVariation,\n\t\t\t} = select( blocksStore );\n\n\t\t\treturn {\n\t\t\t\tblockType: getBlockType( name ),\n\t\t\t\tdefaultVariation: getDefaultBlockVariation( name, 'block' ),\n\t\t\t\tvariations: getBlockVariations( name, 'block' ),\n\t\t\t};\n\t\t},\n\t\t[ clientId, name ]\n\t);\n\n\tconst selectedTerm = useSelect(\n\t\t( select ) => {\n\t\t\tif ( ! term ) return {};\n\t\t\tconst taxonomies = select( 'core' ).getTaxonomies( {\n\t\t\t\tper_page: -1,\n\t\t\t} );\n\t\t\treturn (\n\t\t\t\tfind(\n\t\t\t\t\ttaxonomies,\n\t\t\t\t\t( taxonomy ) =>\n\t\t\t\t\t\ttaxonomy.slug === term &&\n\t\t\t\t\t\ttaxonomy.hierarchical &&\n\t\t\t\t\t\ttaxonomy.visibility.show_ui\n\t\t\t\t) || {}\n\t\t\t);\n\t\t},\n\t\t[ term ]\n\t);\n\n\tconst {\n\t\thierarchicalTermLinks,\n\t\tisLoadingHierarchicalTermLinks,\n\t} = useHierarchicalTermLinks( {\n\t\tpostId,\n\t\tpostType,\n\t\tterm: selectedTerm,\n\t} );\n\n\tconst hasPost = postId && postType;\n\tconst hasHierarchicalTermLinks =\n\t\thierarchicalTermLinks && hierarchicalTermLinks.length > 0;\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classnames( {\n\t\t\t[ `has-text-align-${ textAlign }` ]: textAlign,\n\t\t} ),\n\t} );\n\n\tif ( ! hasPost ) {\n\t\treturn (\n\t\t\t<div { ...blockProps }>\n\t\t\t\t<Warning>\n\t\t\t\t\t{ __( 'Post Hierarchical Terms block: post not found.' ) }\n\t\t\t\t</Warning>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif ( ! term ) {\n\t\treturn (\n\t\t\t<div { ...blockProps }>\n\t\t\t\t<BlockVariationPicker\n\t\t\t\t\ticon={ blockType?.icon?.src }\n\t\t\t\t\tlabel={ blockType?.title }\n\t\t\t\t\tonSelect={ ( variation = defaultVariation ) => {\n\t\t\t\t\t\tsetAttributes( variation.attributes );\n\t\t\t\t\t} }\n\t\t\t\t\tvariations={ variations }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls>\n\t\t\t\t<AlignmentToolbar\n\t\t\t\t\tvalue={ textAlign }\n\t\t\t\t\tonChange={ ( nextAlign ) => {\n\t\t\t\t\t\tsetAttributes( { textAlign: nextAlign } );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t<div { ...blockProps }>\n\t\t\t\t{ isLoadingHierarchicalTermLinks && <Spinner /> }\n\n\t\t\t\t{ hasHierarchicalTermLinks &&\n\t\t\t\t\t! isLoadingHierarchicalTermLinks &&\n\t\t\t\t\thierarchicalTermLinks.reduce( ( prev, curr ) => [\n\t\t\t\t\t\tprev,\n\t\t\t\t\t\t' | ',\n\t\t\t\t\t\tcurr,\n\t\t\t\t\t] ) }\n\n\t\t\t\t{ ! isLoadingHierarchicalTermLinks &&\n\t\t\t\t\t! hasHierarchicalTermLinks &&\n\t\t\t\t\t// eslint-disable-next-line camelcase\n\t\t\t\t\t( selectedTerm?.labels?.no_terms ||\n\t\t\t\t\t\t__( 'Term items not found.' ) ) }\n\t\t\t</div>\n\t\t</>\n\t);\n}\n"]}