{"version":3,"sources":["@wordpress/block-library/src/column/edit.native.js"],"names":["View","Dimensions","withSelect","compose","withPreferredColorScheme","useEffect","useState","useCallback","InnerBlocks","BlockControls","BlockVerticalAlignmentToolbar","InspectorControls","PanelBody","FooterMessageControl","UnitControl","getValueAndUnit","alignmentHelpers","__","styles","ColumnsPreview","getWidths","getWidthWithUnit","isPercentageUnit","CSS_UNITS","isWider","ColumnEdit","attributes","setAttributes","hasChildren","isSelected","getStylesFromColorScheme","isParentSelected","contentStyle","columns","selectedColumnIndex","parentAlignment","clientId","blockWidth","verticalAlignment","width","valueUnit","screenWidth","Math","floor","get","widthUnit","setWidthUnit","updateAlignment","alignment","onChangeWidth","nextWidth","widthWithUnit","onChangeUnit","nextUnit","widthWithoutUnit","parseFloat","onChange","renderAppender","columnWidth","isScreenWidthEqual","columnAppender","wideColumnAppender","columnPlaceholder","columnPlaceholderDark","columnPlaceholderNotSelected","undefined","innerBlocksBottomSpace","ColumnEditWrapper","props","getVerticalAlignmentRemap","flexBase","select","getBlockCount","getBlockRootClientId","getSelectedBlockClientId","getBlocks","getBlockOrder","getBlockAttributes","selectedBlockClientId","parentId","blockOrder","indexOf"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { View, Dimensions } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { withSelect } from '@wordpress/data';\nimport { compose, withPreferredColorScheme } from '@wordpress/compose';\nimport { useEffect, useState, useCallback } from '@wordpress/element';\nimport {\n\tInnerBlocks,\n\tBlockControls,\n\tBlockVerticalAlignmentToolbar,\n\tInspectorControls,\n} from '@wordpress/block-editor';\nimport {\n\tPanelBody,\n\tFooterMessageControl,\n\tUnitControl,\n\tgetValueAndUnit,\n\talignmentHelpers,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\n/**\n * Internal dependencies\n */\nimport styles from './editor.scss';\nimport ColumnsPreview from './column-preview';\nimport {\n\tgetWidths,\n\tgetWidthWithUnit,\n\tisPercentageUnit,\n\tCSS_UNITS,\n} from '../columns/utils';\n\nconst { isWider } = alignmentHelpers;\n\nfunction ColumnEdit( {\n\tattributes,\n\tsetAttributes,\n\thasChildren,\n\tisSelected,\n\tgetStylesFromColorScheme,\n\tisParentSelected,\n\tcontentStyle,\n\tcolumns,\n\tselectedColumnIndex,\n\tparentAlignment,\n\tclientId,\n\tblockWidth,\n} ) {\n\tconst { verticalAlignment, width } = attributes;\n\tconst { valueUnit = '%' } = getValueAndUnit( width ) || {};\n\n\tconst screenWidth = Math.floor( Dimensions.get( 'window' ).width );\n\n\tconst [ widthUnit, setWidthUnit ] = useState( valueUnit || '%' );\n\n\tconst updateAlignment = ( alignment ) => {\n\t\tsetAttributes( { verticalAlignment: alignment } );\n\t};\n\n\tuseEffect( () => {\n\t\tsetWidthUnit( valueUnit );\n\t}, [ valueUnit ] );\n\n\tuseEffect( () => {\n\t\tif ( ! verticalAlignment && parentAlignment ) {\n\t\t\tupdateAlignment( parentAlignment );\n\t\t}\n\t}, [] );\n\n\tconst onChangeWidth = ( nextWidth ) => {\n\t\tconst widthWithUnit = getWidthWithUnit( nextWidth, widthUnit );\n\n\t\tsetAttributes( {\n\t\t\twidth: widthWithUnit,\n\t\t} );\n\t};\n\n\tconst onChangeUnit = ( nextUnit ) => {\n\t\tsetWidthUnit( nextUnit );\n\t\tconst widthWithoutUnit = parseFloat(\n\t\t\twidth || getWidths( columns )[ selectedColumnIndex ]\n\t\t);\n\n\t\tsetAttributes( {\n\t\t\twidth: getWidthWithUnit( widthWithoutUnit, nextUnit ),\n\t\t} );\n\t};\n\n\tconst onChange = ( nextWidth ) => {\n\t\tif ( isPercentageUnit( widthUnit ) || ! widthUnit ) {\n\t\t\treturn;\n\t\t}\n\t\tonChangeWidth( nextWidth );\n\t};\n\n\tconst renderAppender = useCallback( () => {\n\t\tconst { width: columnWidth } = contentStyle[ clientId ];\n\t\tconst isScreenWidthEqual = columnWidth === screenWidth;\n\n\t\tif ( isSelected ) {\n\t\t\treturn (\n\t\t\t\t<View\n\t\t\t\t\tstyle={\n\t\t\t\t\t\t( isWider( screenWidth, 'mobile' ) ||\n\t\t\t\t\t\t\tisScreenWidthEqual ) &&\n\t\t\t\t\t\t( hasChildren\n\t\t\t\t\t\t\t? styles.columnAppender\n\t\t\t\t\t\t\t: styles.wideColumnAppender )\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<InnerBlocks.ButtonBlockAppender />\n\t\t\t\t</View>\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t}, [ contentStyle[ clientId ], screenWidth, isSelected, hasChildren ] );\n\n\tif ( ! isSelected && ! hasChildren ) {\n\t\treturn (\n\t\t\t<View\n\t\t\t\tstyle={ [\n\t\t\t\t\t! isParentSelected &&\n\t\t\t\t\t\tgetStylesFromColorScheme(\n\t\t\t\t\t\t\tstyles.columnPlaceholder,\n\t\t\t\t\t\t\tstyles.columnPlaceholderDark\n\t\t\t\t\t\t),\n\t\t\t\t\tstyles.columnPlaceholderNotSelected,\n\t\t\t\t\tcontentStyle[ clientId ],\n\t\t\t\t] }\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls>\n\t\t\t\t<BlockVerticalAlignmentToolbar\n\t\t\t\t\tonChange={ updateAlignment }\n\t\t\t\t\tvalue={ verticalAlignment }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Column settings' ) }>\n\t\t\t\t\t<UnitControl\n\t\t\t\t\t\tlabel={ __( 'Width' ) }\n\t\t\t\t\t\tmin={ 1 }\n\t\t\t\t\t\tmax={ isPercentageUnit( widthUnit ) ? 100 : undefined }\n\t\t\t\t\t\tonChange={ onChange }\n\t\t\t\t\t\tonComplete={ onChangeWidth }\n\t\t\t\t\t\tonUnitChange={ onChangeUnit }\n\t\t\t\t\t\tdecimalNum={ 1 }\n\t\t\t\t\t\tvalue={ getWidths( columns )[ selectedColumnIndex ] }\n\t\t\t\t\t\tunit={ widthUnit }\n\t\t\t\t\t\tunits={ CSS_UNITS }\n\t\t\t\t\t\tpreview={\n\t\t\t\t\t\t\t<ColumnsPreview\n\t\t\t\t\t\t\t\tcolumnWidths={ getWidths( columns, false ) }\n\t\t\t\t\t\t\t\tselectedColumnIndex={ selectedColumnIndex }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody>\n\t\t\t\t\t<FooterMessageControl\n\t\t\t\t\t\tlabel={ __(\n\t\t\t\t\t\t\t'Note: Column layout may vary between themes and screen sizes'\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<View\n\t\t\t\tstyle={ [\n\t\t\t\t\tisSelected && hasChildren && styles.innerBlocksBottomSpace,\n\t\t\t\t\tcontentStyle[ clientId ],\n\t\t\t\t] }\n\t\t\t>\n\t\t\t\t<InnerBlocks\n\t\t\t\t\trenderAppender={ renderAppender }\n\t\t\t\t\tparentWidth={ contentStyle[ clientId ].width }\n\t\t\t\t\tblockWidth={ blockWidth }\n\t\t\t\t/>\n\t\t\t</View>\n\t\t</>\n\t);\n}\n\nfunction ColumnEditWrapper( props ) {\n\tconst { verticalAlignment } = props.attributes;\n\n\tconst getVerticalAlignmentRemap = ( alignment ) => {\n\t\tif ( ! alignment ) return styles.flexBase;\n\t\treturn {\n\t\t\t...styles.flexBase,\n\t\t\t...styles[ `is-vertically-aligned-${ alignment }` ],\n\t\t};\n\t};\n\n\treturn (\n\t\t<View style={ getVerticalAlignmentRemap( verticalAlignment ) }>\n\t\t\t<ColumnEdit { ...props } />\n\t\t</View>\n\t);\n}\n\nexport default compose( [\n\twithSelect( ( select, { clientId } ) => {\n\t\tconst {\n\t\t\tgetBlockCount,\n\t\t\tgetBlockRootClientId,\n\t\t\tgetSelectedBlockClientId,\n\t\t\tgetBlocks,\n\t\t\tgetBlockOrder,\n\t\t\tgetBlockAttributes,\n\t\t} = select( 'core/block-editor' );\n\n\t\tconst selectedBlockClientId = getSelectedBlockClientId();\n\t\tconst isSelected = selectedBlockClientId === clientId;\n\n\t\tconst parentId = getBlockRootClientId( clientId );\n\t\tconst hasChildren = !! getBlockCount( clientId );\n\t\tconst isParentSelected =\n\t\t\tselectedBlockClientId && selectedBlockClientId === parentId;\n\n\t\tconst blockOrder = getBlockOrder( parentId );\n\n\t\tconst selectedColumnIndex = blockOrder.indexOf( clientId );\n\t\tconst columns = getBlocks( parentId );\n\n\t\tconst parentAlignment = getBlockAttributes( parentId )\n\t\t\t?.verticalAlignment;\n\n\t\treturn {\n\t\t\thasChildren,\n\t\t\tisParentSelected,\n\t\t\tisSelected,\n\t\t\tselectedColumnIndex,\n\t\t\tcolumns,\n\t\t\tparentAlignment,\n\t\t};\n\t} ),\n\twithPreferredColorScheme,\n] )( ColumnEditWrapper );\n"]}