{"version":3,"sources":["@wordpress/block-library/src/embed/wp-embed-preview.js"],"names":["useRef","useEffect","useMemo","WpEmbedPreview","html","ref","ownerDocument","current","defaultView","FocusEvent","resizeWPembeds","data","secret","message","value","some","attribute","querySelectorAll","forEach","iframe","height","checkFocus","activeElement","tagName","parentNode","focusEvent","bubbles","dispatchEvent","addEventListener","removeEventListener","__html","doc","window","DOMParser","parseFromString","querySelector","removeAttribute","blockQuote","style","display","body","innerHTML"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useRef, useEffect, useMemo } from '@wordpress/element';\n\n/** @typedef {import('@wordpress/element').WPSyntheticEvent} WPSyntheticEvent */\n\nexport default function WpEmbedPreview( { html } ) {\n\tconst ref = useRef();\n\n\tuseEffect( () => {\n\t\tconst { ownerDocument } = ref.current;\n\t\tconst { defaultView } = ownerDocument;\n\t\tconst { FocusEvent } = defaultView;\n\n\t\t/**\n\t\t * Checks for WordPress embed events signaling the height change when iframe\n\t\t * content loads or iframe's window is resized.  The event is sent from\n\t\t * WordPress core via the window.postMessage API.\n\t\t *\n\t\t * References:\n\t\t * window.postMessage: https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage\n\t\t * WordPress core embed-template on load: https://github.com/WordPress/WordPress/blob/HEAD/wp-includes/js/wp-embed-template.js#L143\n\t\t * WordPress core embed-template on resize: https://github.com/WordPress/WordPress/blob/HEAD/wp-includes/js/wp-embed-template.js#L187\n\t\t *\n\t\t * @param {WPSyntheticEvent} event Message event.\n\t\t */\n\t\tfunction resizeWPembeds( { data: { secret, message, value } = {} } ) {\n\t\t\tif (\n\t\t\t\t[ secret, message, value ].some(\n\t\t\t\t\t( attribute ) => ! attribute\n\t\t\t\t) ||\n\t\t\t\tmessage !== 'height'\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\townerDocument\n\t\t\t\t.querySelectorAll( `iframe[data-secret=\"${ secret }\"` )\n\t\t\t\t.forEach( ( iframe ) => {\n\t\t\t\t\tif ( +iframe.height !== value ) {\n\t\t\t\t\t\tiframe.height = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}\n\n\t\t/**\n\t\t * Checks whether the wp embed iframe is the activeElement,\n\t\t * if it is dispatch a focus event.\n\t\t */\n\t\tfunction checkFocus() {\n\t\t\tconst { activeElement } = ownerDocument;\n\n\t\t\tif (\n\t\t\t\tactiveElement.tagName !== 'IFRAME' ||\n\t\t\t\tactiveElement.parentNode !== ref.current\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst focusEvent = new FocusEvent( 'focus', { bubbles: true } );\n\t\t\tactiveElement.dispatchEvent( focusEvent );\n\t\t}\n\n\t\tdefaultView.addEventListener( 'message', resizeWPembeds );\n\t\tdefaultView.addEventListener( 'blur', checkFocus );\n\n\t\treturn () => {\n\t\t\tdefaultView.removeEventListener( 'message', resizeWPembeds );\n\t\t\tdefaultView.removeEventListener( 'blur', checkFocus );\n\t\t};\n\t}, [] );\n\n\tconst __html = useMemo( () => {\n\t\tconst doc = new window.DOMParser().parseFromString( html, 'text/html' );\n\t\tconst iframe = doc.querySelector( 'iframe' );\n\n\t\tif ( iframe ) {\n\t\t\tiframe.removeAttribute( 'style' );\n\t\t}\n\n\t\tconst blockQuote = doc.querySelector( 'blockquote' );\n\n\t\tif ( blockQuote ) {\n\t\t\tblockQuote.style.display = 'none';\n\t\t}\n\n\t\treturn doc.body.innerHTML;\n\t}, [ html ] );\n\n\treturn (\n\t\t<div\n\t\t\tref={ ref }\n\t\t\tclassName=\"wp-block-embed__wrapper\"\n\t\t\tdangerouslySetInnerHTML={ { __html } }\n\t\t/>\n\t);\n}\n"]}