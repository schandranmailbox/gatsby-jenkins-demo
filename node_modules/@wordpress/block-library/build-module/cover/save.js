import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import { createElement } from "@wordpress/element";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * External dependencies
 */
import classnames from 'classnames';
/**
 * WordPress dependencies
 */

import { InnerBlocks, getColorClassName, __experimentalGetGradientClass, useBlockProps } from '@wordpress/block-editor';
/**
 * Internal dependencies
 */

import { IMAGE_BACKGROUND_TYPE, VIDEO_BACKGROUND_TYPE, backgroundImageStyles, dimRatioToClass, isContentPositionCenter, getPositionClassName } from './shared';
export default function save(_ref) {
  var _classnames;

  var attributes = _ref.attributes;
  var backgroundType = attributes.backgroundType,
      gradient = attributes.gradient,
      contentPosition = attributes.contentPosition,
      customGradient = attributes.customGradient,
      customOverlayColor = attributes.customOverlayColor,
      dimRatio = attributes.dimRatio,
      focalPoint = attributes.focalPoint,
      hasParallax = attributes.hasParallax,
      isRepeated = attributes.isRepeated,
      overlayColor = attributes.overlayColor,
      url = attributes.url,
      id = attributes.id,
      minHeightProp = attributes.minHeight,
      minHeightUnit = attributes.minHeightUnit;
  var overlayColorClass = getColorClassName('background-color', overlayColor);

  var gradientClass = __experimentalGetGradientClass(gradient);

  var minHeight = minHeightUnit ? "".concat(minHeightProp).concat(minHeightUnit) : minHeightProp;
  var isImageBackground = IMAGE_BACKGROUND_TYPE === backgroundType;
  var isVideoBackground = VIDEO_BACKGROUND_TYPE === backgroundType;
  var isImgElement = !(hasParallax || isRepeated);

  var style = _objectSpread(_objectSpread({}, isImageBackground && !isImgElement ? backgroundImageStyles(url) : {}), {}, {
    backgroundColor: !overlayColorClass ? customOverlayColor : undefined,
    background: customGradient && !url ? customGradient : undefined,
    minHeight: minHeight || undefined
  });

  var objectPosition = // prettier-ignore
  focalPoint && isImgElement ? "".concat(Math.round(focalPoint.x * 100), "% ").concat(Math.round(focalPoint.y * 100), "%") : undefined;
  var classes = classnames(dimRatioToClass(dimRatio), overlayColorClass, (_classnames = {
    'has-background-dim': dimRatio !== 0,
    'has-parallax': hasParallax,
    'is-repeated': isRepeated,
    'has-background-gradient': gradient || customGradient
  }, _defineProperty(_classnames, gradientClass, !url && gradientClass), _defineProperty(_classnames, 'has-custom-content-position', !isContentPositionCenter(contentPosition)), _classnames), getPositionClassName(contentPosition));
  return createElement("div", useBlockProps.save({
    className: classes,
    style: style
  }), url && (gradient || customGradient) && dimRatio !== 0 && createElement("span", {
    "aria-hidden": "true",
    className: classnames('wp-block-cover__gradient-background', gradientClass),
    style: customGradient ? {
      background: customGradient
    } : undefined
  }), isImageBackground && isImgElement && url && createElement("img", {
    className: classnames('wp-block-cover__image-background', id ? "wp-image-".concat(id) : null),
    alt: "",
    src: url,
    style: {
      objectPosition: objectPosition
    },
    "data-object-fit": "cover",
    "data-object-position": objectPosition
  }), isVideoBackground && url && createElement("video", {
    className: classnames('wp-block-cover__video-background', 'intrinsic-ignore'),
    autoPlay: true,
    muted: true,
    loop: true,
    playsInline: true,
    src: url,
    style: {
      objectPosition: objectPosition
    },
    "data-object-fit": "cover",
    "data-object-position": objectPosition
  }), createElement("div", {
    className: "wp-block-cover__inner-container"
  }, createElement(InnerBlocks.Content, null)));
}
//# sourceMappingURL=save.js.map