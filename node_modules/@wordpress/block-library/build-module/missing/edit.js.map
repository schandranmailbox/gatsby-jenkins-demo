{"version":3,"sources":["@wordpress/block-library/src/missing/edit.js"],"names":["__","sprintf","RawHTML","Button","getBlockType","createBlock","withDispatch","Warning","useBlockProps","MissingBlockWarning","attributes","convertToHTML","originalName","originalUndelimitedContent","hasContent","hasHTMLBlock","actions","messageHTML","push","MissingEdit","dispatch","clientId","replaceBlock","content"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,EAAT,EAAaC,OAAb,QAA4B,iBAA5B;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,mBAA1C;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,yBAAvC;;AAEA,SAASC,mBAAT,OAA8D;AAAA,MAA9BC,UAA8B,QAA9BA,UAA8B;AAAA,MAAlBC,aAAkB,QAAlBA,aAAkB;AAAA,MACrDC,YADqD,GACRF,UADQ,CACrDE,YADqD;AAAA,MACvCC,0BADuC,GACRH,UADQ,CACvCG,0BADuC;AAE7D,MAAMC,UAAU,GAAG,CAAC,CAAED,0BAAtB;AACA,MAAME,YAAY,GAAGX,YAAY,CAAE,WAAF,CAAjC;AAEA,MAAMY,OAAO,GAAG,EAAhB;AACA,MAAIC,WAAJ;;AACA,MAAKH,UAAU,IAAIC,YAAnB,EAAkC;AACjCE,IAAAA,WAAW,GAAGhB,OAAO;AACpB;AACAD,IAAAA,EAAE,CACD,2JADC,CAFkB,EAKpBY,YALoB,CAArB;AAOAI,IAAAA,OAAO,CAACE,IAAR,CACC,cAAC,MAAD;AAAQ,MAAA,GAAG,EAAC,SAAZ;AAAsB,MAAA,OAAO,EAAGP,aAAhC;AAAgD,MAAA,SAAS;AAAzD,OACGX,EAAE,CAAE,cAAF,CADL,CADD;AAKA,GAbD,MAaO;AACNiB,IAAAA,WAAW,GAAGhB,OAAO;AACpB;AACAD,IAAAA,EAAE,CACD,8GADC,CAFkB,EAKpBY,YALoB,CAArB;AAOA;;AAED,SACC,qBAAUJ,aAAa,EAAvB,EACC,cAAC,OAAD;AAAS,IAAA,OAAO,EAAGQ;AAAnB,KAA+BC,WAA/B,CADD,EAEC,cAAC,OAAD,QAAWJ,0BAAX,CAFD,CADD;AAMA;;AAED,IAAMM,WAAW,GAAGb,YAAY,CAAE,UAAEc,QAAF,SAA0C;AAAA,MAA5BC,QAA4B,SAA5BA,QAA4B;AAAA,MAAlBX,UAAkB,SAAlBA,UAAkB;;AAAA,kBAClDU,QAAQ,CAAE,mBAAF,CAD0C;AAAA,MACnEE,YADmE,aACnEA,YADmE;;AAE3E,SAAO;AACNX,IAAAA,aADM,2BACU;AACfW,MAAAA,YAAY,CACXD,QADW,EAEXhB,WAAW,CAAE,WAAF,EAAe;AACzBkB,QAAAA,OAAO,EAAEb,UAAU,CAACG;AADK,OAAf,CAFA,CAAZ;AAMA;AARK,GAAP;AAUA,CAZ+B,CAAZ,CAYfJ,mBAZe,CAApB;AAcA,eAAeU,WAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { RawHTML } from '@wordpress/element';\nimport { Button } from '@wordpress/components';\nimport { getBlockType, createBlock } from '@wordpress/blocks';\nimport { withDispatch } from '@wordpress/data';\nimport { Warning, useBlockProps } from '@wordpress/block-editor';\n\nfunction MissingBlockWarning( { attributes, convertToHTML } ) {\n\tconst { originalName, originalUndelimitedContent } = attributes;\n\tconst hasContent = !! originalUndelimitedContent;\n\tconst hasHTMLBlock = getBlockType( 'core/html' );\n\n\tconst actions = [];\n\tlet messageHTML;\n\tif ( hasContent && hasHTMLBlock ) {\n\t\tmessageHTML = sprintf(\n\t\t\t/* translators: %s: block name */\n\t\t\t__(\n\t\t\t\t'Your site doesn’t include support for the \"%s\" block. You can leave this block intact, convert its content to a Custom HTML block, or remove it entirely.'\n\t\t\t),\n\t\t\toriginalName\n\t\t);\n\t\tactions.push(\n\t\t\t<Button key=\"convert\" onClick={ convertToHTML } isPrimary>\n\t\t\t\t{ __( 'Keep as HTML' ) }\n\t\t\t</Button>\n\t\t);\n\t} else {\n\t\tmessageHTML = sprintf(\n\t\t\t/* translators: %s: block name */\n\t\t\t__(\n\t\t\t\t'Your site doesn’t include support for the \"%s\" block. You can leave this block intact or remove it entirely.'\n\t\t\t),\n\t\t\toriginalName\n\t\t);\n\t}\n\n\treturn (\n\t\t<div { ...useBlockProps() }>\n\t\t\t<Warning actions={ actions }>{ messageHTML }</Warning>\n\t\t\t<RawHTML>{ originalUndelimitedContent }</RawHTML>\n\t\t</div>\n\t);\n}\n\nconst MissingEdit = withDispatch( ( dispatch, { clientId, attributes } ) => {\n\tconst { replaceBlock } = dispatch( 'core/block-editor' );\n\treturn {\n\t\tconvertToHTML() {\n\t\t\treplaceBlock(\n\t\t\t\tclientId,\n\t\t\t\tcreateBlock( 'core/html', {\n\t\t\t\t\tcontent: attributes.originalUndelimitedContent,\n\t\t\t\t} )\n\t\t\t);\n\t\t},\n\t};\n} )( MissingBlockWarning );\n\nexport default MissingEdit;\n"]}