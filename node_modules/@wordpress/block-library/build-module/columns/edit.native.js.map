{"version":3,"sources":["@wordpress/block-library/src/columns/edit.native.js"],"names":["View","Dimensions","dropRight","times","map","compact","delay","__","PanelBody","RangeControl","FooterMessageControl","UnitControl","getValueAndUnit","GlobalStylesContext","alignmentHelpers","InspectorControls","InnerBlocks","BlockControls","BlockVerticalAlignmentToolbar","BlockVariationPicker","withDispatch","useSelect","useEffect","useState","useContext","useMemo","useCallback","useResizeObserver","createBlock","columns","variations","styles","hasExplicitPercentColumnWidths","getMappedColumnWidths","getRedistributedColumnWidths","toWidthPrecision","getWidths","getWidthWithUnit","isPercentageUnit","CSS_UNITS","getColumnsInRow","calculateContainerWidth","getContentWidths","ColumnsPreview","ALLOWED_BLOCKS","DEFAULT_COLUMNS_NUM","MIN_COLUMNS_NUM","isWider","isFullWidth","ColumnsEditContainer","attributes","updateAlignment","updateColumns","columnCount","isSelected","onDeleteBlock","innerColumns","updateInnerColumnWidth","editorSidebarOpened","resizeListener","sizes","columnsInRow","setColumnsInRow","screenWidth","Math","floor","get","width","globalStyles","verticalAlignment","align","newColumnCount","renderAppender","isEqualWidth","columnAppender","onAddBlock","contentWidths","onChangeWidth","nextWidth","valueUnit","columnId","widthWithUnit","onChangeUnit","nextUnit","index","widthWithoutUnit","parseFloat","onChange","getColumnsSliders","column","clientId","length","undefined","value","innerBlocksSelected","ColumnsEditContainerWrapper","dispatch","ownProps","registry","setAttributes","updateBlockAttributes","select","getBlockOrder","innerBlockClientIds","forEach","innerBlockClientId","updateBlockSettings","settings","updateBlockListSettings","previousColumns","newColumns","replaceInnerBlocks","getBlocks","getBlockAttributes","innerBlocks","hasExplicitWidths","isAddingColumn","newColumnWidth","widths","onAddNextColumn","selectBlock","insertedBlock","removeBlock","ColumnsEdit","props","getBlockCount","getBlock","getBlockParents","isEditorSidebarOpened","block","isContentEmpty","innerBlock","parents","isDefaultColumns","hasParents","parentBlockAlignment","isVisible","setIsVisible"],"mappings":";;;;;AAAA;AACA;AACA;AACA,SAASA,IAAT,EAAeC,UAAf,QAAiC,cAAjC;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,GAA3B,EAAgCC,OAAhC,EAAyCC,KAAzC,QAAsD,QAAtD;AACA;AACA;AACA;;AACA,SAASC,EAAT,QAAmB,iBAAnB;AACA,SACCC,SADD,EAECC,YAFD,EAGCC,oBAHD,EAICC,WAJD,EAKCC,eALD,EAMCC,mBAND,EAOCC,gBAPD,QAQO,uBARP;AASA,SACCC,iBADD,EAECC,WAFD,EAGCC,aAHD,EAICC,6BAJD,EAKCC,oBALD,QAMO,yBANP;AAOA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,iBAAxC;AACA,SACCC,SADD,EAECC,QAFD,EAGCC,UAHD,EAICC,OAJD,EAKCC,WALD,QAMO,oBANP;AAOA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA;AACA;AACA;;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,SACCC,8BADD,EAECC,qBAFD,EAGCC,4BAHD,EAICC,gBAJD,EAKCC,SALD,EAMCC,gBAND,EAOCC,gBAPD,EAQCC,SARD,QASO,SATP;AAUA,SACCC,eADD,EAECC,uBAFD,EAGCC,gBAHD,QAIO,6BAJP;AAKA,OAAOC,cAAP,MAA2B,0BAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,cAAc,GAAG,CAAE,aAAF,CAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,mBAAmB,GAAG,CAA5B;AAEA;AACA;AACA;AACA;AACA;;AACA,IAAMC,eAAe,GAAG,CAAxB;IAEQC,O,GAAyBjC,gB,CAAzBiC,O;IAASC,W,GAAgBlC,gB,CAAhBkC,W;;AAEjB,SAASC,oBAAT,OAUI;AAAA,MATHC,UASG,QATHA,UASG;AAAA,MARHC,eAQG,QARHA,eAQG;AAAA,MAPHC,aAOG,QAPHA,aAOG;AAAA,MANHC,WAMG,QANHA,WAMG;AAAA,MALHC,UAKG,QALHA,UAKG;AAAA,MAJHC,aAIG,QAJHA,aAIG;AAAA,MAHHC,YAGG,QAHHA,YAGG;AAAA,MAFHC,sBAEG,QAFHA,sBAEG;AAAA,MADHC,mBACG,QADHA,mBACG;;AAAA,2BAC+B/B,iBAAiB,EADhD;AAAA;AAAA,MACKgC,cADL;AAAA,MACqBC,KADrB;;AAAA,kBAEuCrC,QAAQ,CAAEuB,eAAF,CAF/C;AAAA;AAAA,MAEKe,YAFL;AAAA,MAEmBC,eAFnB;;AAGH,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAYhE,UAAU,CAACiE,GAAX,CAAgB,QAAhB,EAA2BC,KAAvC,CAApB;AACA,MAAMC,YAAY,GAAG5C,UAAU,CAAEX,mBAAF,CAA/B;AAJG,MAMKwD,iBANL,GAMkCnB,UANlC,CAMKmB,iBANL;AAAA,MAMwBC,KANxB,GAMkCpB,UANlC,CAMwBoB,KANxB;;AAAA,cAOeV,KAAK,IAAI,EAPxB;AAAA,MAOKO,KAPL,SAOKA,KAPL;;AASH7C,EAAAA,SAAS,CAAE,YAAM;AAChB,QAAK+B,WAAW,KAAK,CAArB,EAAyB;AACxB,UAAMkB,cAAc,GAAGlB,WAAW,IAAIR,mBAAtC;AAEAO,MAAAA,aAAa,CAAEC,WAAF,EAAekB,cAAf,CAAb;AACA;AACD,GANQ,EAMN,EANM,CAAT;AAQAjD,EAAAA,SAAS,CAAE,YAAM;AAChB,QAAK6C,KAAL,EAAa;AACZ,UAAK3B,eAAe,CAAE2B,KAAF,EAASd,WAAT,CAAf,KAA0CQ,YAA/C,EAA8D;AAC7DC,QAAAA,eAAe,CAAEtB,eAAe,CAAE2B,KAAF,EAASd,WAAT,CAAjB,CAAf;AACA;AACD;AACD,GANQ,EAMN,CAAEc,KAAF,EAASd,WAAT,CANM,CAAT;;AAQA,MAAMmB,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC5B,QAAMC,YAAY,GAAGN,KAAK,KAAKJ,WAA/B;;AAEA,QAAKT,UAAL,EAAkB;AACjB,aACC,cAAC,IAAD;AACC,QAAA,KAAK,EACJ,CAAEP,OAAO,CAAEgB,WAAF,EAAe,QAAf,CAAP,IAAoCU,YAAtC,KACA1C,MAAM,CAAC2C;AAHT,SAMC,cAAC,WAAD,CAAa,mBAAb;AACC,QAAA,UAAU,EAAGC;AADd,QAND,CADD;AAYA;;AACD,WAAO,IAAP;AACA,GAlBD;;AAoBA,MAAMC,aAAa,GAAGnD,OAAO,CAC5B;AAAA,WACCiB,gBAAgB,CACfmB,YADe,EAEfM,KAFe,EAGfd,WAHe,EAIfG,YAJe,EAKfY,YALe,CADjB;AAAA,GAD4B,EAS5B,CAAED,KAAF,EAASN,YAAT,EAAuBR,WAAvB,EAAoCG,YAApC,EAAkDY,YAAlD,CAT4B,CAA7B;AAYA,MAAMO,UAAU,GAAGjD,WAAW,CAAE,YAAM;AACrC0B,IAAAA,aAAa,CAAEC,WAAF,EAAeA,WAAW,GAAG,CAA7B,CAAb;AACA,GAF6B,EAE3B,CAAEA,WAAF,CAF2B,CAA9B;;AAIA,MAAMwB,aAAa,GAAG,SAAhBA,aAAgB,CAAEC,SAAF,EAAaC,SAAb,EAAwBC,QAAxB,EAAsC;AAC3D,QAAMC,aAAa,GAAG5C,gBAAgB,CAAEyC,SAAF,EAAaC,SAAb,CAAtC;AAEAtB,IAAAA,sBAAsB,CAAEwB,aAAF,EAAiBD,QAAjB,CAAtB;AACA,GAJD;;AAMA,MAAME,YAAY,GAAG,SAAfA,YAAe,CAAEC,QAAF,EAAYC,KAAZ,EAAmBJ,QAAnB,EAAiC;AACrD,QAAMK,gBAAgB,GAAGC,UAAU,CAClClD,SAAS,CAAEoB,YAAF,CAAT,CAA2B4B,KAA3B,CADkC,CAAnC;AAGA,QAAMH,aAAa,GAAG5C,gBAAgB,CAAEgD,gBAAF,EAAoBF,QAApB,CAAtC;AAEA1B,IAAAA,sBAAsB,CAAEwB,aAAF,EAAiBD,QAAjB,CAAtB;AACA,GAPD;;AASA,MAAMO,SAAQ,GAAG,SAAXA,QAAW,CAAET,SAAF,EAAaC,SAAb,EAAwBC,QAAxB,EAAsC;AACtD,QAAK1C,gBAAgB,CAAEyC,SAAF,CAAhB,IAAiC,CAAEA,SAAxC,EAAoD;AACnD;AACA;;AACDF,IAAAA,aAAa,CAAEC,SAAF,EAAaC,SAAb,EAAwBC,QAAxB,CAAb;AACA,GALD;;AAOA,MAAMQ,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC/B,QAAK,CAAE9B,mBAAF,IAAyB,CAAEJ,UAAhC,EAA6C;AAC5C,aAAO,IAAP;AACA;;AAED,WAAOE,YAAY,CAACpD,GAAb,CAAkB,UAAEqF,MAAF,EAAUL,KAAV,EAAqB;AAAA,kBAE5CxE,eAAe,CAAE6E,MAAM,CAACvC,UAAP,CAAkBiB,KAApB,CAAf,IAA8C,EAFF;AAAA,kCACrCY,SADqC;AAAA,UACrCA,SADqC,gCACzB,GADyB;;AAG7C,aACC,cAAC,WAAD;AACC,QAAA,KAAK,mBAAcK,KAAK,GAAG,CAAtB,CADN;AAEC,QAAA,GAAG,YAAOK,MAAM,CAACC,QAAd,cACFtD,SAAS,CAAEoB,YAAF,CAAT,CAA0BmC,MADxB,CAFJ;AAKC,QAAA,GAAG,EAAG,CALP;AAMC,QAAA,GAAG,EACFrD,gBAAgB,CAAEyC,SAAF,CAAhB,IAAiC,CAAEA,SAAnC,GACG,GADH,GAEGa,SATL;AAWC,QAAA,UAAU,EAAG,CAXd;AAYC,QAAA,KAAK,EAAGxD,SAAS,CAAEoB,YAAF,CAAT,CAA2B4B,KAA3B,CAZT;AAaC,QAAA,QAAQ,EAAG,kBAAEN,SAAF,EAAiB;AAC3BS,UAAAA,SAAQ,CAAET,SAAF,EAAaC,SAAb,EAAwBU,MAAM,CAACC,QAA/B,CAAR;AACA,SAfF;AAgBC,QAAA,YAAY,EAAG,sBAAEP,QAAF;AAAA,iBACdD,YAAY,CAAEC,QAAF,EAAYC,KAAZ,EAAmBK,MAAM,CAACC,QAA1B,CADE;AAAA,SAhBhB;AAmBC,QAAA,UAAU,EAAG,oBAAEZ,SAAF,EAAiB;AAC7BD,UAAAA,aAAa,CAAEC,SAAF,EAAaC,SAAb,EAAwBU,MAAM,CAACC,QAA/B,CAAb;AACA,SArBF;AAsBC,QAAA,IAAI,EAAGX,SAtBR;AAuBC,QAAA,KAAK,EAAGxC,SAvBT;AAwBC,QAAA,OAAO,EACN,cAAC,cAAD;AACC,UAAA,YAAY,EAAGH,SAAS,CAAEoB,YAAF,EAAgB,KAAhB,CADzB;AAEC,UAAA,mBAAmB,EAAG4B;AAFvB;AAzBF,QADD;AAiCA,KApCM,CAAP;AAqCA,GA1CD;;AA4CA,SACC,8BACC,cAAC,iBAAD,QACC,cAAC,SAAD;AAAW,IAAA,KAAK,EAAG7E,EAAE,CAAE,kBAAF;AAArB,KACC,cAAC,YAAD;AACC,IAAA,KAAK,EAAGA,EAAE,CAAE,mBAAF,CADX;AAEC,IAAA,IAAI,EAAGsB,OAFR;AAGC,IAAA,KAAK,EAAGwB,WAHT;AAIC,IAAA,QAAQ,EAAG,kBAAEwC,KAAF;AAAA,aACVzC,aAAa,CAAEC,WAAF,EAAewC,KAAf,CADH;AAAA,KAJZ;AAOC,IAAA,GAAG,EAAG/C,eAPP;AAQC,IAAA,GAAG,EAAGO,WAAW,GAAG,CARrB;AASC,IAAA,IAAI,EAAC;AATN,IADD,EAYGmC,iBAAiB,EAZpB,CADD,EAeC,cAAC,SAAD,QACC,cAAC,oBAAD;AACC,IAAA,KAAK,EAAGjF,EAAE,CACT,8DADS;AADX,IADD,CAfD,CADD,EAwBC,cAAC,aAAD,QACC,cAAC,6BAAD;AACC,IAAA,QAAQ,EAAG4C,eADZ;AAEC,IAAA,KAAK,EAAGkB;AAFT,IADD,CAxBD,EA8BC,cAAC,IAAD;AAAM,IAAA,KAAK,EAAGf,UAAU,IAAIvB,MAAM,CAAC+D;AAAnC,KACGnC,cADH,EAEGQ,KAAK,IACN,cAAC,WAAD;AACC,IAAA,cAAc,EAAGK,cADlB;AAEC,IAAA,WAAW,EACVX,YAAY,GAAG,CAAf,GAAmB,YAAnB,GAAkC+B,SAHpC;AAKC,IAAA,UAAU,EAAG,IALd;AAMC,IAAA,aAAa,EAAGhD,cANjB;AAOC,IAAA,iBAAiB,EAAC,SAPnB;AAQC,IAAA,UAAU,EAAG+B,UARd;AASC,IAAA,aAAa,EACZtB,WAAW,KAAK,CAAhB,GAAoBE,aAApB,GAAoCqC,SAVtC;AAYC,IAAA,UAAU,EAAGzB,KAZd;AAaC,IAAA,YAAY,EAAGS,aAbhB;AAcC,IAAA,WAAW,EACV5B,WAAW,CAAEsB,KAAF,CAAX,IAAwBjB,WAAW,KAAK,CAAxC,GACGU,WADH,GAEGtB,uBAAuB,CAAE0B,KAAF,EAASN,YAAT;AAjB5B,IAHF,CA9BD,CADD;AA0DA;;AAED,IAAMkC,2BAA2B,GAAG3E,YAAY,CAC/C,UAAE4E,QAAF,EAAYC,QAAZ,EAAsBC,QAAtB;AAAA,SAAsC;AACrC;AACF;AACA;AACA;AACA;AACA;AACA;AACE/C,IAAAA,eARqC,2BAQpBkB,iBARoB,EAQA;AAAA,UAC5BqB,QAD4B,GACAO,QADA,CAC5BP,QAD4B;AAAA,UAClBS,aADkB,GACAF,QADA,CAClBE,aADkB;;AAAA,sBAEFH,QAAQ,CAAE,mBAAF,CAFN;AAAA,UAE5BI,qBAF4B,aAE5BA,qBAF4B;;AAAA,6BAGVF,QAAQ,CAACG,MAAT,CAAiB,mBAAjB,CAHU;AAAA,UAG5BC,aAH4B,oBAG5BA,aAH4B,EAKpC;;;AACAH,MAAAA,aAAa,CAAE;AAAE9B,QAAAA,iBAAiB,EAAjBA;AAAF,OAAF,CAAb,CANoC,CAQpC;;AACA,UAAMkC,mBAAmB,GAAGD,aAAa,CAAEZ,QAAF,CAAzC;AACAa,MAAAA,mBAAmB,CAACC,OAApB,CAA6B,UAAEC,kBAAF,EAA0B;AACtDL,QAAAA,qBAAqB,CAAEK,kBAAF,EAAsB;AAC1CpC,UAAAA,iBAAiB,EAAjBA;AAD0C,SAAtB,CAArB;AAGA,OAJD;AAKA,KAvBoC;AAwBrCZ,IAAAA,sBAxBqC,kCAwBboC,KAxBa,EAwBNb,QAxBM,EAwBK;AAAA,uBACPgB,QAAQ,CAAE,mBAAF,CADD;AAAA,UACjCI,qBADiC,cACjCA,qBADiC;;AAGzCA,MAAAA,qBAAqB,CAAEpB,QAAF,EAAY;AAChCb,QAAAA,KAAK,EAAE0B;AADyB,OAAZ,CAArB;AAGA,KA9BoC;AA+BrCa,IAAAA,mBA/BqC,+BA+BhBC,QA/BgB,EA+BL;AAAA,UACvBjB,QADuB,GACVO,QADU,CACvBP,QADuB;;AAAA,uBAEKM,QAAQ,CAAE,mBAAF,CAFb;AAAA,UAEvBY,uBAFuB,cAEvBA,uBAFuB;;AAG/BA,MAAAA,uBAAuB,CAAElB,QAAF,EAAYiB,QAAZ,CAAvB;AACA,KAnCoC;;AAoCrC;AACF;AACA;AACA;AACA;AACA;AACA;AACEvD,IAAAA,aA3CqC,yBA2CtByD,eA3CsB,EA2CLC,UA3CK,EA2CQ;AAAA,UACpCpB,QADoC,GACvBO,QADuB,CACpCP,QADoC;;AAAA,uBAEbM,QAAQ,CAAE,mBAAF,CAFK;AAAA,UAEpCe,kBAFoC,cAEpCA,kBAFoC;;AAAA,8BAGFb,QAAQ,CAACG,MAAT,CACzC,mBADyC,CAHE;AAAA,UAGpCW,SAHoC,qBAGpCA,SAHoC;AAAA,UAGzBC,kBAHyB,qBAGzBA,kBAHyB;;AAO5C,UAAIC,WAAW,GAAGF,SAAS,CAAEtB,QAAF,CAA3B;AACA,UAAMyB,iBAAiB,GAAGnF,8BAA8B,CACvDkF,WADuD,CAAxD,CAR4C,CAY5C;;AACA,UAAME,cAAc,GAAGN,UAAU,GAAGD,eAApC,CAb4C,CAe5C;;AAf4C,kBAgBdI,kBAAkB,CAAEvB,QAAF,CAAlB,IAAkC,EAhBpB;AAAA,UAgBpCrB,iBAhBoC,SAgBpCA,iBAhBoC;;AAkB5C,UAAK+C,cAAc,IAAID,iBAAvB,EAA2C;AAC1C;AACA;AACA,YAAME,cAAc,GAAGlF,gBAAgB,CAAE,MAAM2E,UAAR,CAAvC,CAH0C,CAK1C;AACA;;AACA,YAAMQ,MAAM,GAAGpF,4BAA4B,CAC1CgF,WAD0C,EAE1C,MAAMG,cAFoC,CAA3C;AAKAH,QAAAA,WAAW,gCACPjF,qBAAqB,CAAEiF,WAAF,EAAeI,MAAf,CADd,sBAEPnH,KAAK,CAAE2G,UAAU,GAAGD,eAAf,EAAgC,YAAM;AAC7C,iBAAOjF,WAAW,CAAE,aAAF,EAAiB;AAClCuC,YAAAA,KAAK,EAAEkD,cAD2B;AAElChD,YAAAA,iBAAiB,EAAjBA;AAFkC,WAAjB,CAAlB;AAIA,SALO,CAFE,EAAX;AASA,OArBD,MAqBO,IAAK+C,cAAL,EAAsB;AAC5BF,QAAAA,WAAW,gCACPA,WADO,sBAEP/G,KAAK,CAAE2G,UAAU,GAAGD,eAAf,EAAgC,YAAM;AAC7C,iBAAOjF,WAAW,CAAE,aAAF,EAAiB;AAClCyC,YAAAA,iBAAiB,EAAjBA;AADkC,WAAjB,CAAlB;AAGA,SAJO,CAFE,EAAX;AAQA,OATM,MASA;AACN;AACA6C,QAAAA,WAAW,GAAGhH,SAAS,CACtBgH,WADsB,EAEtBL,eAAe,GAAGC,UAFI,CAAvB;;AAKA,YAAKK,iBAAL,EAAyB;AACxB;AACA,cAAMG,OAAM,GAAGpF,4BAA4B,CAC1CgF,WAD0C,EAE1C,GAF0C,CAA3C;;AAKAA,UAAAA,WAAW,GAAGjF,qBAAqB,CAAEiF,WAAF,EAAeI,OAAf,CAAnC;AACA;AACD;;AAEDP,MAAAA,kBAAkB,CAAErB,QAAF,EAAYwB,WAAZ,CAAlB;AACA,KA9GoC;AA+GrCK,IAAAA,eAAe,EAAE,2BAAM;AAAA,UACd7B,QADc,GACDO,QADC,CACdP,QADc;;AAAA,uBAEsBM,QAAQ,CACnD,mBADmD,CAF9B;AAAA,UAEde,kBAFc,cAEdA,kBAFc;AAAA,UAEMS,WAFN,cAEMA,WAFN;;AAAA,8BAKoBtB,QAAQ,CAACG,MAAT,CACzC,mBADyC,CALpB;AAAA,UAKdW,SALc,qBAKdA,SALc;AAAA,UAKHC,kBALG,qBAKHA,kBALG,EAStB;;;AATsB,gCAUQA,kBAAkB,CAAEvB,QAAF,CAV1B;AAAA,UAUdrB,iBAVc,uBAUdA,iBAVc;;AAYtB,UAAM6C,WAAW,GAAGF,SAAS,CAAEtB,QAAF,CAA7B;AAEA,UAAM+B,aAAa,GAAG7F,WAAW,CAAE,aAAF,EAAiB;AACjDyC,QAAAA,iBAAiB,EAAjBA;AADiD,OAAjB,CAAjC;AAIA0C,MAAAA,kBAAkB,CACjBrB,QADiB,+BAEZwB,WAFY,IAECO,aAFD,IAGjB,IAHiB,CAAlB;AAKAD,MAAAA,WAAW,CAAEC,aAAa,CAAC/B,QAAhB,CAAX;AACA,KAvIoC;AAwIrCnC,IAAAA,aAAa,EAAE,yBAAM;AAAA,UACZmC,QADY,GACCO,QADD,CACZP,QADY;;AAAA,uBAEIM,QAAQ,CAAE,mBAAF,CAFZ;AAAA,UAEZ0B,WAFY,cAEZA,WAFY;;AAGpBA,MAAAA,WAAW,CAAEhC,QAAF,CAAX;AACA;AA5IoC,GAAtC;AAAA,CAD+C,CAAZ,CA+IjCzC,oBA/IiC,CAApC;;AAiJA,IAAM0E,WAAW,GAAG,SAAdA,WAAc,CAAEC,KAAF,EAAa;AAAA,MACxBlC,QADwB,GACCkC,KADD,CACxBlC,QADwB;AAAA,MACdpC,UADc,GACCsE,KADD,CACdtE,UADc;;AAAA,mBAS5BjC,SAAS,CACZ,UAAEgF,MAAF,EAAc;AAAA;;AAAA,kBAMTA,MAAM,CAAE,mBAAF,CANG;AAAA,QAEZwB,aAFY,WAEZA,aAFY;AAAA,QAGZC,QAHY,WAGZA,QAHY;AAAA,QAIZC,eAJY,WAIZA,eAJY;AAAA,QAKZd,kBALY,WAKZA,kBALY;;AAAA,mBAOqBZ,MAAM,CAAE,gBAAF,CAP3B;AAAA,QAOL2B,qBAPK,YAOLA,qBAPK;;AAQb,QAAMC,KAAK,GAAGH,QAAQ,CAAEpC,QAAF,CAAtB;AACA,QAAMwB,WAAW,GAAGe,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEf,WAA3B;AACA,QAAMgB,cAAc,GAAG9H,GAAG,CACzB8G,WADyB,EAEzB,UAAEiB,UAAF;AAAA,aAAkBA,UAAU,CAACjB,WAAX,CAAuBvB,MAAzC;AAAA,KAFyB,CAA1B;AAIA,QAAMyC,OAAO,GAAGL,eAAe,CAAErC,QAAF,EAAY,IAAZ,CAA/B;AAEA,WAAO;AACNrC,MAAAA,WAAW,EAAEwE,aAAa,CAAEnC,QAAF,CADpB;AAEN2C,MAAAA,gBAAgB,EAAE,CAAEhI,OAAO,CAAE6H,cAAF,CAAP,CAA0BvC,MAFxC;AAGNnC,MAAAA,YAAY,EAAE0D,WAHR;AAINoB,MAAAA,UAAU,EAAE,CAAC,CAAEF,OAAO,CAACzC,MAJjB;AAKN4C,MAAAA,oBAAoB,0BAAEtB,kBAAkB,CAAEmB,OAAO,CAAE,CAAF,CAAT,CAApB,yDAAE,qBAAoC9D,KALpD;AAMNZ,MAAAA,mBAAmB,EAAEsE,qBAAqB;AANpC,KAAP;AAQA,GAzBW,EA0BZ,CAAEtC,QAAF,CA1BY,CATmB;AAAA,MAG/BrC,WAH+B,cAG/BA,WAH+B;AAAA,MAI/BgF,gBAJ+B,cAI/BA,gBAJ+B;AAAA,yCAK/B7E,YAL+B;AAAA,MAK/BA,YAL+B,sCAKhB,EALgB;AAAA,MAM/B8E,UAN+B,cAM/BA,UAN+B;AAAA,MAO/BC,oBAP+B,cAO/BA,oBAP+B;AAAA,MAQ/B7E,mBAR+B,cAQ/BA,mBAR+B;;AAAA,mBAsCInC,QAAQ,CAAE,KAAF,CAtCZ;AAAA;AAAA,MAsCxBiH,SAtCwB;AAAA,MAsCbC,YAtCa;;AAwChCnH,EAAAA,SAAS,CAAE,YAAM;AAChB,QAAKgC,UAAU,IAAI+E,gBAAnB,EAAsC;AACrC/H,MAAAA,KAAK,CAAE;AAAA,eAAMmI,YAAY,CAAE,IAAF,CAAlB;AAAA,OAAF,EAA8B,GAA9B,CAAL;AACA;AACD,GAJQ,EAIN,EAJM,CAAT;AAMA,SACC,8BACC,cAAC,2BAAD;AACC,IAAA,WAAW,EAAGpF,WADf;AAEC,IAAA,YAAY,EAAGG,YAFhB;AAGC,IAAA,UAAU,EAAG8E,UAHd;AAIC,IAAA,oBAAoB,EAAGC,oBAJxB;AAKC,IAAA,mBAAmB,EAAG7E;AALvB,KAMMkE,KANN,EADD,EASC,cAAC,oBAAD;AACC,IAAA,UAAU,EAAG9F,UADd;AAEC,IAAA,OAAO,EAAG;AAAA,aAAM2G,YAAY,CAAE,KAAF,CAAlB;AAAA,KAFX;AAGC,IAAA,QAAQ,EAAG/C,QAHZ;AAIC,IAAA,SAAS,EAAG8C;AAJb,IATD,CADD;AAkBA,CAhED;;AAkEA,eAAeb,WAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { View, Dimensions } from 'react-native';\nimport { dropRight, times, map, compact, delay } from 'lodash';\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tPanelBody,\n\tRangeControl,\n\tFooterMessageControl,\n\tUnitControl,\n\tgetValueAndUnit,\n\tGlobalStylesContext,\n\talignmentHelpers,\n} from '@wordpress/components';\nimport {\n\tInspectorControls,\n\tInnerBlocks,\n\tBlockControls,\n\tBlockVerticalAlignmentToolbar,\n\tBlockVariationPicker,\n} from '@wordpress/block-editor';\nimport { withDispatch, useSelect } from '@wordpress/data';\nimport {\n\tuseEffect,\n\tuseState,\n\tuseContext,\n\tuseMemo,\n\tuseCallback,\n} from '@wordpress/element';\nimport { useResizeObserver } from '@wordpress/compose';\nimport { createBlock } from '@wordpress/blocks';\nimport { columns } from '@wordpress/icons';\n/**\n * Internal dependencies\n */\nimport variations from './variations';\nimport styles from './editor.scss';\nimport {\n\thasExplicitPercentColumnWidths,\n\tgetMappedColumnWidths,\n\tgetRedistributedColumnWidths,\n\ttoWidthPrecision,\n\tgetWidths,\n\tgetWidthWithUnit,\n\tisPercentageUnit,\n\tCSS_UNITS,\n} from './utils';\nimport {\n\tgetColumnsInRow,\n\tcalculateContainerWidth,\n\tgetContentWidths,\n} from './columnCalculations.native';\nimport ColumnsPreview from '../column/column-preview';\n\n/**\n * Allowed blocks constant is passed to InnerBlocks precisely as specified here.\n * The contents of the array should never change.\n * The array should contain the name of each block that is allowed.\n * In columns block, the only block we allow is 'core/column'.\n *\n * @constant\n * @type {string[]}\n */\nconst ALLOWED_BLOCKS = [ 'core/column' ];\n\n/**\n * Number of columns to assume for template in case the user opts to skip\n * template option selection.\n *\n * @type {number}\n */\nconst DEFAULT_COLUMNS_NUM = 2;\n\n/**\n * Minimum number of columns in a row\n *\n * @type {number}\n */\nconst MIN_COLUMNS_NUM = 1;\n\nconst { isWider, isFullWidth } = alignmentHelpers;\n\nfunction ColumnsEditContainer( {\n\tattributes,\n\tupdateAlignment,\n\tupdateColumns,\n\tcolumnCount,\n\tisSelected,\n\tonDeleteBlock,\n\tinnerColumns,\n\tupdateInnerColumnWidth,\n\teditorSidebarOpened,\n} ) {\n\tconst [ resizeListener, sizes ] = useResizeObserver();\n\tconst [ columnsInRow, setColumnsInRow ] = useState( MIN_COLUMNS_NUM );\n\tconst screenWidth = Math.floor( Dimensions.get( 'window' ).width );\n\tconst globalStyles = useContext( GlobalStylesContext );\n\n\tconst { verticalAlignment, align } = attributes;\n\tconst { width } = sizes || {};\n\n\tuseEffect( () => {\n\t\tif ( columnCount === 0 ) {\n\t\t\tconst newColumnCount = columnCount || DEFAULT_COLUMNS_NUM;\n\n\t\t\tupdateColumns( columnCount, newColumnCount );\n\t\t}\n\t}, [] );\n\n\tuseEffect( () => {\n\t\tif ( width ) {\n\t\t\tif ( getColumnsInRow( width, columnCount ) !== columnsInRow ) {\n\t\t\t\tsetColumnsInRow( getColumnsInRow( width, columnCount ) );\n\t\t\t}\n\t\t}\n\t}, [ width, columnCount ] );\n\n\tconst renderAppender = () => {\n\t\tconst isEqualWidth = width === screenWidth;\n\n\t\tif ( isSelected ) {\n\t\t\treturn (\n\t\t\t\t<View\n\t\t\t\t\tstyle={\n\t\t\t\t\t\t( isWider( screenWidth, 'mobile' ) || isEqualWidth ) &&\n\t\t\t\t\t\tstyles.columnAppender\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<InnerBlocks.ButtonBlockAppender\n\t\t\t\t\t\tonAddBlock={ onAddBlock }\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t};\n\n\tconst contentWidths = useMemo(\n\t\t() =>\n\t\t\tgetContentWidths(\n\t\t\t\tcolumnsInRow,\n\t\t\t\twidth,\n\t\t\t\tcolumnCount,\n\t\t\t\tinnerColumns,\n\t\t\t\tglobalStyles\n\t\t\t),\n\t\t[ width, columnsInRow, columnCount, innerColumns, globalStyles ]\n\t);\n\n\tconst onAddBlock = useCallback( () => {\n\t\tupdateColumns( columnCount, columnCount + 1 );\n\t}, [ columnCount ] );\n\n\tconst onChangeWidth = ( nextWidth, valueUnit, columnId ) => {\n\t\tconst widthWithUnit = getWidthWithUnit( nextWidth, valueUnit );\n\n\t\tupdateInnerColumnWidth( widthWithUnit, columnId );\n\t};\n\n\tconst onChangeUnit = ( nextUnit, index, columnId ) => {\n\t\tconst widthWithoutUnit = parseFloat(\n\t\t\tgetWidths( innerColumns )[ index ]\n\t\t);\n\t\tconst widthWithUnit = getWidthWithUnit( widthWithoutUnit, nextUnit );\n\n\t\tupdateInnerColumnWidth( widthWithUnit, columnId );\n\t};\n\n\tconst onChange = ( nextWidth, valueUnit, columnId ) => {\n\t\tif ( isPercentageUnit( valueUnit ) || ! valueUnit ) {\n\t\t\treturn;\n\t\t}\n\t\tonChangeWidth( nextWidth, valueUnit, columnId );\n\t};\n\n\tconst getColumnsSliders = () => {\n\t\tif ( ! editorSidebarOpened || ! isSelected ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn innerColumns.map( ( column, index ) => {\n\t\t\tconst { valueUnit = '%' } =\n\t\t\t\tgetValueAndUnit( column.attributes.width ) || {};\n\t\t\treturn (\n\t\t\t\t<UnitControl\n\t\t\t\t\tlabel={ `Column ${ index + 1 }` }\n\t\t\t\t\tkey={ `${ column.clientId }-${\n\t\t\t\t\t\tgetWidths( innerColumns ).length\n\t\t\t\t\t}` }\n\t\t\t\t\tmin={ 1 }\n\t\t\t\t\tmax={\n\t\t\t\t\t\tisPercentageUnit( valueUnit ) || ! valueUnit\n\t\t\t\t\t\t\t? 100\n\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t}\n\t\t\t\t\tdecimalNum={ 1 }\n\t\t\t\t\tvalue={ getWidths( innerColumns )[ index ] }\n\t\t\t\t\tonChange={ ( nextWidth ) => {\n\t\t\t\t\t\tonChange( nextWidth, valueUnit, column.clientId );\n\t\t\t\t\t} }\n\t\t\t\t\tonUnitChange={ ( nextUnit ) =>\n\t\t\t\t\t\tonChangeUnit( nextUnit, index, column.clientId )\n\t\t\t\t\t}\n\t\t\t\t\tonComplete={ ( nextWidth ) => {\n\t\t\t\t\t\tonChangeWidth( nextWidth, valueUnit, column.clientId );\n\t\t\t\t\t} }\n\t\t\t\t\tunit={ valueUnit }\n\t\t\t\t\tunits={ CSS_UNITS }\n\t\t\t\t\tpreview={\n\t\t\t\t\t\t<ColumnsPreview\n\t\t\t\t\t\t\tcolumnWidths={ getWidths( innerColumns, false ) }\n\t\t\t\t\t\t\tselectedColumnIndex={ index }\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t);\n\t\t} );\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Columns Settings' ) }>\n\t\t\t\t\t<RangeControl\n\t\t\t\t\t\tlabel={ __( 'Number of columns' ) }\n\t\t\t\t\t\ticon={ columns }\n\t\t\t\t\t\tvalue={ columnCount }\n\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\tupdateColumns( columnCount, value )\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmin={ MIN_COLUMNS_NUM }\n\t\t\t\t\t\tmax={ columnCount + 1 }\n\t\t\t\t\t\ttype=\"stepper\"\n\t\t\t\t\t/>\n\t\t\t\t\t{ getColumnsSliders() }\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody>\n\t\t\t\t\t<FooterMessageControl\n\t\t\t\t\t\tlabel={ __(\n\t\t\t\t\t\t\t'Note: Column layout may vary between themes and screen sizes'\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<BlockControls>\n\t\t\t\t<BlockVerticalAlignmentToolbar\n\t\t\t\t\tonChange={ updateAlignment }\n\t\t\t\t\tvalue={ verticalAlignment }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t<View style={ isSelected && styles.innerBlocksSelected }>\n\t\t\t\t{ resizeListener }\n\t\t\t\t{ width && (\n\t\t\t\t\t<InnerBlocks\n\t\t\t\t\t\trenderAppender={ renderAppender }\n\t\t\t\t\t\torientation={\n\t\t\t\t\t\t\tcolumnsInRow > 1 ? 'horizontal' : undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t\thorizontal={ true }\n\t\t\t\t\t\tallowedBlocks={ ALLOWED_BLOCKS }\n\t\t\t\t\t\tcontentResizeMode=\"stretch\"\n\t\t\t\t\t\tonAddBlock={ onAddBlock }\n\t\t\t\t\t\tonDeleteBlock={\n\t\t\t\t\t\t\tcolumnCount === 1 ? onDeleteBlock : undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t\tblockWidth={ width }\n\t\t\t\t\t\tcontentStyle={ contentWidths }\n\t\t\t\t\t\tparentWidth={\n\t\t\t\t\t\t\tisFullWidth( align ) && columnCount === 0\n\t\t\t\t\t\t\t\t? screenWidth\n\t\t\t\t\t\t\t\t: calculateContainerWidth( width, columnsInRow )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t</View>\n\t\t</>\n\t);\n}\n\nconst ColumnsEditContainerWrapper = withDispatch(\n\t( dispatch, ownProps, registry ) => ( {\n\t\t/**\n\t\t * Update all child Column blocks with a new vertical alignment setting\n\t\t * based on whatever alignment is passed in. This allows change to parent\n\t\t * to overide anything set on a individual column basis.\n\t\t *\n\t\t * @param {string} verticalAlignment the vertical alignment setting\n\t\t */\n\t\tupdateAlignment( verticalAlignment ) {\n\t\t\tconst { clientId, setAttributes } = ownProps;\n\t\t\tconst { updateBlockAttributes } = dispatch( 'core/block-editor' );\n\t\t\tconst { getBlockOrder } = registry.select( 'core/block-editor' );\n\n\t\t\t// Update own alignment.\n\t\t\tsetAttributes( { verticalAlignment } );\n\n\t\t\t// Update all child Column Blocks to match\n\t\t\tconst innerBlockClientIds = getBlockOrder( clientId );\n\t\t\tinnerBlockClientIds.forEach( ( innerBlockClientId ) => {\n\t\t\t\tupdateBlockAttributes( innerBlockClientId, {\n\t\t\t\t\tverticalAlignment,\n\t\t\t\t} );\n\t\t\t} );\n\t\t},\n\t\tupdateInnerColumnWidth( value, columnId ) {\n\t\t\tconst { updateBlockAttributes } = dispatch( 'core/block-editor' );\n\n\t\t\tupdateBlockAttributes( columnId, {\n\t\t\t\twidth: value,\n\t\t\t} );\n\t\t},\n\t\tupdateBlockSettings( settings ) {\n\t\t\tconst { clientId } = ownProps;\n\t\t\tconst { updateBlockListSettings } = dispatch( 'core/block-editor' );\n\t\t\tupdateBlockListSettings( clientId, settings );\n\t\t},\n\t\t/**\n\t\t * Updates the column columnCount, including necessary revisions to child Column\n\t\t * blocks to grant required or redistribute available space.\n\t\t *\n\t\t * @param {number} previousColumns Previous column columnCount.\n\t\t * @param {number} newColumns      New column columnCount.\n\t\t */\n\t\tupdateColumns( previousColumns, newColumns ) {\n\t\t\tconst { clientId } = ownProps;\n\t\t\tconst { replaceInnerBlocks } = dispatch( 'core/block-editor' );\n\t\t\tconst { getBlocks, getBlockAttributes } = registry.select(\n\t\t\t\t'core/block-editor'\n\t\t\t);\n\n\t\t\tlet innerBlocks = getBlocks( clientId );\n\t\t\tconst hasExplicitWidths = hasExplicitPercentColumnWidths(\n\t\t\t\tinnerBlocks\n\t\t\t);\n\n\t\t\t// Redistribute available width for existing inner blocks.\n\t\t\tconst isAddingColumn = newColumns > previousColumns;\n\n\t\t\t// Get verticalAlignment from Columns block to set the same to new Column\n\t\t\tconst { verticalAlignment } = getBlockAttributes( clientId ) || {};\n\n\t\t\tif ( isAddingColumn && hasExplicitWidths ) {\n\t\t\t\t// If adding a new column, assign width to the new column equal to\n\t\t\t\t// as if it were `1 / columns` of the total available space.\n\t\t\t\tconst newColumnWidth = toWidthPrecision( 100 / newColumns );\n\n\t\t\t\t// Redistribute in consideration of pending block insertion as\n\t\t\t\t// constraining the available working width.\n\t\t\t\tconst widths = getRedistributedColumnWidths(\n\t\t\t\t\tinnerBlocks,\n\t\t\t\t\t100 - newColumnWidth\n\t\t\t\t);\n\n\t\t\t\tinnerBlocks = [\n\t\t\t\t\t...getMappedColumnWidths( innerBlocks, widths ),\n\t\t\t\t\t...times( newColumns - previousColumns, () => {\n\t\t\t\t\t\treturn createBlock( 'core/column', {\n\t\t\t\t\t\t\twidth: newColumnWidth,\n\t\t\t\t\t\t\tverticalAlignment,\n\t\t\t\t\t\t} );\n\t\t\t\t\t} ),\n\t\t\t\t];\n\t\t\t} else if ( isAddingColumn ) {\n\t\t\t\tinnerBlocks = [\n\t\t\t\t\t...innerBlocks,\n\t\t\t\t\t...times( newColumns - previousColumns, () => {\n\t\t\t\t\t\treturn createBlock( 'core/column', {\n\t\t\t\t\t\t\tverticalAlignment,\n\t\t\t\t\t\t} );\n\t\t\t\t\t} ),\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\t// The removed column will be the last of the inner blocks.\n\t\t\t\tinnerBlocks = dropRight(\n\t\t\t\t\tinnerBlocks,\n\t\t\t\t\tpreviousColumns - newColumns\n\t\t\t\t);\n\n\t\t\t\tif ( hasExplicitWidths ) {\n\t\t\t\t\t// Redistribute as if block is already removed.\n\t\t\t\t\tconst widths = getRedistributedColumnWidths(\n\t\t\t\t\t\tinnerBlocks,\n\t\t\t\t\t\t100\n\t\t\t\t\t);\n\n\t\t\t\t\tinnerBlocks = getMappedColumnWidths( innerBlocks, widths );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treplaceInnerBlocks( clientId, innerBlocks );\n\t\t},\n\t\tonAddNextColumn: () => {\n\t\t\tconst { clientId } = ownProps;\n\t\t\tconst { replaceInnerBlocks, selectBlock } = dispatch(\n\t\t\t\t'core/block-editor'\n\t\t\t);\n\t\t\tconst { getBlocks, getBlockAttributes } = registry.select(\n\t\t\t\t'core/block-editor'\n\t\t\t);\n\n\t\t\t// Get verticalAlignment from Columns block to set the same to new Column\n\t\t\tconst { verticalAlignment } = getBlockAttributes( clientId );\n\n\t\t\tconst innerBlocks = getBlocks( clientId );\n\n\t\t\tconst insertedBlock = createBlock( 'core/column', {\n\t\t\t\tverticalAlignment,\n\t\t\t} );\n\n\t\t\treplaceInnerBlocks(\n\t\t\t\tclientId,\n\t\t\t\t[ ...innerBlocks, insertedBlock ],\n\t\t\t\ttrue\n\t\t\t);\n\t\t\tselectBlock( insertedBlock.clientId );\n\t\t},\n\t\tonDeleteBlock: () => {\n\t\t\tconst { clientId } = ownProps;\n\t\t\tconst { removeBlock } = dispatch( 'core/block-editor' );\n\t\t\tremoveBlock( clientId );\n\t\t},\n\t} )\n)( ColumnsEditContainer );\n\nconst ColumnsEdit = ( props ) => {\n\tconst { clientId, isSelected } = props;\n\tconst {\n\t\tcolumnCount,\n\t\tisDefaultColumns,\n\t\tinnerColumns = [],\n\t\thasParents,\n\t\tparentBlockAlignment,\n\t\teditorSidebarOpened,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockCount,\n\t\t\t\tgetBlock,\n\t\t\t\tgetBlockParents,\n\t\t\t\tgetBlockAttributes,\n\t\t\t} = select( 'core/block-editor' );\n\t\t\tconst { isEditorSidebarOpened } = select( 'core/edit-post' );\n\t\t\tconst block = getBlock( clientId );\n\t\t\tconst innerBlocks = block?.innerBlocks;\n\t\t\tconst isContentEmpty = map(\n\t\t\t\tinnerBlocks,\n\t\t\t\t( innerBlock ) => innerBlock.innerBlocks.length\n\t\t\t);\n\t\t\tconst parents = getBlockParents( clientId, true );\n\n\t\t\treturn {\n\t\t\t\tcolumnCount: getBlockCount( clientId ),\n\t\t\t\tisDefaultColumns: ! compact( isContentEmpty ).length,\n\t\t\t\tinnerColumns: innerBlocks,\n\t\t\t\thasParents: !! parents.length,\n\t\t\t\tparentBlockAlignment: getBlockAttributes( parents[ 0 ] )?.align,\n\t\t\t\teditorSidebarOpened: isEditorSidebarOpened(),\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\n\tconst [ isVisible, setIsVisible ] = useState( false );\n\n\tuseEffect( () => {\n\t\tif ( isSelected && isDefaultColumns ) {\n\t\t\tdelay( () => setIsVisible( true ), 100 );\n\t\t}\n\t}, [] );\n\n\treturn (\n\t\t<>\n\t\t\t<ColumnsEditContainerWrapper\n\t\t\t\tcolumnCount={ columnCount }\n\t\t\t\tinnerColumns={ innerColumns }\n\t\t\t\thasParents={ hasParents }\n\t\t\t\tparentBlockAlignment={ parentBlockAlignment }\n\t\t\t\teditorSidebarOpened={ editorSidebarOpened }\n\t\t\t\t{ ...props }\n\t\t\t/>\n\t\t\t<BlockVariationPicker\n\t\t\t\tvariations={ variations }\n\t\t\t\tonClose={ () => setIsVisible( false ) }\n\t\t\t\tclientId={ clientId }\n\t\t\t\tisVisible={ isVisible }\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default ColumnsEdit;\n"]}