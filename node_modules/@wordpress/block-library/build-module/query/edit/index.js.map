{"version":3,"sources":["@wordpress/block-library/src/query/edit/index.js"],"names":["useSelect","useInstanceId","useEffect","BlockControls","useBlockProps","__experimentalUseInnerBlocksProps","useInnerBlocksProps","QueryToolbar","QueryProvider","QueryInspectorControls","QueryPlaceholder","DEFAULTS_POSTS_PER_PAGE","TEMPLATE","QueryContent","attributes","postId","context","setAttributes","queryId","query","layout","instanceId","blockProps","innerBlocksProps","template","select","getSettings","postsPerPage","newQuery","exclude","length","perPage","Object","keys","updateQuery","inherit","updateLayout","newLayout","QueryEdit","props","clientId","hasInnerBlocks","getBlocks","Component"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SACCC,aADD,EAECC,aAFD,EAGCC,iCAAiC,IAAIC,mBAHtC,QAIO,yBAJP;AAMA;AACA;AACA;;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,sBAAP,MAAmC,4BAAnC;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,SAASC,uBAAT,QAAwC,cAAxC;AAEA,IAAMC,QAAQ,GAAG,CAAE,CAAE,iBAAF,CAAF,CAAjB;AACA,OAAO,SAASC,YAAT,OAIH;AAAA,MAHHC,UAGG,QAHHA,UAGG;AAAA,MAFQC,MAER,QAFHC,OAEG,CAFQD,MAER;AAAA,MADHE,aACG,QADHA,aACG;AAAA,MACKC,OADL,GACgCJ,UADhC,CACKI,OADL;AAAA,MACcC,KADd,GACgCL,UADhC,CACcK,KADd;AAAA,MACqBC,MADrB,GACgCN,UADhC,CACqBM,MADrB;AAEH,MAAMC,UAAU,GAAGpB,aAAa,CAAEY,YAAF,CAAhC;AACA,MAAMS,UAAU,GAAGlB,aAAa,EAAhC;AACA,MAAMmB,gBAAgB,GAAGjB,mBAAmB,CAAE,EAAF,EAAM;AAAEkB,IAAAA,QAAQ,EAAEZ;AAAZ,GAAN,CAA5C;;AAJG,mBAKsBZ,SAAS,CAAE,UAAEyB,MAAF,EAAc;AAAA,kBACzBA,MAAM,CAAE,mBAAF,CADmB;AAAA,QACzCC,WADyC,WACzCA,WADyC;;AAEjD,WAAO;AACNC,MAAAA,YAAY,EACX,CAACD,WAAW,GAAGC,YAAf,IAA+BhB;AAF1B,KAAP;AAIA,GANiC,EAM/B,EAN+B,CAL/B;AAAA,MAKKgB,YALL,cAKKA,YALL,EAYH;AACA;AACA;;;AACAzB,EAAAA,SAAS,CAAE,YAAM;AAAA;;AAChB,QAAM0B,QAAQ,GAAG,EAAjB;;AACA,QAAKb,MAAM,IAAI,oBAAEI,KAAK,CAACU,OAAR,2CAAE,eAAeC,MAAjB,CAAf,EAAyC;AACxCF,MAAAA,QAAQ,CAACC,OAAT,GAAmB,CAAEd,MAAF,CAAnB;AACA;;AACD,QAAK,CAAEI,KAAK,CAACY,OAAR,IAAmBJ,YAAxB,EAAuC;AACtCC,MAAAA,QAAQ,CAACG,OAAT,GAAmBJ,YAAnB;AACA;;AACD,QAAK,CAAC,CAAEK,MAAM,CAACC,IAAP,CAAaL,QAAb,EAAwBE,MAAhC,EAAyC;AACxCI,MAAAA,WAAW,CAAEN,QAAF,CAAX;AACA;AACD,GAXQ,EAWN,CAAET,KAAK,CAACY,OAAR,EAAiBZ,KAAK,CAACU,OAAvB,EAAgCV,KAAK,CAACgB,OAAtC,EAA+CpB,MAA/C,CAXM,CAAT,CAfG,CA2BH;AACA;;AACAb,EAAAA,SAAS,CAAE,YAAM;AAChB,QAAK,CAAEgB,OAAP,EAAiB;AAChBD,MAAAA,aAAa,CAAE;AAAEC,QAAAA,OAAO,EAAEG;AAAX,OAAF,CAAb;AACA;AACD,GAJQ,EAIN,CAAEH,OAAF,EAAWG,UAAX,CAJM,CAAT;;AAKA,MAAMa,WAAW,GAAG,SAAdA,WAAc,CAAEN,QAAF;AAAA,WACnBX,aAAa,CAAE;AAAEE,MAAAA,KAAK,kCAAOA,KAAP,GAAiBS,QAAjB;AAAP,KAAF,CADM;AAAA,GAApB;;AAEA,MAAMQ,YAAY,GAAG,SAAfA,YAAe,CAAEC,SAAF;AAAA,WACpBpB,aAAa,CAAE;AAAEG,MAAAA,MAAM,kCAAOA,MAAP,GAAkBiB,SAAlB;AAAR,KAAF,CADO;AAAA,GAArB;;AAEA,SACC,8BACC,cAAC,sBAAD;AACC,IAAA,UAAU,EAAGvB,UADd;AAEC,IAAA,QAAQ,EAAGoB,WAFZ;AAGC,IAAA,SAAS,EAAGE;AAHb,IADD,EAMC,cAAC,aAAD,QACC,cAAC,YAAD;AACC,IAAA,UAAU,EAAGtB,UADd;AAEC,IAAA,QAAQ,EAAGoB,WAFZ;AAGC,IAAA,SAAS,EAAGE;AAHb,IADD,CAND,EAaC,qBAAUd,UAAV,EACC,cAAC,aAAD,QACC,qBAAUC,gBAAV,CADD,CADD,CAbD,CADD;AAqBA;;AAED,IAAMe,SAAS,GAAG,SAAZA,SAAY,CAAEC,KAAF,EAAa;AAAA,MACtBC,QADsB,GACTD,KADS,CACtBC,QADsB;AAE9B,MAAMC,cAAc,GAAGzC,SAAS,CAC/B,UAAEyB,MAAF;AAAA,WACC,CAAC,CAAEA,MAAM,CAAE,mBAAF,CAAN,CAA8BiB,SAA9B,CAAyCF,QAAzC,EAAoDV,MADxD;AAAA,GAD+B,EAG/B,CAAEU,QAAF,CAH+B,CAAhC;AAKA,MAAMG,SAAS,GAAGF,cAAc,GAAG5B,YAAH,GAAkBH,gBAAlD;AAEA,SAAO,cAAC,SAAD,EAAgB6B,KAAhB,CAAP;AACA,CAVD;;AAYA,eAAeD,SAAf;AACA,cAAc,kBAAd","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { useInstanceId } from '@wordpress/compose';\nimport { useEffect } from '@wordpress/element';\nimport {\n\tBlockControls,\n\tuseBlockProps,\n\t__experimentalUseInnerBlocksProps as useInnerBlocksProps,\n} from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport QueryToolbar from './query-toolbar';\nimport QueryProvider from './query-provider';\nimport QueryInspectorControls from './query-inspector-controls';\nimport QueryPlaceholder from './query-placeholder';\nimport { DEFAULTS_POSTS_PER_PAGE } from '../constants';\n\nconst TEMPLATE = [ [ 'core/query-loop' ] ];\nexport function QueryContent( {\n\tattributes,\n\tcontext: { postId },\n\tsetAttributes,\n} ) {\n\tconst { queryId, query, layout } = attributes;\n\tconst instanceId = useInstanceId( QueryContent );\n\tconst blockProps = useBlockProps();\n\tconst innerBlocksProps = useInnerBlocksProps( {}, { template: TEMPLATE } );\n\tconst { postsPerPage } = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( 'core/block-editor' );\n\t\treturn {\n\t\t\tpostsPerPage:\n\t\t\t\t+getSettings().postsPerPage || DEFAULTS_POSTS_PER_PAGE,\n\t\t};\n\t}, [] );\n\t// Changes in query property (which is an object) need to be in the same callback,\n\t// because updates are batched after the render and changes in different query properties\n\t// would cause to overide previous wanted changes.\n\tuseEffect( () => {\n\t\tconst newQuery = {};\n\t\tif ( postId && ! query.exclude?.length ) {\n\t\t\tnewQuery.exclude = [ postId ];\n\t\t}\n\t\tif ( ! query.perPage && postsPerPage ) {\n\t\t\tnewQuery.perPage = postsPerPage;\n\t\t}\n\t\tif ( !! Object.keys( newQuery ).length ) {\n\t\t\tupdateQuery( newQuery );\n\t\t}\n\t}, [ query.perPage, query.exclude, query.inherit, postId ] );\n\t// We need this for multi-query block pagination.\n\t// Query parameters for each block are scoped to their ID.\n\tuseEffect( () => {\n\t\tif ( ! queryId ) {\n\t\t\tsetAttributes( { queryId: instanceId } );\n\t\t}\n\t}, [ queryId, instanceId ] );\n\tconst updateQuery = ( newQuery ) =>\n\t\tsetAttributes( { query: { ...query, ...newQuery } } );\n\tconst updateLayout = ( newLayout ) =>\n\t\tsetAttributes( { layout: { ...layout, ...newLayout } } );\n\treturn (\n\t\t<>\n\t\t\t<QueryInspectorControls\n\t\t\t\tattributes={ attributes }\n\t\t\t\tsetQuery={ updateQuery }\n\t\t\t\tsetLayout={ updateLayout }\n\t\t\t/>\n\t\t\t<BlockControls>\n\t\t\t\t<QueryToolbar\n\t\t\t\t\tattributes={ attributes }\n\t\t\t\t\tsetQuery={ updateQuery }\n\t\t\t\t\tsetLayout={ updateLayout }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t<div { ...blockProps }>\n\t\t\t\t<QueryProvider>\n\t\t\t\t\t<div { ...innerBlocksProps } />\n\t\t\t\t</QueryProvider>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nconst QueryEdit = ( props ) => {\n\tconst { clientId } = props;\n\tconst hasInnerBlocks = useSelect(\n\t\t( select ) =>\n\t\t\t!! select( 'core/block-editor' ).getBlocks( clientId ).length,\n\t\t[ clientId ]\n\t);\n\tconst Component = hasInnerBlocks ? QueryContent : QueryPlaceholder;\n\n\treturn <Component { ...props } />;\n};\n\nexport default QueryEdit;\nexport * from './query-provider';\n"]}