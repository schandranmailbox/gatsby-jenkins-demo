{"version":3,"file":"reactusegesture.esm.js","sources":["../src/utils/math.ts","../src/utils/rubberband.ts","../src/utils/utils.ts","../src/utils/resolveOptionsWith.ts","../src/utils/event.ts","../src/utils/config.ts","../src/hooks/buildConfig.ts","../src/utils/state.ts","../src/recognizers/Recognizer.ts","../src/Controller.ts","../src/hooks/useRecognizers.ts","../src/recognizers/CoordinatesRecognizer.ts","../src/recognizers/DragRecognizer.ts","../src/utils/memoize-one.ts","../src/utils/react-fast-compare.ts","../src/hooks/useDrag.ts","../src/recognizers/DistanceAngleRecognizer.ts","../src/recognizers/PinchRecognizer.ts","../src/hooks/usePinch.ts","../src/recognizers/WheelRecognizer.ts","../src/hooks/useWheel.ts","../src/recognizers/MoveRecognizer.ts","../src/hooks/useMove.ts","../src/hooks/useHover.ts","../src/recognizers/ScrollRecognizer.ts","../src/hooks/useScroll.ts","../src/hooks/useGesture.ts"],"sourcesContent":["// vector add\nexport function addV<T extends number[]>(v1: T, v2: T): T {\n  return v1.map((v, i) => v + v2[i]) as T\n}\n\n// vector substract\nexport function subV<T extends number[]>(v1: T, v2: T): T {\n  return v1.map((v, i) => v - v2[i]) as T\n}\n\n/**\n * Calculates distance\n * @param movement the difference between current and initial vectors\n * @returns distance\n */\nexport function calculateDistance(movement: number[]): number {\n  return Math.hypot(...movement)\n}\n\ninterface Kinematics {\n  velocities: number[]\n  velocity: number\n  distance: number\n  direction: number[]\n}\n\nexport function calculateAllGeometry<T extends number[]>(movement: T, delta: T = movement) {\n  const dl = calculateDistance(delta)\n\n  const alpha = dl === 0 ? 0 : 1 / dl\n\n  const direction = delta.map(v => alpha * v) as T\n  const distance = calculateDistance(movement)\n\n  return { distance, direction }\n}\n\n/**\n * Calculates all kinematics\n * @template T the expected vector type\n * @param movement the difference between current and initial vectors\n * @param delta the difference between current and previous vectors\n * @param delta_t the time difference between current and previous timestamps\n * @returns all kinematics\n */\nexport function calculateAllKinematics<T extends number[]>(movement: T, delta: T, dt: number): Kinematics {\n  const dl = calculateDistance(delta)\n\n  const alpha = dl === 0 ? 0 : 1 / dl\n  const beta = dt === 0 ? 0 : 1 / dt\n\n  const velocity = beta * dl\n  const velocities = delta.map(v => beta * v)\n  const direction = delta.map(v => alpha * v)\n  const distance = calculateDistance(movement)\n\n  return { velocities, velocity, distance, direction }\n}\n\n/**\n * Because IE doesn't support `Math.sign` function, so we use the polyfill version of the function.\n * This polyfill function is suggested by Mozilla:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign#Polyfill\n * @param x target number\n */\nexport function sign(x: number) {\n  if (Math.sign) return Math.sign(x)\n  return Number(x > 0) - Number(x < 0) || +x\n}\n","function minMax(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(value, max))\n}\n\n// Based on @aholachek ;)\n// https://twitter.com/chpwn/status/285540192096497664\n// iOS constant = 0.55\n\n// https://medium.com/@nathangitter/building-fluid-interfaces-ios-swift-9732bb934bf5\nfunction rubberband2(distance: number, constant: number) {\n  // default constant from the article is 0.7\n  return Math.pow(distance, constant * 5)\n}\n\nfunction rubberband(distance: number, dimension: number, constant: number) {\n  if (dimension === 0 || Math.abs(dimension) === Infinity) return rubberband2(distance, constant)\n  return (distance * dimension * constant) / (dimension + constant * distance)\n}\n\nexport function rubberbandIfOutOfBounds(position: number, min: number, max: number, constant = 0.15) {\n  if (constant === 0) return minMax(position, min, max)\n  if (position < min) return -rubberband(min - position, max - min, constant) + min\n  if (position > max) return +rubberband(position - max, max - min, constant) + max\n  return position\n}\n","export function noop() {}\n\n/**\n * TODO Beware that only optimized cases are covered in tests =)\n * TODO Need to cover general case as well\n *\n * @param fns\n */\nexport function chainFns(...fns: Function[]): Function {\n  if (fns.length === 0) return noop\n  if (fns.length === 1) return fns[0]\n\n  return function (this: any) {\n    var result\n    for (let fn of fns) {\n      result = fn.apply(this, arguments) || result\n    }\n    return result\n  }\n}\n\n/**\n * Expects a simple value or 2D vector (an array with 2 elements) and\n * always returns 2D vector. If simple value is passed, returns a\n * vector with this value as both coordinates.\n *\n * @param value\n */\nexport function ensureVector<T>(value: T | [T, T] | undefined, fallback?: T | [T, T]): [T, T] {\n  if (value === undefined) {\n    if (fallback === undefined) {\n      throw new Error('Must define fallback value if undefined is expected')\n    }\n    value = fallback\n  }\n\n  if (Array.isArray(value)) return value\n  return [value, value]\n}\n\n/**\n * Helper for defining a default value\n *\n * @param value\n * @param fallback\n */\nexport function assignDefault<T extends Object>(value: Partial<T> | undefined, fallback: T): T {\n  return Object.assign({}, fallback, value || {})\n}\n\n/**\n * Resolves getters (functions) by calling them\n * If simple value is given it just passes through\n *\n * @param v\n */\nexport function valueFn<T>(v: T | ((...args: any[]) => T), ...args: any[]): T {\n  if (typeof v === 'function') {\n    // @ts-ignore\n    return v(...args)\n  } else {\n    return v\n  }\n}\n","export type Resolver = (x: any, key: string, obj: object) => any\nexport type ResolverMap = { [k: string]: Resolver | ResolverMap | boolean }\n\nexport function resolveWith<T extends { [k: string]: any }, V extends { [k: string]: any }>(\n  config: Partial<T> = {},\n  resolvers: ResolverMap\n): V {\n  const result: any = {}\n\n  for (const [key, resolver] of Object.entries(resolvers))\n    switch (typeof resolver) {\n      case 'function':\n        result[key] = resolver.call(result, config[key], key, config)\n        break\n      case 'object':\n        result[key] = resolveWith(config[key], resolver)\n        break\n      case 'boolean':\n        if (resolver) result[key] = config[key]\n        break\n    }\n\n  return result\n}\n","import { Vector2, WebKitGestureEvent, DomEvents } from '../types'\n\nconst WEBKIT_DISTANCE_SCALE_FACTOR = 260\n\n/**\n * Whether the browser supports GestureEvent (ie Safari)\n * @returns true if the browser supports gesture event\n */\nexport function supportsGestureEvents(): boolean {\n  try {\n    // TODO [TS] possibly find GestureEvent definitions?\n    // @ts-ignore: no type definitions for webkit GestureEvents\n    return 'constructor' in GestureEvent\n  } catch (e) {\n    return false\n  }\n}\n\nexport function supportsTouchEvents(): boolean {\n  return typeof window !== 'undefined' && 'ontouchstart' in window\n}\n\nfunction getEventTouches(event: PointerEvent | React.PointerEvent | TouchEvent | React.TouchEvent) {\n  if ('pointerId' in event) return null\n  return event.type === 'touchend' ? event.changedTouches : event.targetTouches\n}\n\nexport function getPointerIds(event: PointerEvent | React.PointerEvent | TouchEvent | React.TouchEvent): number[] {\n  if ('pointerId' in event) return [event.pointerId]\n  return Array.from(getEventTouches(event)!).map(t => t.identifier)\n}\n\nexport function getGenericEventData(event: DomEvents) {\n  const buttons = 'buttons' in event ? event.buttons : 0\n  const { shiftKey, altKey, metaKey, ctrlKey } = event as any // TODO check if this might create some overrides?\n  return { buttons, shiftKey, altKey, metaKey, ctrlKey }\n}\n\nconst identity = (xy: Vector2) => xy\n\n/**\n * Gets pointer event values.\n * @param event\n * @returns pointer event values\n */\nexport function getPointerEventValues(\n  event: TouchEvent | React.TouchEvent | React.PointerEvent | PointerEvent,\n  transform = identity\n): Vector2 {\n  const touchEvents = getEventTouches(event)\n  const { clientX, clientY } = touchEvents ? touchEvents[0] : (event as React.PointerEvent)\n  return transform([clientX, clientY])\n}\n\n/**\n * Gets two touches event data\n * @param event\n * @returns two touches event data\n */\nexport function getTwoTouchesEventValues(\n  event: React.TouchEvent | TouchEvent,\n  pointerIds: [number, number],\n  transform = identity\n) {\n  const [A, B] = Array.from(event.touches).filter(t => pointerIds.includes(t.identifier))\n\n  const dx = B.clientX - A.clientX\n  const dy = B.clientY - A.clientY\n  const cx = (B.clientX + A.clientX) / 2\n  const cy = (B.clientY + A.clientY) / 2\n\n  // const e: any = 'nativeEvent' in event ? event.nativeEvent : event\n\n  const distance = Math.hypot(dx, dy)\n  // FIXME rotation has inconsistant values so we're not using it atm\n  // const angle = (e.rotation as number) ?? -(Math.atan2(dx, dy) * 180) / Math.PI\n  const angle = -(Math.atan2(dx, dy) * 180) / Math.PI\n  const values: Vector2 = transform([distance, angle])\n  const origin: Vector2 = transform([cx, cy])\n\n  return { values, origin }\n}\n\n/**\n * Gets scroll event values\n * @param event\n * @returns scroll event values\n */\nexport function getScrollEventValues(event: React.UIEvent | UIEvent, transform = identity): Vector2 {\n  // If the currentTarget is the window then we return the scrollX/Y position.\n  // If not (ie the currentTarget is a DOM element), then we return scrollLeft/Top\n  const { scrollX, scrollY, scrollLeft, scrollTop } = event.currentTarget as Element & Window\n  return transform([scrollX || scrollLeft || 0, scrollY || scrollTop || 0])\n}\n\n// wheel delta defaults from https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\nconst LINE_HEIGHT = 40\nconst PAGE_HEIGHT = 800\n\n/**\n * Gets wheel event values.\n * @param event\n * @returns wheel event values\n */\nexport function getWheelEventValues(event: React.WheelEvent | WheelEvent, transform = identity): Vector2 {\n  let { deltaX, deltaY, deltaMode } = event\n  // normalize wheel values, especially for Firefox\n  if (deltaMode === 1) {\n    deltaX *= LINE_HEIGHT\n    deltaY *= LINE_HEIGHT\n  } else if (deltaMode === 2) {\n    deltaX *= PAGE_HEIGHT\n    deltaY *= PAGE_HEIGHT\n  }\n  return transform([deltaX, deltaY])\n}\n\n/**\n * Gets webkit gesture event values.\n * @param event\n * @returns webkit gesture event values\n */\nexport function getWebkitGestureEventValues(event: WebKitGestureEvent, transform = identity): Vector2 {\n  return transform([event.scale * WEBKIT_DISTANCE_SCALE_FACTOR, event.rotation])\n}\n","import { ensureVector, assignDefault, valueFn } from './utils'\nimport { resolveWith } from './resolveOptionsWith'\n\nimport {\n  GenericOptions,\n  InternalGenericOptions,\n  DragConfig,\n  GestureOptions,\n  InternalDragOptions,\n  InternalGestureOptions,\n  CoordinatesConfig,\n  InternalCoordinatesOptions,\n  DistanceAngleConfig,\n  InternalDistanceAngleOptions,\n  Vector2,\n  Bounds,\n  StateKey,\n  State,\n  CoordinatesKey,\n  DistanceAngleKey,\n} from '../types'\nimport { supportsTouchEvents } from './event'\n\nexport const DEFAULT_DRAG_DELAY = 180\nexport const DEFAULT_RUBBERBAND = 0.15\nexport const DEFAULT_SWIPE_VELOCITY = 0.5\nexport const DEFAULT_SWIPE_DISTANCE = 50\nexport const DEFAULT_SWIPE_DURATION = 250\n\nconst InternalGestureOptionsNormalizers = {\n  threshold(value: number | Vector2 = 0) {\n    return ensureVector(value)\n  },\n\n  rubberband(value: number | boolean | Vector2 = 0): Vector2 {\n    switch (value) {\n      case true:\n        return ensureVector(DEFAULT_RUBBERBAND)\n      case false:\n        return ensureVector(0)\n      default:\n        return ensureVector(value)\n    }\n  },\n\n  enabled(value = true) {\n    return value\n  },\n\n  triggerAllEvents(value = false) {\n    return value\n  },\n\n  initial(value = 0) {\n    if (typeof value === 'function') return value\n    return ensureVector(value)\n  },\n\n  transform: true,\n}\n\nconst InternalCoordinatesOptionsNormalizers = {\n  ...InternalGestureOptionsNormalizers,\n  axis: true,\n  lockDirection(value = false) {\n    return value\n  },\n  bounds(value: Bounds | ((state?: State) => Bounds) = {}) {\n    if (typeof value === 'function')\n      return (state?: State) => InternalCoordinatesOptionsNormalizers.bounds(value(state))\n\n    const { left = -Infinity, right = Infinity, top = -Infinity, bottom = Infinity } = value\n\n    return [\n      [left, right],\n      [top, bottom],\n    ]\n  },\n}\n\nconst isBrowser = typeof window !== 'undefined' && window.document && window.document.createElement\n\nconst InternalGenericOptionsNormalizers = {\n  enabled(value = true) {\n    return value\n  },\n  domTarget: true,\n  window(value = isBrowser ? window : undefined) {\n    return value\n  },\n  eventOptions({ passive = true, capture = false } = {}) {\n    return { passive, capture }\n  },\n  transform: true,\n}\n\nconst InternalDistanceAngleOptionsNormalizers = {\n  ...InternalGestureOptionsNormalizers,\n\n  bounds(_value: undefined, _key: string, { distanceBounds = {}, angleBounds = {} }) {\n    const _distanceBounds = (state?: State) => {\n      const D = assignDefault(valueFn(distanceBounds, state), { min: -Infinity, max: Infinity })\n      return [D.min, D.max]\n    }\n\n    const _angleBounds = (state?: State) => {\n      const A = assignDefault(valueFn(angleBounds, state), { min: -Infinity, max: Infinity })\n      return [A.min, A.max]\n    }\n\n    if (typeof distanceBounds !== 'function' && typeof angleBounds !== 'function')\n      return [_distanceBounds(), _angleBounds()]\n\n    return (state?: State) => [_distanceBounds(state), _angleBounds(state)]\n  },\n}\n\nconst InternalDragOptionsNormalizers = {\n  ...InternalCoordinatesOptionsNormalizers,\n\n  useTouch(value = false) {\n    return value && supportsTouchEvents()\n  },\n  experimental_preventWindowScrollY(value = false) {\n    return value\n  },\n  threshold(\n    this: InternalDragOptions,\n    v: number | Vector2 | undefined,\n    _k: string,\n    { filterTaps = false, lockDirection = false, axis = undefined }\n  ) {\n    const A = ensureVector(v, filterTaps ? 3 : lockDirection ? 1 : axis ? 1 : 0) as Vector2\n    this.filterTaps = filterTaps\n    return A\n  },\n\n  swipeVelocity(v: number | Vector2 = DEFAULT_SWIPE_VELOCITY) {\n    return ensureVector(v)\n  },\n  swipeDistance(v: number | Vector2 = DEFAULT_SWIPE_DISTANCE) {\n    return ensureVector(v)\n  },\n  swipeDuration(value = DEFAULT_SWIPE_DURATION) {\n    return value\n  },\n  delay(value: number | boolean = 0) {\n    switch (value) {\n      case true:\n        return DEFAULT_DRAG_DELAY\n      case false:\n        return 0\n      default:\n        return value\n    }\n  },\n}\n\nexport function getInternalGenericOptions(config: GenericOptions = {}): InternalGenericOptions {\n  // TODO warn when passive is set to true and domTarget is undefined\n  return resolveWith<GenericOptions, InternalGenericOptions>(config, InternalGenericOptionsNormalizers)\n}\n\nexport function getInternalGestureOptions<T extends StateKey>(\n  config: GestureOptions<T> = {}\n): InternalGestureOptions<T> {\n  return resolveWith<GestureOptions<T>, InternalGestureOptions<T>>(config, InternalGestureOptionsNormalizers)\n}\n\nexport function getInternalCoordinatesOptions<T extends CoordinatesKey>(\n  config: CoordinatesConfig<T> = {}\n): InternalCoordinatesOptions<T> {\n  return resolveWith<CoordinatesConfig<T>, InternalCoordinatesOptions<T>>(config, InternalCoordinatesOptionsNormalizers)\n}\n\nexport function getInternalDistanceAngleOptions<T extends DistanceAngleKey>(\n  config: DistanceAngleConfig<T> = {}\n): InternalDistanceAngleOptions<T> {\n  return resolveWith<DistanceAngleConfig<T>, InternalDistanceAngleOptions<T>>(\n    config,\n    InternalDistanceAngleOptionsNormalizers\n  )\n}\n\nexport function getInternalDragOptions(config: DragConfig = {}): InternalDragOptions {\n  return resolveWith<DragConfig, InternalDragOptions>(config, InternalDragOptionsNormalizers)\n}\n","import {\n  InternalConfig,\n  UseMoveConfig,\n  UseHoverConfig,\n  UseDragConfig,\n  UsePinchConfig,\n  UseScrollConfig,\n  UseWheelConfig,\n} from '../types'\n\nimport {\n  getInternalGenericOptions,\n  getInternalCoordinatesOptions,\n  getInternalDragOptions,\n  getInternalDistanceAngleOptions,\n} from '../utils/config'\n\nimport { UseGestureConfig } from '../types'\n\nexport function _buildMoveConfig({ domTarget, eventOptions, window, enabled, ...rest }: UseMoveConfig) {\n  const opts: InternalConfig = getInternalGenericOptions({ domTarget, eventOptions, window, enabled })\n  opts.move = getInternalCoordinatesOptions(rest)\n  return opts\n}\n\nexport function _buildHoverConfig({ domTarget, eventOptions, window, enabled, ...rest }: UseHoverConfig) {\n  const opts: InternalConfig = getInternalGenericOptions({ domTarget, eventOptions, window, enabled })\n  opts.hover = { enabled: true, ...rest }\n  return opts\n}\n\nexport function _buildDragConfig({ domTarget, eventOptions, window, enabled, ...rest }: UseDragConfig) {\n  const opts: InternalConfig = getInternalGenericOptions({ domTarget, eventOptions, window, enabled })\n  opts.drag = getInternalDragOptions(rest)\n  return opts\n}\n\nexport function _buildPinchConfig({ domTarget, eventOptions, window, enabled, ...rest }: UsePinchConfig) {\n  const opts: InternalConfig = getInternalGenericOptions({ domTarget, eventOptions, window, enabled })\n  opts.pinch = getInternalDistanceAngleOptions(rest)\n  return opts\n}\n\nexport function _buildScrollConfig({ domTarget, eventOptions, window, enabled, ...rest }: UseScrollConfig) {\n  const opts: InternalConfig = getInternalGenericOptions({ domTarget, eventOptions, window, enabled })\n  opts.scroll = getInternalCoordinatesOptions(rest)\n  return opts\n}\n\nexport function _buildWheelConfig({ domTarget, eventOptions, window, enabled, ...rest }: UseWheelConfig) {\n  const opts: InternalConfig = getInternalGenericOptions({ domTarget, eventOptions, window, enabled })\n  opts.wheel = getInternalCoordinatesOptions(rest)\n  return opts\n}\n\nexport function buildComplexConfig(config: UseGestureConfig = {}, actions: Set<string> = new Set()) {\n  const { drag, wheel, move, scroll, pinch, hover, eventOptions, window, transform, domTarget, enabled } = config\n\n  const mergedConfig: InternalConfig = getInternalGenericOptions({\n    domTarget,\n    eventOptions,\n    transform,\n    window,\n    enabled,\n  })\n\n  if (actions.has('onDrag')) mergedConfig.drag = getInternalDragOptions(drag)\n  if (actions.has('onWheel')) mergedConfig.wheel = getInternalCoordinatesOptions(wheel)\n  if (actions.has('onScroll')) mergedConfig.scroll = getInternalCoordinatesOptions(scroll)\n  if (actions.has('onMove')) mergedConfig.move = getInternalCoordinatesOptions(move)\n  if (actions.has('onPinch')) mergedConfig.pinch = getInternalDistanceAngleOptions(pinch)\n  if (actions.has('onHover')) mergedConfig.hover = { enabled: true, ...hover }\n\n  return mergedConfig\n}\n","import { noop } from './utils'\nimport { CommonGestureState, Coordinates, State, DistanceAngle, Vector2, DragState, PinchState } from '../types'\n\nfunction getInitial<T>(mixed: T): T & CommonGestureState {\n  return {\n    _active: false,\n    _blocked: false,\n    _intentional: [false, false],\n    _movement: [0, 0],\n    _initial: [0, 0],\n    _bounds: [\n      [-Infinity, Infinity],\n      [-Infinity, Infinity],\n    ],\n    _lastEventType: undefined,\n    _dragStarted: false,\n    _dragPreventScroll: false,\n    _dragIsTap: true,\n    _dragDelayed: false,\n    event: undefined,\n    intentional: false,\n    values: [0, 0],\n    velocities: [0, 0],\n    delta: [0, 0],\n    movement: [0, 0],\n    offset: [0, 0],\n    lastOffset: [0, 0],\n    direction: [0, 0],\n    initial: [0, 0],\n    previous: [0, 0],\n    first: false,\n    last: false,\n    active: false,\n    timeStamp: 0,\n    startTime: 0,\n    elapsedTime: 0,\n    cancel: noop,\n    canceled: false,\n    memo: undefined,\n    args: undefined,\n    ...mixed,\n  }\n}\n\nexport function getInitialState(): State {\n  const shared = {\n    hovering: false,\n    scrolling: false,\n    wheeling: false,\n    dragging: false,\n    moving: false,\n    pinching: false,\n    touches: 0,\n    buttons: 0,\n    down: false,\n    shiftKey: false,\n    altKey: false,\n    metaKey: false,\n    ctrlKey: false,\n    locked: false,\n  }\n\n  const drag = getInitial<DragState & Coordinates>({\n    _pointerId: undefined,\n    axis: undefined,\n    xy: [0, 0] as Vector2,\n    vxvy: [0, 0] as Vector2,\n    velocity: 0,\n    distance: 0,\n    tap: false,\n    swipe: [0, 0],\n  })\n\n  const pinch = getInitial<DistanceAngle & PinchState>({\n    // @ts-expect-error when used _pointerIds we can assert its type will be [number, number]\n    _pointerIds: [],\n    da: [0, 0] as Vector2,\n    vdva: [0, 0] as Vector2,\n    // @ts-expect-error origin can never be passed as undefined in userland\n    origin: undefined,\n    turns: 0,\n  })\n\n  const wheel = getInitial<Coordinates>({\n    axis: undefined,\n    xy: [0, 0] as Vector2,\n    vxvy: [0, 0] as Vector2,\n    velocity: 0,\n    distance: 0,\n  })\n\n  const move = getInitial<Coordinates>({\n    axis: undefined,\n    xy: [0, 0] as Vector2,\n    vxvy: [0, 0] as Vector2,\n    velocity: 0,\n    distance: 0,\n  })\n\n  const scroll = getInitial<Coordinates>({\n    axis: undefined,\n    xy: [0, 0] as Vector2,\n    vxvy: [0, 0] as Vector2,\n    velocity: 0,\n    distance: 0,\n  })\n\n  return { shared, drag, pinch, wheel, move, scroll }\n}\n","import Controller from '../Controller'\nimport {\n  StateKey,\n  SharedGestureState,\n  IngKey,\n  InternalConfig,\n  GestureKey,\n  GestureState,\n  EventTypes,\n  PartialGestureState,\n  Vector2,\n  FullGestureState,\n  RecognizerClass,\n} from '../types'\nimport { getInitialState } from '../utils/state'\nimport { rubberbandIfOutOfBounds } from '../utils/rubberband'\nimport { subV, addV, sign } from '../utils/math'\nimport { valueFn } from '../utils/utils'\n\nexport const RecognizersMap = new Map<GestureKey, RecognizerClass>()\n\nconst identity = (xy: Vector2) => xy\n\n/**\n * @private\n * Recognizer abstract class.\n */\nexport default abstract class Recognizer<T extends StateKey = StateKey> {\n  abstract readonly ingKey: IngKey // dragging, scrolling, etc.\n  protected debounced: Boolean = true\n  abstract readonly stateKey: T\n\n  /**\n   * Creates an instance of a gesture recognizer.\n   * @param stateKey drag, move, pinch, etc.\n   * @param controller the controller attached to the gesture\n   * @param [args] the args that should be passed to the gesture handler\n   */\n  constructor(readonly controller: Controller, readonly args: any[] = []) {\n    this.controller = controller\n    this.args = args\n  }\n\n  // Returns the gesture config\n  get config(): NonNullable<InternalConfig[T]> {\n    return this.controller.config[this.stateKey]!\n  }\n\n  // Is the gesture enabled\n  get enabled(): boolean {\n    return this.controller.config.enabled && this.config.enabled\n  }\n\n  // Returns the controller state for a given gesture\n  get state(): GestureState<T> {\n    return this.controller.state[this.stateKey]\n  }\n\n  // Returns the gesture handler\n  get handler() {\n    return this.controller.handlers[this.stateKey]!\n  }\n\n  get transform() {\n    return this.config.transform || this.controller.config.transform || identity\n  }\n\n  // Convenience method to update the shared state\n  protected updateSharedState(sharedState: Partial<SharedGestureState> | null) {\n    Object.assign(this.controller.state.shared, sharedState)\n  }\n\n  // Convenience method to update the gesture state\n  protected updateGestureState(gestureState: PartialGestureState<T> | null) {\n    Object.assign(this.state, gestureState)\n  }\n\n  // Convenience method to set a timeout for a given gesture\n  protected setTimeout = (callback: (...args: any[]) => void, ms: number = 140, ...args: any[]): void => {\n    clearTimeout(this.controller.timeouts[this.stateKey])\n    this.controller.timeouts[this.stateKey] = window.setTimeout(callback, ms, ...args)\n  }\n\n  // Convenience method to clear a timeout for a given gesture\n  protected clearTimeout = () => {\n    clearTimeout(this.controller.timeouts[this.stateKey])\n  }\n\n  protected abstract getKinematics(values: Vector2, event: React.UIEvent | UIEvent): PartialGestureState<T>\n\n  protected abstract getInternalMovement(values: Vector2, state: GestureState<T>): Vector2\n\n  protected abstract mapStateValues(state: GestureState<T>): Omit<PartialGestureState<T>, 'event'>\n\n  public abstract addBindings(bindings: any): void\n\n  /**\n   * Returns state properties depending on the movement and state.\n   *\n   * Should be overriden for custom behavior, doesn't do anything in the implementation\n   * below.\n   */\n  protected checkIntentionality(\n    _intentional: [false | number, false | number],\n    _movement: Vector2\n  ): PartialGestureState<T> {\n    return { _intentional, _blocked: false } as PartialGestureState<T>\n  }\n\n  /**\n   * Returns basic movement properties for the gesture based on the next values and current state.\n   */\n  protected getMovement(values: Vector2): PartialGestureState<T> {\n    const { rubberband, threshold: T } = this.config\n\n    const { _bounds, _initial, _active, _intentional: wasIntentional, lastOffset, movement: prevMovement } = this.state\n    const M = this.getInternalMovement(values, this.state)\n\n    const _T = this.transform(T).map(Math.abs)\n\n    const i0 = wasIntentional[0] === false ? getIntentionalDisplacement(M[0], _T[0]) : wasIntentional[0]\n    const i1 = wasIntentional[1] === false ? getIntentionalDisplacement(M[1], _T[1]) : wasIntentional[1]\n\n    // Get gesture specific state properties based on intentionality and movement.\n    const intentionalityCheck = this.checkIntentionality([i0, i1], M)\n    if (intentionalityCheck._blocked) {\n      return { ...intentionalityCheck, _movement: M, delta: [0, 0] }\n    }\n\n    const _intentional = intentionalityCheck._intentional!\n    const _movement = M\n\n    /**\n     * The movement sent to the handler has 0 in its dimensions when intentionality is false.\n     * It is calculated from the actual movement minus the threshold.\n     */\n    let movement: Vector2 = [\n      _intentional[0] !== false ? M[0] - _intentional[0] : 0,\n      _intentional[1] !== false ? M[1] - _intentional[1] : 0,\n    ]\n\n    const offset = addV(movement, lastOffset)\n\n    /**\n     * Rubberband should be 0 when the gesture is no longer active, so that movement\n     * and offset can return within their bounds.\n     */\n    const _rubberband: Vector2 = _active ? rubberband : [0, 0]\n    movement = computeRubberband(_bounds, addV(movement, _initial), _rubberband)\n\n    return {\n      ...intentionalityCheck,\n      intentional: _intentional[0] !== false || _intentional[1] !== false,\n      _initial,\n      _movement,\n      movement,\n      values,\n      offset: computeRubberband(_bounds, offset, _rubberband),\n      delta: subV(movement, prevMovement),\n    } as PartialGestureState<T>\n  }\n\n  // Cleans the gesture. Can be overriden by gestures.\n  protected clean() {\n    this.clearTimeout()\n  }\n\n  /**\n   * Fires the gesture handler\n   */\n  protected fireGestureHandler = (forceFlag: boolean = false): FullGestureState<T> | null => {\n    /**\n     * If the gesture has been blocked (this can happen when the gesture has started in an unwanted direction),\n     * clean everything and don't do anything.\n     */\n    if (this.state._blocked) {\n      // we need debounced gestures to end by themselves\n      if (!this.debounced) {\n        this.state._active = false\n        this.clean()\n      }\n      return null\n    }\n\n    // If the gesture has no intentional dimension, don't fire the handler.\n    if (!forceFlag && !this.state.intentional && !this.config.triggerAllEvents) return null\n\n    if (this.state.intentional) {\n      const prev_active = this.state.active\n      const next_active = this.state._active\n\n      this.state.active = next_active\n      this.state.first = next_active && !prev_active\n      this.state.last = prev_active && !next_active\n\n      this.controller.state.shared[this.ingKey] = next_active // Sets dragging, pinching, etc. to the gesture active state\n    }\n    const touches = this.controller.pointerIds.size || this.controller.touchIds.size\n    const down = this.controller.state.shared.buttons > 0 || touches > 0\n\n    const state = {\n      ...this.controller.state.shared,\n      ...this.state,\n      ...this.mapStateValues(this.state), // Sets xy or da to the gesture state values\n      locked: !!document.pointerLockElement,\n      touches,\n      down,\n    } as FullGestureState<T>\n\n    // @ts-expect-error\n    const newMemo = this.handler(state)\n\n    // Sets memo to the returned value of the handler (unless it's not undefined)\n    this.state.memo = newMemo !== void 0 ? newMemo : this.state.memo\n\n    return state\n  }\n}\n\n//--------------------------------------------\n\nfunction getIntentionalDisplacement(movement: number, threshold: number): number | false {\n  if (Math.abs(movement) >= threshold) {\n    return sign(movement) * threshold\n  } else {\n    return false\n  }\n}\n\nfunction computeRubberband(bounds: [Vector2, Vector2], [Vx, Vy]: Vector2, [Rx, Ry]: Vector2): Vector2 {\n  const [[X1, X2], [Y1, Y2]] = bounds\n\n  return [rubberbandIfOutOfBounds(Vx, X1, X2, Rx), rubberbandIfOutOfBounds(Vy, Y1, Y2, Ry)]\n}\n\n/**\n * Returns a generic, common payload for all gestures from an event.\n */\nexport function getGenericPayload<T extends StateKey>(\n  { state }: Recognizer<T>,\n  event: EventTypes[T],\n  isStartEvent?: boolean\n) {\n  const { timeStamp, type: _lastEventType } = event\n  const previous = state.values\n  const elapsedTime = isStartEvent ? 0 : timeStamp - state.startTime!\n  return { _lastEventType, event, timeStamp, elapsedTime, previous }\n}\n\n/**\n * Returns the reinitialized start state for the gesture.\n * Should be common to all gestures.\n */\nexport function getStartGestureState<T extends StateKey>(\n  { state, config, stateKey, args }: Recognizer<T>,\n  values: Vector2,\n  event: EventTypes[T]\n) {\n  const offset = state.offset\n  const startTime = event.timeStamp\n\n  const { initial, bounds } = config\n\n  const _state = {\n    ...getInitialState()[stateKey],\n    _active: true,\n    args,\n    values,\n    initial: values,\n    offset,\n    lastOffset: offset,\n    startTime,\n  }\n\n  return { ..._state, _initial: valueFn(initial, _state), _bounds: valueFn(bounds, _state) }\n}\n","import {\n  StateKey,\n  State,\n  Fn,\n  ReactEventHandlerKey,\n  ReactEventHandlers,\n  InternalConfig,\n  InternalHandlers,\n  RecognizerClass,\n} from './types'\nimport { supportsTouchEvents, supportsGestureEvents, getPointerIds } from './utils/event'\nimport { getInitialState } from './utils/state'\nimport { chainFns } from './utils/utils'\n\nfunction partial(func: Fn, state: any) {\n  return function (event: any, ...args: any) {\n    // @ts-ignore\n    return func.call(this, { ...state, event }, ...args)\n  }\n}\n\n/**\n * The controller will keep track of the state for all gestures and also keep\n * track of timeouts, and window listeners.\n */\nexport default class Controller {\n  public nativeRefs!: any\n  public config!: InternalConfig\n  public handlers!: InternalHandlers\n  public state: State // state for all gestures\n  public timeouts: { [stateKey in StateKey]?: number } // tracks timeouts of debounced gestures\n  public domListeners: [string, Fn][] // when config.domTarget is set, we attach events directly to the dom\n  public windowListeners: { [stateKey in StateKey]?: [string, Function][] } // keeps track of window listeners added by gestures (drag only at the moment)\n\n  public pointerIds = new Set<number>() // register Pointer Events pointerIds\n  public touchIds = new Set<number>() // register Touch Events identifiers\n  public supportsTouchEvents = supportsTouchEvents()\n  public supportsGestureEvents = supportsGestureEvents()\n\n  constructor(private classes: Set<RecognizerClass>) {\n    this.classes = classes\n    this.state = getInitialState()\n    this.timeouts = {}\n    this.domListeners = []\n    this.windowListeners = {}\n  }\n\n  public bind = (...args: any[]) => {\n    const bindings: { [key: string]: Function[] } = {}\n\n    for (let RecognizerClass of this.classes) new RecognizerClass(this, args).addBindings(bindings)\n\n    // we also add event bindings for native handlers\n    for (let [event, handler] of Object.entries(this.nativeRefs))\n      addBindings(bindings, event, partial(handler, { ...this.state.shared, args }))\n\n    if (this.config.domTarget) {\n      // If config.domTarget is set we add event listeners to it and return the clean function.\n      return updateDomListeners(this, bindings)\n    } else {\n      // If not, we return an object that contains gesture handlers mapped to react handler event keys.\n      return getPropsListener(this, bindings)\n    }\n  }\n\n  public effect = () => {\n    if (this.config.domTarget) this.bind()\n    return this.clean\n  }\n\n  /**\n   * Function ran on component unmount: cleans timeouts and removes dom listeners set by the bind function.\n   */\n  public clean = (): void => {\n    const domTarget = getDomTargetFromConfig(this.config)\n    const { eventOptions } = this.config\n    if (domTarget) removeListeners(domTarget, takeAll(this.domListeners), eventOptions)\n    Object.values(this.timeouts).forEach(clearTimeout)\n    clearAllWindowListeners(this)\n  }\n}\n\nexport function addEventIds(\n  controller: Controller,\n  event: React.TouchEvent | TouchEvent | React.PointerEvent | PointerEvent\n) {\n  const idList = 'pointerId' in event ? controller.pointerIds : controller.touchIds\n  getPointerIds(event).forEach(idList.add, idList)\n}\n\nexport function removeEventIds(\n  controller: Controller,\n  event: React.TouchEvent | TouchEvent | React.PointerEvent | PointerEvent\n) {\n  const idList = 'pointerId' in event ? controller.pointerIds : controller.touchIds\n  getPointerIds(event).forEach(idList.delete, idList)\n}\n\nexport function clearAllWindowListeners(controller: Controller) {\n  const {\n    config: { window: el, eventOptions },\n    windowListeners,\n  } = controller\n  if (!el) return\n\n  for (let stateKey in windowListeners) {\n    const handlers = windowListeners[stateKey as StateKey]\n    removeListeners(el, handlers, eventOptions)\n  }\n\n  controller.windowListeners = {}\n}\n\nexport function clearWindowListeners(\n  { config, windowListeners }: Controller,\n  stateKey: StateKey,\n  options = config.eventOptions\n) {\n  if (!config.window) return\n  removeListeners(config.window, windowListeners[stateKey], options)\n  delete windowListeners[stateKey]\n}\n\nexport function updateWindowListeners(\n  { config, windowListeners }: Controller,\n  stateKey: StateKey,\n  listeners: [string, Fn][] = [],\n  options = config.eventOptions\n) {\n  if (!config.window) return\n  removeListeners(config.window, windowListeners[stateKey], options)\n  addListeners(config.window, (windowListeners[stateKey] = listeners), options)\n}\n\nfunction updateDomListeners({ config, domListeners }: Controller, bindings: { [key: string]: Function[] }) {\n  const domTarget = getDomTargetFromConfig(config)\n  if (!domTarget) throw new Error('domTarget must be defined')\n  const { eventOptions } = config\n\n  removeListeners(domTarget, takeAll(domListeners), eventOptions)\n\n  for (let [key, fns] of Object.entries(bindings)) {\n    const name = key.slice(2).toLowerCase()\n    domListeners.push([name, chainFns(...fns)])\n  }\n\n  addListeners(domTarget, domListeners, eventOptions)\n}\n\nfunction getPropsListener({ config }: Controller, bindings: { [key: string]: Function[] }) {\n  const props: ReactEventHandlers = {}\n  const captureString = config.eventOptions.capture ? 'Capture' : ''\n  for (let [event, fns] of Object.entries(bindings)) {\n    const fnsArray = Array.isArray(fns) ? fns : [fns]\n    const key = (event + captureString) as ReactEventHandlerKey\n    props[key] = chainFns(...(fnsArray as Fn[]))\n  }\n  return props\n}\n\nfunction takeAll<T>(array: Array<T> = []) {\n  return array.splice(0, array.length)\n}\n\nfunction getDomTargetFromConfig({ domTarget }: InternalConfig) {\n  return domTarget && 'current' in domTarget ? domTarget.current : domTarget\n}\n\n/**\n * bindings is an object which keys match ReactEventHandlerKeys.\n * Since a recognizer might want to bind a handler function to an event key already used by a previously\n * added recognizer, we need to make sure that each event key is an array of all the functions mapped for\n * that key.\n */\nexport function addBindings(bindings: any, name: string, fn: Fn): void {\n  if (!bindings[name]) bindings[name] = []\n  bindings[name]!.push(fn)\n}\n\nfunction addListeners(el: EventTarget, listeners: Array<[string, Fn]> = [], options = {}) {\n  for (let [eventName, eventHandler] of listeners) {\n    el.addEventListener(eventName, eventHandler, options)\n  }\n}\n\nfunction removeListeners(el: EventTarget, listeners: Array<[string, Fn]> = [], options = {}) {\n  for (let [eventName, eventHandler] of listeners) {\n    el.removeEventListener(eventName, eventHandler, options)\n  }\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n\nimport React from 'react'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport Controller from '../Controller'\nimport {\n  InternalConfig,\n  HookReturnType,\n  InternalHandlers,\n  GenericOptions,\n  RecognizerClass,\n  NativeHandlers,\n} from '../types'\n\n/**\n * Utility hook called by all gesture hooks and that will be responsible for the internals.\n *\n * @param handlers\n * @param classes\n * @param config\n * @param nativeHandlers - native handlers such as onClick, onMouseDown, etc.\n */\nexport default function useRecognizers<Config extends Partial<GenericOptions>>(\n  handlers: Partial<InternalHandlers>,\n  config: InternalConfig,\n  nativeHandlers: Partial<NativeHandlers> = {}\n): (...args: any[]) => HookReturnType<Config> {\n  const classes = resolveClasses(handlers)\n\n  const controller = React.useMemo(() => new Controller(classes), [])\n  controller!.config = config\n  controller!.handlers = handlers\n  controller!.nativeRefs = nativeHandlers\n\n  React.useEffect(controller.effect, [])\n\n  // @ts-ignore\n  if (controller.config.domTarget) return deprecationNoticeForDomTarget\n  // @ts-ignore\n  return controller.bind\n}\n\nfunction deprecationNoticeForDomTarget() {\n  if (process.env.NODE_ENV === 'development') {\n    console.warn(\n      `Deprecation notice: When the \\`domTarget\\` option is specified, you don't need to write \\`useEffect(bind, [bind])\\` anymore: event binding is now made handled internally to this lib.\\n\\nNext version won't return anything when \\`domTarget\\` is provided, therefore your code will break if you try to call \\`useEffect\\`.`\n    )\n  }\n}\n\nfunction resolveClasses(internalHandlers: Partial<InternalHandlers>) {\n  const classes = new Set<RecognizerClass>()\n\n  if (internalHandlers.drag) classes.add(RecognizersMap.get('drag')!)\n  if (internalHandlers.wheel) classes.add(RecognizersMap.get('wheel')!)\n  if (internalHandlers.scroll) classes.add(RecognizersMap.get('scroll')!)\n  if (internalHandlers.move) classes.add(RecognizersMap.get('move')!)\n  if (internalHandlers.pinch) classes.add(RecognizersMap.get('pinch')!)\n  if (internalHandlers.hover) classes.add(RecognizersMap.get('hover')!)\n\n  return classes\n}\n","import Recognizer from './Recognizer'\nimport { calculateAllKinematics, subV } from '../utils/math'\nimport { Vector2, PartialGestureState, GestureState, CoordinatesKey } from '../types'\n\n/**\n * @private\n * Abstract class for coordinates-based gesture recongizers\n */\nexport default abstract class CoordinatesRecognizer<T extends CoordinatesKey> extends Recognizer<T> {\n  /**\n   * Returns the real movement (without taking intentionality into account)\n   */\n  protected getInternalMovement(values: Vector2, state: GestureState<T>): Vector2 {\n    return subV(values, state.initial)\n  }\n\n  /**\n   * In coordinates-based gesture, this function will detect the first intentional axis,\n   * lock the gesture axis if lockDirection is specified in the config, block the gesture\n   * if the first intentional axis doesn't match the specified axis in config.\n   */\n  protected checkIntentionality(\n    _intentional: [false | number, false | number],\n    _movement: Vector2\n  ): PartialGestureState<T> {\n    if (_intentional[0] === false && _intentional[1] === false) {\n      return { _intentional, axis: this.state.axis } as PartialGestureState<T>\n    }\n    const [absX, absY] = _movement.map(Math.abs)\n    const axis = this.state.axis || (absX > absY ? 'x' : absX < absY ? 'y' : undefined)\n    if (!this.config.axis && !this.config.lockDirection) return { _intentional, _blocked: false, axis } as any\n    if (!axis) return { _intentional: [false, false], _blocked: false, axis } as any\n    if (!!this.config.axis && axis !== this.config.axis) return { _intentional, _blocked: true, axis } as any\n    _intentional![axis === 'x' ? 1 : 0] = false\n    return { _intentional, _blocked: false, axis } as any\n  }\n\n  getKinematics(values: Vector2, event: React.UIEvent | UIEvent): PartialGestureState<T> {\n    const state = this.getMovement(values)\n    if (!state._blocked) {\n      const dt = event.timeStamp - this.state.timeStamp!\n      Object.assign(state, calculateAllKinematics(state.movement!, state.delta!, dt))\n    }\n    return state\n  }\n\n  protected mapStateValues(state: GestureState<T>): Omit<PartialGestureState<T>, 'event'> {\n    return { xy: state.values, vxvy: state.velocities } as Omit<PartialGestureState<T>, 'event'>\n  }\n}\n","import CoordinatesRecognizer from './CoordinatesRecognizer'\nimport { getPointerEventValues, getGenericEventData } from '../utils/event'\nimport { addV, calculateDistance, sign } from '../utils/math'\nimport { getStartGestureState, getGenericPayload } from './Recognizer'\nimport { addBindings, updateWindowListeners, clearWindowListeners, addEventIds, removeEventIds } from '../Controller'\n\nexport const TAP_DISTANCE_THRESHOLD = 3\nexport const SWIPE_MAX_ELAPSED_TIME = 220\n\nfunction persistEvent(event: React.PointerEvent | PointerEvent) {\n  'persist' in event && typeof event.persist === 'function' && event.persist()\n}\n\nexport class DragRecognizer extends CoordinatesRecognizer<'drag'> {\n  readonly ingKey = 'dragging'\n  readonly stateKey = 'drag'\n\n  // TODO add back when setPointerCapture is widely wupported\n  // https://caniuse.com/#search=setPointerCapture\n  private setPointerCapture = (event: React.PointerEvent | PointerEvent) => {\n    // don't perform pointere capture when user wants to use touch events or\n    // when a pointerLockElement exists as this would throw an error\n    if (this.config.useTouch || document.pointerLockElement) return\n\n    const { target, pointerId } = event\n    if (target && 'setPointerCapture' in target) {\n      // this would work in the DOM but doesn't with react three fiber\n      // target.addEventListener('pointermove', this.onDragChange, this.controller.config.eventOptions)\n      // @ts-expect-error\n      target.setPointerCapture(pointerId)\n    }\n    this.updateGestureState({ _dragTarget: target, _dragPointerId: pointerId })\n  }\n\n  private releasePointerCapture = () => {\n    if (this.config.useTouch || document.pointerLockElement) return\n\n    const { _dragTarget, _dragPointerId } = this.state\n    if (_dragPointerId && _dragTarget && 'releasePointerCapture' in _dragTarget) {\n      // this would work in the DOM but doesn't with react three fiber\n      // target.removeEventListener('pointermove', this.onDragChange, this.controller.config.eventOptions)\n      if (!('hasPointerCapture' in _dragTarget) || _dragTarget.hasPointerCapture(_dragPointerId))\n        try {\n          _dragTarget.releasePointerCapture(_dragPointerId)\n        } catch (e) {}\n    }\n  }\n\n  private preventScroll = (event: TouchEvent) => {\n    if (this.state._dragPreventScroll && event.cancelable) {\n      event.preventDefault()\n    }\n  }\n\n  private getEventId = (event: any): number => {\n    if (this.config.useTouch) return event.changedTouches[0].identifier\n    return event.pointerId\n  }\n\n  private isValidEvent = (event: any) => {\n    // if we were using pointer events only event.isPrimary === 1 would suffice\n    return this.state._pointerId === this.getEventId(event)\n  }\n\n  private shouldPreventWindowScrollY =\n    this.config.experimental_preventWindowScrollY && this.controller.supportsTouchEvents\n\n  private setUpWindowScrollDetection = (event: React.PointerEvent | PointerEvent) => {\n    persistEvent(event)\n    // we add window listeners that will prevent the scroll when the user has started dragging\n    updateWindowListeners(\n      this.controller,\n      this.stateKey,\n      [\n        ['touchmove', this.preventScroll],\n        ['touchend', this.clean.bind(this)],\n        ['touchcancel', this.clean.bind(this)],\n      ],\n      { passive: false }\n    )\n    this.setTimeout(this.startDrag.bind(this), 250, event)\n  }\n\n  private setUpDelayedDragTrigger = (event: React.PointerEvent | PointerEvent) => {\n    this.state._dragDelayed = true\n    persistEvent(event)\n    this.setTimeout(this.startDrag.bind(this), this.config.delay, event)\n  }\n\n  private setStartState = (event: React.PointerEvent | PointerEvent) => {\n    const values = getPointerEventValues(event, this.transform)\n    this.updateSharedState(getGenericEventData(event))\n\n    this.updateGestureState({\n      ...getStartGestureState(this, values, event),\n      ...getGenericPayload(this, event, true),\n      _pointerId: this.getEventId(event), // setting pointerId locks the gesture to this specific event\n    })\n\n    this.updateGestureState(this.getMovement(values))\n  }\n\n  onDragStart = (event: React.PointerEvent | PointerEvent): void => {\n    addEventIds(this.controller, event)\n    if (!this.enabled || this.state._active) return\n\n    this.setStartState(event)\n    this.setPointerCapture(event as PointerEvent)\n\n    if (this.shouldPreventWindowScrollY) this.setUpWindowScrollDetection(event)\n    else if (this.config.delay > 0) this.setUpDelayedDragTrigger(event)\n    else this.startDrag(event, true) // we pass the values to the startDrag event\n  }\n\n  startDrag(event: React.PointerEvent | PointerEvent, onDragIsStart: boolean = false) {\n    // startDrag can happen after a timeout, so we need to check if the gesture is still active\n    // as the user might have lift up the pointer in between.\n\n    if (\n      // if the gesture isn't active (probably means)\n      !this.state._active ||\n      // if the drag has already started we should ignore subsequent attempts\n      this.state._dragStarted\n    )\n      return\n\n    if (!onDragIsStart) this.setStartState(event)\n    this.updateGestureState({ _dragStarted: true, _dragPreventScroll: true, cancel: this.onCancel })\n    this.clearTimeout()\n    this.fireGestureHandler()\n  }\n\n  onDragChange = (event: PointerEvent): void => {\n    if (\n      // if the gesture was canceled or\n      this.state.canceled ||\n      // if onDragStart wasn't fired or\n      !this.state._active ||\n      // if the event pointerId doesn't match the one that initiated the drag\n      !this.isValidEvent(event) ||\n      // if the event has the same timestamp as the previous event\n      // note that checking type equality is ONLY for tests ¯\\_(ツ)_/¯\n      (this.state._lastEventType === event.type && event.timeStamp === this.state.timeStamp)\n    )\n      return\n\n    let values\n\n    if (document.pointerLockElement) {\n      const { movementX, movementY } = event\n      values = addV(this.transform([movementX, movementY]), this.state.values)\n    } else values = getPointerEventValues(event, this.transform)\n\n    const kinematics = this.getKinematics(values, event)\n\n    // if startDrag hasn't fired\n    if (!this.state._dragStarted) {\n      // If the gesture isn't active then respond to the event only if\n      // it's been delayed via the `delay` option, in which case start\n      // the gesture immediately.\n      if (this.state._dragDelayed) {\n        this.startDrag(event)\n        return\n      }\n      // if the user wants to prevent vertical window scroll when user starts dragging\n      if (this.shouldPreventWindowScrollY) {\n        if (!this.state._dragPreventScroll && kinematics.axis) {\n          // if the user is dragging horizontally then we should allow the drag\n          if (kinematics.axis === 'x') {\n            this.startDrag(event)\n          } else {\n            this.state._active = false\n            return\n          }\n        } else return\n      } else return\n    }\n\n    const genericEventData = getGenericEventData(event)\n\n    this.updateSharedState(genericEventData)\n    const genericPayload = getGenericPayload(this, event)\n\n    // This verifies if the drag can be assimilated to a tap by checking\n    // if the real distance of the drag (ie not accounting for the threshold) is\n    // greater than the TAP_DISTANCE_THRESHOLD.\n    const realDistance = calculateDistance(kinematics._movement!)\n    let { _dragIsTap } = this.state\n    if (_dragIsTap && realDistance >= TAP_DISTANCE_THRESHOLD) _dragIsTap = false\n\n    this.updateGestureState({ ...genericPayload, ...kinematics, _dragIsTap })\n\n    this.fireGestureHandler()\n  }\n\n  onDragEnd = (event: PointerEvent): void => {\n    removeEventIds(this.controller, event)\n\n    // if the event pointerId doesn't match the one that initiated the drag\n    // we don't want to end the drag\n    if (!this.isValidEvent(event)) return\n    this.clean()\n\n    // if the gesture is no longer active (ie canceled)\n    // don't do anything\n    if (!this.state._active) return\n    this.state._active = false\n\n    const tap = this.state._dragIsTap\n    const [vx, vy] = this.state.velocities\n    const [mx, my] = this.state.movement\n    const [ix, iy] = this.state._intentional\n    const [svx, svy] = this.config.swipeVelocity\n    const [sx, sy] = this.config.swipeDistance\n    const sd = this.config.swipeDuration\n\n    const endState = {\n      ...getGenericPayload(this, event),\n      ...this.getMovement(this.state.values),\n    }\n\n    const swipe: [number, number] = [0, 0]\n\n    if (endState.elapsedTime < sd) {\n      if (ix !== false && Math.abs(vx) > svx && Math.abs(mx) > sx) swipe[0] = sign(vx)\n      if (iy !== false && Math.abs(vy) > svy && Math.abs(my) > sy) swipe[1] = sign(vy)\n    }\n\n    this.updateSharedState({ buttons: 0 })\n    this.updateGestureState({ ...endState, tap, swipe })\n    this.fireGestureHandler(this.config.filterTaps && tap === true)\n  }\n\n  clean = (): void => {\n    super.clean()\n    this.state._dragStarted = false\n    this.releasePointerCapture()\n    clearWindowListeners(this.controller, this.stateKey)\n  }\n\n  onCancel = (): void => {\n    if (this.state.canceled) return\n    this.updateGestureState({ canceled: true, _active: false })\n    this.updateSharedState({ buttons: 0 })\n    setTimeout(() => this.fireGestureHandler(), 0)\n  }\n\n  onClick = (event: React.UIEvent | UIEvent): void => {\n    if (!this.state._dragIsTap) event.stopPropagation()\n  }\n\n  addBindings(bindings: any): void {\n    if (this.config.useTouch) {\n      addBindings(bindings, 'onTouchStart', this.onDragStart)\n      addBindings(bindings, 'onTouchMove', this.onDragChange) // this is needed for react-three-fiber\n      addBindings(bindings, 'onTouchEnd', this.onDragEnd)\n      addBindings(bindings, 'onTouchCancel', this.onDragEnd)\n    } else {\n      addBindings(bindings, 'onPointerDown', this.onDragStart)\n      addBindings(bindings, 'onPointerMove', this.onDragChange) // this is needed for react-three-fiber\n      addBindings(bindings, 'onPointerUp', this.onDragEnd)\n      addBindings(bindings, 'onPointerCancel', this.onDragEnd)\n    }\n\n    if (this.config.filterTaps) {\n      const handler = this.controller.config.eventOptions.capture ? 'onClick' : 'onClickCapture'\n      addBindings(bindings, handler, this.onClick)\n    }\n  }\n}\n","/**\n * Inlined from https://github.com/alexreardon/memoize-one\n */\n\nexport type EqualityFn = (newArgs: any[], lastArgs: any[]) => boolean\n\nexport default function memoizeOne<ResultFn extends (this: any, ...newArgs: any[]) => ReturnType<ResultFn>>(\n  resultFn: ResultFn,\n  isEqual: EqualityFn\n): ResultFn {\n  let lastThis: unknown\n  let lastArgs: unknown[] = []\n  let lastResult: ReturnType<ResultFn>\n  let calledOnce: boolean = false\n\n  function memoized(this: unknown, ...newArgs: unknown[]): ReturnType<ResultFn> {\n    if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n      return lastResult\n    }\n\n    lastResult = resultFn.apply(this, newArgs)\n    calledOnce = true\n    lastThis = this\n    lastArgs = newArgs\n    return lastResult\n  }\n\n  return memoized as ResultFn\n}\n","/**\n * Taken from https://github.com/FormidableLabs/react-fast-compare\n *\n * Dropped comments and ArrayBuffer handling\n */\n\nfunction equal(a: any, b: any): boolean {\n  if (a === b) return true\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false\n\n    let length, i, keys\n    if (Array.isArray(a)) {\n      length = a.length\n      if (length !== b.length) return false\n      for (i = length; i-- !== 0; ) if (!equal(a[i], b[i])) return false\n      return true\n    }\n\n    let it\n    if (typeof Map === 'function' && a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) return false\n      it = a.entries()\n      while (!(i = it.next()).done) if (!b.has(i.value[0])) return false\n      it = a.entries()\n      while (!(i = it.next()).done) if (!equal(i.value[1], b.get(i.value[0]))) return false\n      return true\n    }\n\n    if (typeof Set === 'function' && a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) return false\n      it = a.entries()\n      while (!(i = it.next()).done) if (!b.has(i.value[0])) return false\n      return true\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf()\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString()\n\n    keys = Object.keys(a)\n    length = keys.length\n    if (length !== Object.keys(b).length) return false\n\n    for (i = length; i-- !== 0; ) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false\n\n    if (typeof Element !== 'undefined' && a instanceof Element) return false\n\n    for (i = length; i-- !== 0; ) {\n      if (keys[i] === '_owner' && a.$$typeof) continue\n      if (!equal(a[keys[i]], b[keys[i]])) return false\n    }\n    return true\n  }\n\n  // true if both NaN, false otherwise — NaN !== NaN → true\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b\n}\n\nexport default function isEqual(a: any, b: any) {\n  try {\n    return equal(a, b)\n  } catch (error) {\n    if ((error.message || '').match(/stack|recursion/i)) {\n      console.warn('react-fast-compare cannot handle circular refs')\n      return false\n    }\n    throw error\n  }\n}\n","import { UseDragConfig, Handler, EventTypes } from '../types'\nimport { _buildDragConfig } from './buildConfig'\nimport useRecognizers from './useRecognizers'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { DragRecognizer } from '../recognizers/DragRecognizer'\nimport memoize from '../utils/memoize-one'\nimport isEqual from '../utils/react-fast-compare'\nimport { useRef } from 'react'\n\n/**\n * Drag hook.\n *\n * @param handler - the function fired every time the drag gesture updates\n * @param [config={}] - the config object including generic options and drag options\n */\nexport function useDrag<K = EventTypes['drag']>(handler: Handler<'drag', K>, config: UseDragConfig | {} = {}) {\n  RecognizersMap.set('drag', DragRecognizer)\n  const buildDragConfig = useRef<any>()\n  if (!buildDragConfig.current) {\n    buildDragConfig.current = memoize(_buildDragConfig, isEqual)\n  }\n  return useRecognizers<UseDragConfig>({ drag: handler }, buildDragConfig.current(config))\n}\n","import Recognizer from './Recognizer'\nimport { calculateAllKinematics, sign, subV } from '../utils/math'\nimport { Vector2, PartialGestureState, DistanceAngleKey, GestureState } from '../types'\n\n/**\n * @private\n * Abstract class for distance/angle-based gesture recongizers\n */\nexport default abstract class DistanceAngleRecognizer<T extends DistanceAngleKey> extends Recognizer<T> {\n  protected getInternalMovement(values: [number, number?], state: GestureState<T>): Vector2 {\n    const prev_a = state.values[1]\n    // not be defined if ctrl+wheel is used for zoom only\n    let [d, a = prev_a] = values\n\n    let delta_a = a - prev_a\n    let next_turns = state.turns\n    if (Math.abs(delta_a) > 270) next_turns += sign(delta_a)\n    return subV([d, a - 360 * next_turns], state.initial)\n  }\n\n  getKinematics(values: Vector2, event: React.UIEvent | UIEvent): PartialGestureState<T> {\n    const state = this.getMovement(values)\n    const turns = (values[1] - state._movement![1] - this.state.initial[1]) / 360\n    const dt = event.timeStamp - this.state.timeStamp!\n    const { distance, velocity, ...kinematics } = calculateAllKinematics(state.movement!, state.delta!, dt)\n    return { turns, ...state, ...kinematics }\n  }\n\n  protected mapStateValues(state: GestureState<T>): Omit<PartialGestureState<T>, 'event'> {\n    return { da: state.values, vdva: state.velocities } as Omit<PartialGestureState<T>, 'event'>\n  }\n}\n\n/**\n * @param dangle is a small change of variable on \"lifting\" of the circle.\n * It's expected to be small and cannot be greater than 270 or under -270\n */\nexport function fixContinuity(dangle: number) {\n  dangle -= Math.round(dangle / 360) * 360\n  if (dangle > 270) return dangle - 360\n  if (dangle < -270) return dangle + 360\n  return dangle\n}\n","import DistanceAngleRecognizer from './DistanceAngleRecognizer'\nimport { Vector2, WebKitGestureEvent } from '../types'\nimport {\n  getGenericEventData,\n  getTwoTouchesEventValues,\n  getWheelEventValues,\n  getWebkitGestureEventValues,\n  getPointerIds,\n} from '../utils/event'\nimport { getStartGestureState, getGenericPayload } from './Recognizer'\nimport { addBindings, addEventIds, removeEventIds } from '../Controller'\n\nexport class PinchRecognizer extends DistanceAngleRecognizer<'pinch'> {\n  readonly ingKey = 'pinching'\n  readonly stateKey = 'pinch'\n\n  onPinchStart = (event: React.TouchEvent | TouchEvent) => {\n    addEventIds(this.controller, event)\n\n    if (!this.enabled || this.state._active) return\n    // until we reach two fingers on the target don't react\n    if (this.controller.touchIds.size < 2) return\n    const _pointerIds = Array.from(this.controller.touchIds).slice(0, 2) as [number, number]\n\n    const { values, origin } = getTwoTouchesEventValues(event, _pointerIds, this.transform)\n\n    this.updateSharedState(getGenericEventData(event))\n\n    this.updateGestureState({\n      ...getStartGestureState(this, values, event),\n      ...getGenericPayload(this, event, true),\n      _pointerIds,\n      cancel: this.onCancel,\n      origin,\n    })\n\n    this.updateGestureState(this.getMovement(values))\n    this.fireGestureHandler()\n  }\n\n  onPinchChange = (event: React.TouchEvent | TouchEvent): void => {\n    const { canceled, _active } = this.state\n    if (\n      canceled ||\n      !_active ||\n      // if the event has the same timestamp as the previous event\n      event.timeStamp === this.state.timeStamp\n    )\n      return\n    const genericEventData = getGenericEventData(event)\n\n    this.updateSharedState(genericEventData)\n\n    const { values, origin } = getTwoTouchesEventValues(event, this.state._pointerIds, this.transform)\n    const kinematics = this.getKinematics(values, event)\n\n    this.updateGestureState({\n      ...getGenericPayload(this, event),\n      ...kinematics,\n      origin,\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onPinchEnd = (event: React.TouchEvent | TouchEvent): void => {\n    removeEventIds(this.controller, event)\n    const pointerIds = getPointerIds(event)\n\n    // if none of the lifted pointerIds is in the state pointerIds don't do anything\n    if (this.state._pointerIds.every(id => !pointerIds.includes(id))) return\n\n    this.clean()\n    if (!this.state._active) return\n\n    this.updateGestureState({\n      ...getGenericPayload(this, event),\n      ...this.getMovement(this.state.values),\n      _active: false,\n    })\n    this.fireGestureHandler()\n  }\n\n  onCancel = (): void => {\n    if (this.state.canceled) return\n    this.updateGestureState({ _active: false, canceled: true })\n    setTimeout(() => this.fireGestureHandler(), 0)\n  }\n  /**\n   * PINCH WITH WEBKIT GESTURES\n   */\n\n  onGestureStart = (event: WebKitGestureEvent): void => {\n    if (!this.enabled) return\n    event.preventDefault() // useless\n\n    const values = getWebkitGestureEventValues(event, this.transform)\n\n    this.updateSharedState(getGenericEventData(event))\n\n    this.updateGestureState({\n      ...getStartGestureState(this, values, event),\n      ...getGenericPayload(this, event, true),\n      origin: [event.clientX, event.clientY] as Vector2, // only used on dekstop\n      cancel: this.onCancel,\n    })\n\n    this.updateGestureState(this.getMovement(values))\n    this.fireGestureHandler()\n  }\n\n  onGestureChange = (event: WebKitGestureEvent): void => {\n    const { canceled, _active } = this.state\n    if (canceled || !_active) return\n\n    event.preventDefault()\n\n    const genericEventData = getGenericEventData(event)\n\n    this.updateSharedState(genericEventData)\n\n    const values = getWebkitGestureEventValues(event, this.transform)\n    const kinematics = this.getKinematics(values, event)\n\n    this.updateGestureState({\n      ...getGenericPayload(this, event),\n      ...kinematics,\n      origin: [event.clientX, event.clientY] as Vector2, // only used on dekstop\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onGestureEnd = (event: WebKitGestureEvent): void => {\n    this.clean()\n    if (!this.state._active) return\n\n    this.updateGestureState({\n      ...getGenericPayload(this, event),\n      ...this.getMovement(this.state.values),\n      _active: false,\n      origin: [event.clientX, event.clientY] as Vector2, // only used on dekstop\n    })\n    this.fireGestureHandler()\n  }\n\n  /**\n   * PINCH WITH WHEEL\n   */\n  private wheelShouldRun = (event: React.WheelEvent | WheelEvent) => {\n    return this.enabled && event.ctrlKey\n  }\n\n  private getWheelValuesFromEvent = (event: React.WheelEvent | WheelEvent) => {\n    const [, delta_d] = getWheelEventValues(event, this.transform)\n    const {\n      values: [prev_d, prev_a],\n    } = this.state\n    const d = prev_d - delta_d\n    const a = prev_a !== void 0 ? prev_a : 0\n\n    return {\n      values: [d, a] as Vector2,\n      origin: [event.clientX, event.clientY] as Vector2,\n      delta: [0, delta_d] as Vector2,\n    }\n  }\n\n  onWheel = (event: React.WheelEvent | WheelEvent): void => {\n    if (!this.wheelShouldRun(event)) return\n    this.setTimeout(this.onWheelEnd)\n\n    if (!this.state._active) this.onWheelStart(event)\n    else this.onWheelChange(event)\n  }\n\n  onWheelStart = (event: React.WheelEvent | WheelEvent): void => {\n    const { values, delta, origin } = this.getWheelValuesFromEvent(event)\n\n    if (event.cancelable) event.preventDefault()\n    else if (process.env.NODE_ENV === 'development') {\n      console.warn(\n        'To properly support zoom on trackpads, try using the `domTarget` option and `config.eventOptions.passive` set to `false`. This message will only appear in development mode.'\n      )\n    }\n\n    this.updateSharedState(getGenericEventData(event))\n\n    this.updateGestureState({\n      ...getStartGestureState(this, values, event),\n      ...getGenericPayload(this, event, true),\n      initial: this.state.values,\n      offset: values,\n      delta,\n      origin,\n    })\n\n    this.updateGestureState(this.getMovement(values))\n    this.fireGestureHandler()\n  }\n\n  onWheelChange = (event: React.WheelEvent | WheelEvent): void => {\n    if (event.cancelable) event.preventDefault()\n\n    this.updateSharedState(getGenericEventData(event))\n    const { values, origin, delta } = this.getWheelValuesFromEvent(event)\n\n    this.updateGestureState({\n      ...getGenericPayload(this, event),\n      ...this.getKinematics(values, event),\n      origin,\n      delta,\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onWheelEnd = (): void => {\n    this.clean()\n    if (!this.state._active) return\n    this.state._active = false\n    this.updateGestureState(this.getMovement(this.state.values))\n    this.fireGestureHandler()\n  }\n\n  addBindings(bindings: any): void {\n    // Only try to use gesture events when they are supported and domTarget is set\n    // as React doesn't support gesture handlers.\n    if (\n      this.controller.config.domTarget &&\n      !this.controller.supportsTouchEvents &&\n      this.controller.supportsGestureEvents\n    ) {\n      addBindings(bindings, 'onGestureStart', this.onGestureStart)\n      addBindings(bindings, 'onGestureChange', this.onGestureChange)\n      addBindings(bindings, 'onGestureEnd', this.onGestureEnd)\n    } else {\n      addBindings(bindings, 'onTouchStart', this.onPinchStart)\n      addBindings(bindings, 'onTouchMove', this.onPinchChange)\n      addBindings(bindings, 'onTouchEnd', this.onPinchEnd)\n      addBindings(bindings, 'onTouchCancel', this.onPinchEnd)\n      addBindings(bindings, 'onWheel', this.onWheel)\n    }\n  }\n}\n","import { UsePinchConfig, Handler, EventTypes } from '../types'\nimport { _buildPinchConfig } from './buildConfig'\nimport useRecognizers from './useRecognizers'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { PinchRecognizer } from '../recognizers/PinchRecognizer'\nimport memoize from '../utils/memoize-one'\nimport isEqual from '../utils/react-fast-compare'\nimport { useRef } from 'react'\n\n/**\n * Pinch hook.\n *\n * @param handler - the function fired every time the pinch gesture updates\n * @param [config={}] - the config object including generic options and pinch options\n */\nexport function usePinch<K = EventTypes['pinch']>(handler: Handler<'pinch', K>, config: UsePinchConfig | {} = {}) {\n  RecognizersMap.set('pinch', PinchRecognizer)\n  const buildPinchConfig = useRef<any>()\n  if (!buildPinchConfig.current) {\n    buildPinchConfig.current = memoize(_buildPinchConfig, isEqual)\n  }\n  return useRecognizers<UsePinchConfig>({ pinch: handler }, buildPinchConfig.current(config))\n}\n","import { WheelEvent } from 'react'\nimport CoordinatesRecognizer from './CoordinatesRecognizer'\nimport { getWheelEventValues, getGenericEventData } from '../utils/event'\nimport { addV, calculateAllGeometry } from '../utils/math'\nimport { getStartGestureState, getGenericPayload } from './Recognizer'\nimport { addBindings } from '../Controller'\n\nexport class WheelRecognizer extends CoordinatesRecognizer<'wheel'> {\n  readonly ingKey = 'wheeling'\n  readonly stateKey = 'wheel'\n  debounced = true\n\n  handleEvent = (event: React.WheelEvent | WheelEvent): void => {\n    if (event.ctrlKey && 'pinch' in this.controller.handlers) return\n    if (!this.enabled) return\n\n    this.setTimeout(this.onEnd)\n    this.updateSharedState(getGenericEventData(event))\n\n    const values = addV(getWheelEventValues(event, this.transform), this.state.values)\n\n    if (!this.state._active) {\n      this.updateGestureState({\n        ...getStartGestureState(this, values, event),\n        ...getGenericPayload(this, event, true),\n        initial: this.state.values,\n      })\n\n      const movement = this.getMovement(values)\n      const geometry = calculateAllGeometry(movement.delta!)\n\n      this.updateGestureState(movement)\n      this.updateGestureState(geometry)\n    } else {\n      this.updateGestureState({\n        ...getGenericPayload(this, event),\n        ...this.getKinematics(values, event),\n      })\n    }\n\n    this.fireGestureHandler()\n  }\n\n  onEnd = (): void => {\n    this.clean()\n    if (!this.state._active) return\n    const movement = this.getMovement(this.state.values)\n    this.updateGestureState(movement)\n    this.updateGestureState({ _active: false, velocities: [0, 0], velocity: 0 })\n    this.fireGestureHandler()\n  }\n\n  addBindings(bindings: any): void {\n    addBindings(bindings, 'onWheel', this.handleEvent)\n  }\n}\n","import { UseWheelConfig, Handler, EventTypes } from '../types'\nimport { _buildWheelConfig } from './buildConfig'\nimport useRecognizers from './useRecognizers'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { WheelRecognizer } from '../recognizers/WheelRecognizer'\nimport memoize from '../utils/memoize-one'\nimport isEqual from '../utils/react-fast-compare'\nimport { useRef } from 'react'\n\n/**\n * Wheel hook.\n *\n * @param handler - the function fired every time the wheel gesture updates\n * @param the config object including generic options and wheel options\n */\nexport function useWheel<K = EventTypes['wheel']>(handler: Handler<'wheel', K>, config: UseWheelConfig | {} = {}) {\n  RecognizersMap.set('wheel', WheelRecognizer)\n  const buildWheelConfig = useRef<any>()\n  if (!buildWheelConfig.current) {\n    buildWheelConfig.current = memoize(_buildWheelConfig, isEqual)\n  }\n  return useRecognizers<UseWheelConfig>({ wheel: handler }, buildWheelConfig.current(config))\n}\n","import CoordinatesRecognizer from './CoordinatesRecognizer'\nimport { getGenericEventData, getPointerEventValues } from '../utils/event'\nimport { getStartGestureState, getGenericPayload } from './Recognizer'\nimport { addBindings } from '../Controller'\n\nexport class MoveRecognizer extends CoordinatesRecognizer<'move'> {\n  readonly ingKey = 'moving'\n  readonly stateKey = 'move'\n\n  debounced = true\n\n  onMove = (event: React.PointerEvent | PointerEvent): void => {\n    if (!this.enabled) return\n    this.setTimeout(this.onMoveEnd)\n\n    if (!this.state._active) this.onMoveStart(event)\n    else this.onMoveChange(event)\n  }\n\n  onMoveStart = (event: React.PointerEvent | PointerEvent): void => {\n    this.updateSharedState(getGenericEventData(event))\n    const values = getPointerEventValues(event, this.transform)\n\n    this.updateGestureState({\n      ...getStartGestureState(this, values, event),\n      ...getGenericPayload(this, event, true),\n    })\n\n    this.updateGestureState(this.getMovement(values))\n    this.fireGestureHandler()\n  }\n\n  onMoveChange = (event: React.PointerEvent | PointerEvent): void => {\n    this.updateSharedState(getGenericEventData(event))\n    const values = getPointerEventValues(event, this.transform)\n\n    this.updateGestureState({\n      ...getGenericPayload(this, event),\n      ...this.getKinematics(values, event),\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onMoveEnd = (): void => {\n    this.clean()\n    if (!this.state._active) return\n    const values = this.state.values\n    this.updateGestureState(this.getMovement(values))\n    this.updateGestureState({ velocities: [0, 0], velocity: 0, _active: false })\n    this.fireGestureHandler()\n  }\n\n  hoverTransform = () => {\n    return this.controller.config.hover!.transform || this.controller.config.transform\n  }\n\n  onPointerEnter = (event: React.PointerEvent | PointerEvent): void => {\n    this.controller.state.shared.hovering = true\n    if (!this.controller.config.enabled) return\n\n    if (this.controller.config.hover!.enabled) {\n      const values = getPointerEventValues(event, this.hoverTransform())\n\n      const state = {\n        ...this.controller.state.shared,\n        ...this.state,\n        ...getGenericPayload(this, event, true),\n        args: this.args,\n        values,\n        active: true,\n        hovering: true,\n      }\n\n      this.controller.handlers.hover!({ ...state, ...this.mapStateValues(state) })\n    }\n\n    if ('move' in this.controller.handlers) this.onMoveStart(event)\n  }\n\n  onPointerLeave = (event: React.PointerEvent | PointerEvent): void => {\n    this.controller.state.shared.hovering = false\n    if ('move' in this.controller.handlers) this.onMoveEnd()\n    if (!this.controller.config.hover!.enabled) return\n\n    const values = getPointerEventValues(event, this.hoverTransform())\n\n    const state = {\n      ...this.controller.state.shared,\n      ...this.state,\n      ...getGenericPayload(this, event),\n      args: this.args,\n      values,\n      active: false,\n    }\n\n    this.controller.handlers.hover!({ ...state, ...this.mapStateValues(state) })\n  }\n\n  addBindings(bindings: any): void {\n    if ('move' in this.controller.handlers) {\n      addBindings(bindings, 'onPointerMove', this.onMove)\n    }\n    if ('hover' in this.controller.handlers) {\n      addBindings(bindings, 'onPointerEnter', this.onPointerEnter)\n      addBindings(bindings, 'onPointerLeave', this.onPointerLeave)\n    }\n  }\n}\n","import { UseMoveConfig, Handler, EventTypes } from '../types'\nimport { _buildMoveConfig } from './buildConfig'\nimport useRecognizers from './useRecognizers'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { MoveRecognizer } from '../recognizers/MoveRecognizer'\nimport memoize from '../utils/memoize-one'\nimport isEqual from '../utils/react-fast-compare'\nimport { useRef } from 'react'\n\n/**\n * Move hook.\n *\n * @param handler - the function fired every time the move gesture updates\n * @param [config={}] - the config object including generic options and move options\n */\nexport function useMove<K = EventTypes['move']>(handler: Handler<'move', K>, config: UseMoveConfig | {} = {}) {\n  RecognizersMap.set('move', MoveRecognizer)\n  const buildMoveConfig = useRef<any>()\n  if (!buildMoveConfig.current) {\n    buildMoveConfig.current = memoize(_buildMoveConfig, isEqual)\n  }\n  return useRecognizers<UseMoveConfig>({ move: handler }, buildMoveConfig.current(config))\n}\n","import { Handler, UseHoverConfig, EventTypes } from '../types'\nimport { _buildHoverConfig } from './buildConfig'\nimport useRecognizers from './useRecognizers'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { MoveRecognizer } from '../recognizers/MoveRecognizer'\nimport memoize from '../utils/memoize-one'\nimport isEqual from '../utils/react-fast-compare'\nimport { useRef } from 'react'\n\n/**\n * Hover hook.\n *\n * @param handler - the function fired every time the hover gesture updates\n * @param [config={}] - the config object including generic options and hover options\n */\nexport function useHover<K = EventTypes['hover']>(handler: Handler<'hover', K>, config: UseHoverConfig | {} = {}) {\n  RecognizersMap.set('hover', MoveRecognizer)\n  const buildHoverConfig = useRef<any>()\n  if (!buildHoverConfig.current) {\n    buildHoverConfig.current = memoize(_buildHoverConfig, isEqual)\n  }\n  return useRecognizers<UseHoverConfig>({ hover: handler }, buildHoverConfig.current(config))\n}\n","import CoordinatesRecognizer from './CoordinatesRecognizer'\nimport { getGenericEventData, getScrollEventValues } from '../utils/event'\nimport { calculateAllGeometry } from '../utils/math'\nimport { getStartGestureState, getGenericPayload } from './Recognizer'\nimport { addBindings } from '../Controller'\n\nexport class ScrollRecognizer extends CoordinatesRecognizer<'scroll'> {\n  readonly ingKey = 'scrolling'\n  readonly stateKey = 'scroll'\n  debounced = true\n\n  handleEvent = (event: React.UIEvent | UIEvent): void => {\n    if (!this.enabled) return\n\n    this.clearTimeout()\n    this.setTimeout(this.onEnd)\n\n    const values = getScrollEventValues(event, this.transform)\n    this.updateSharedState(getGenericEventData(event))\n\n    if (!this.state._active) {\n      this.updateGestureState({\n        ...getStartGestureState(this, values, event),\n        ...getGenericPayload(this, event, true),\n        initial: this.state.values,\n      })\n\n      const movementDetection = this.getMovement(values)\n      const geometry = calculateAllGeometry(movementDetection.delta!)\n\n      this.updateGestureState(movementDetection)\n      this.updateGestureState(geometry)\n    } else {\n      this.updateGestureState({\n        ...getGenericPayload(this, event),\n        ...this.getKinematics(values, event),\n      })\n    }\n\n    this.fireGestureHandler()\n  }\n\n  onEnd = (): void => {\n    this.clean()\n    if (!this.state._active) return\n    this.updateGestureState({ ...this.getMovement(this.state.values), _active: false, velocities: [0, 0], velocity: 0 })\n    this.fireGestureHandler()\n  }\n\n  addBindings(bindings: any): void {\n    addBindings(bindings, 'onScroll', this.handleEvent)\n  }\n}\n","import { UseScrollConfig, Handler, EventTypes } from '../types'\nimport { _buildScrollConfig } from './buildConfig'\nimport useRecognizers from './useRecognizers'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { ScrollRecognizer } from '../recognizers/ScrollRecognizer'\nimport memoize from '../utils/memoize-one'\nimport isEqual from '../utils/react-fast-compare'\nimport { useRef } from 'react'\n\n/**\n * Scroll hook.\n *\n * @param handler - the function fired every time the scroll gesture updates\n * @param [config={}] - the config object including generic options and scroll options\n */\nexport function useScroll<K = EventTypes['scroll']>(handler: Handler<'scroll', K>, config: UseScrollConfig | {} = {}) {\n  RecognizersMap.set('scroll', ScrollRecognizer)\n  const buildScrollConfig = useRef<any>()\n  if (!buildScrollConfig.current) {\n    buildScrollConfig.current = memoize(_buildScrollConfig, isEqual)\n  }\n  return useRecognizers<UseScrollConfig>({ scroll: handler }, buildScrollConfig.current(config))\n}\n","import useRecognizers from './useRecognizers'\nimport { buildComplexConfig } from './buildConfig'\nimport {\n  InternalConfig,\n  InternalHandlers,\n  UserHandlers,\n  UseGestureConfig,\n  Handlers,\n  EventTypes,\n  AnyGestureEventTypes,\n} from '../types'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { DragRecognizer } from '../recognizers/DragRecognizer'\nimport { MoveRecognizer } from '../recognizers/MoveRecognizer'\nimport { PinchRecognizer } from '../recognizers/PinchRecognizer'\nimport { ScrollRecognizer } from '../recognizers/ScrollRecognizer'\nimport { WheelRecognizer } from '../recognizers/WheelRecognizer'\n\nexport function wrapStart(fn: Function) {\n  return function (this: any, { first }: any) {\n    if (first) fn.apply(this, arguments)\n  }\n}\n\nexport function wrapEnd(fn: Function) {\n  return function (this: any, { last }: any) {\n    if (last) fn.apply(this, arguments)\n  }\n}\n\nconst RE_NOT_NATIVE = /^on(Drag|Wheel|Scroll|Move|Pinch|Hover)/\n\nfunction sortHandlers(handlers: object) {\n  const native: any = {}\n  const handle: any = {}\n  const actions = new Set()\n\n  for (let key in handlers) {\n    if (RE_NOT_NATIVE.test(key)) {\n      actions.add(RegExp.lastMatch)\n      handle[key] = (handlers as any)[key]\n    } else {\n      native[key] = (handlers as any)[key]\n    }\n  }\n\n  return [handle, native, actions]\n}\n\n/**\n * @public\n *\n * The most complete gesture hook, allowing support for multiple gestures.\n *\n * @param {Handlers} handlers - an object with on[Gesture] keys containg gesture handlers\n * @param {UseGestureConfig} [config={}] - the full config object\n * @returns {(...args: any[]) => HookReturnType<Config>}\n */\nexport function useGesture<T extends AnyGestureEventTypes = EventTypes>(\n  _handlers: Handlers<T>,\n  config: UseGestureConfig = {}\n) {\n  const [handlers, nativeHandlers, actions] = sortHandlers(_handlers)\n\n  RecognizersMap.set('drag', DragRecognizer)\n  RecognizersMap.set('hover', MoveRecognizer)\n  RecognizersMap.set('move', MoveRecognizer)\n  RecognizersMap.set('pinch', PinchRecognizer)\n  RecognizersMap.set('scroll', ScrollRecognizer)\n  RecognizersMap.set('wheel', WheelRecognizer)\n\n  const mergedConfig: InternalConfig = buildComplexConfig(config, actions)\n  const internalHandlers: Partial<InternalHandlers> = {}\n\n  if (actions.has('onDrag')) internalHandlers.drag = includeStartEndHandlers(handlers, 'onDrag')\n  if (actions.has('onWheel')) internalHandlers.wheel = includeStartEndHandlers(handlers, 'onWheel')\n  if (actions.has('onScroll')) internalHandlers.scroll = includeStartEndHandlers(handlers, 'onScroll')\n  if (actions.has('onMove')) internalHandlers.move = includeStartEndHandlers(handlers, 'onMove')\n  if (actions.has('onPinch')) internalHandlers.pinch = includeStartEndHandlers(handlers, 'onPinch')\n  if (actions.has('onHover')) internalHandlers.hover = handlers.onHover\n\n  return useRecognizers<UseGestureConfig>(internalHandlers, mergedConfig, nativeHandlers)\n}\n\n/**\n * @private\n *\n * This utility function will integrate start and end handlers into the regular\n * handler function by using first and last conditions.\n *\n * @param {UserHandlersPartial} handlers - the handlers function object\n * @param {HandlerKey} handlerKey - the key for which to integrate start and end handlers\n * @returns\n */\ntype HandlerKey = 'onDrag' | 'onPinch' | 'onWheel' | 'onMove' | 'onScroll' | 'onHover'\nfunction includeStartEndHandlers(handlers: Partial<UserHandlers>, handlerKey: HandlerKey) {\n  const startKey = (handlerKey + 'Start') as keyof UserHandlers\n  const endKey = (handlerKey + 'End') as keyof UserHandlers\n\n  const fn = (state: any) => {\n    let memo: any = undefined\n    if (state.first && startKey in handlers) handlers[startKey]!(state)\n    if (handlerKey in handlers) memo = handlers[handlerKey]!(state)\n    if (state.last && endKey in handlers) handlers[endKey]!(state)\n    return memo\n  }\n  return fn\n}\n"],"names":["addV","v1","v2","map","v","i","subV","calculateDistance","movement","Math","hypot","calculateAllGeometry","delta","dl","alpha","direction","distance","calculateAllKinematics","dt","beta","velocity","velocities","sign","x","Number","minMax","value","min","max","rubberband2","constant","pow","rubberband","dimension","abs","Infinity","rubberbandIfOutOfBounds","position","noop","chainFns","fns","length","result","fn","apply","arguments","ensureVector","fallback","undefined","Error","Array","isArray","assignDefault","Object","assign","valueFn","args","resolveWith","config","resolvers","entries","key","resolver","call","WEBKIT_DISTANCE_SCALE_FACTOR","supportsGestureEvents","GestureEvent","e","supportsTouchEvents","window","getEventTouches","event","type","changedTouches","targetTouches","getPointerIds","pointerId","from","t","identifier","getGenericEventData","buttons","shiftKey","altKey","metaKey","ctrlKey","identity","xy","getPointerEventValues","transform","touchEvents","clientX","clientY","getTwoTouchesEventValues","pointerIds","touches","filter","includes","A","B","dx","dy","cx","cy","angle","atan2","PI","values","origin","getScrollEventValues","currentTarget","scrollX","scrollY","scrollLeft","scrollTop","LINE_HEIGHT","PAGE_HEIGHT","getWheelEventValues","deltaX","deltaY","deltaMode","getWebkitGestureEventValues","scale","rotation","DEFAULT_DRAG_DELAY","DEFAULT_RUBBERBAND","DEFAULT_SWIPE_VELOCITY","DEFAULT_SWIPE_DISTANCE","DEFAULT_SWIPE_DURATION","InternalGestureOptionsNormalizers","threshold","enabled","triggerAllEvents","initial","InternalCoordinatesOptionsNormalizers","axis","lockDirection","bounds","state","left","right","top","bottom","isBrowser","document","createElement","InternalGenericOptionsNormalizers","domTarget","eventOptions","passive","capture","InternalDistanceAngleOptionsNormalizers","_value","_key","distanceBounds","angleBounds","_distanceBounds","D","_angleBounds","InternalDragOptionsNormalizers","useTouch","experimental_preventWindowScrollY","_k","filterTaps","swipeVelocity","swipeDistance","swipeDuration","delay","getInternalGenericOptions","getInternalCoordinatesOptions","getInternalDistanceAngleOptions","getInternalDragOptions","_buildMoveConfig","rest","opts","move","_buildHoverConfig","hover","_buildDragConfig","drag","_buildPinchConfig","pinch","_buildScrollConfig","scroll","_buildWheelConfig","wheel","buildComplexConfig","actions","Set","mergedConfig","has","getInitial","mixed","_active","_blocked","_intentional","_movement","_initial","_bounds","_lastEventType","_dragStarted","_dragPreventScroll","_dragIsTap","_dragDelayed","intentional","offset","lastOffset","previous","first","last","active","timeStamp","startTime","elapsedTime","cancel","canceled","memo","getInitialState","shared","hovering","scrolling","wheeling","dragging","moving","pinching","down","locked","_pointerId","vxvy","tap","swipe","_pointerIds","da","vdva","turns","RecognizersMap","Map","Recognizer","controller","callback","ms","clearTimeout","timeouts","stateKey","setTimeout","forceFlag","debounced","clean","prev_active","next_active","ingKey","size","touchIds","mapStateValues","pointerLockElement","newMemo","handler","updateSharedState","sharedState","updateGestureState","gestureState","checkIntentionality","getMovement","T","wasIntentional","prevMovement","M","getInternalMovement","_T","i0","getIntentionalDisplacement","i1","intentionalityCheck","_rubberband","computeRubberband","handlers","Vx","Vy","Rx","Ry","X1","X2","Y1","Y2","getGenericPayload","isStartEvent","getStartGestureState","_state","partial","func","Controller","classes","bindings","RecognizerClass","addBindings","nativeRefs","updateDomListeners","getPropsListener","bind","getDomTargetFromConfig","removeListeners","takeAll","domListeners","forEach","clearAllWindowListeners","windowListeners","addEventIds","idList","add","removeEventIds","el","clearWindowListeners","options","updateWindowListeners","listeners","addListeners","name","slice","toLowerCase","push","props","captureString","fnsArray","array","splice","current","eventName","eventHandler","addEventListener","removeEventListener","useRecognizers","nativeHandlers","resolveClasses","React","useMemo","useEffect","effect","deprecationNoticeForDomTarget","process","env","NODE_ENV","console","warn","internalHandlers","get","CoordinatesRecognizer","absX","absY","getKinematics","TAP_DISTANCE_THRESHOLD","persistEvent","persist","DragRecognizer","target","setPointerCapture","_dragTarget","_dragPointerId","hasPointerCapture","releasePointerCapture","cancelable","preventDefault","getEventId","preventScroll","startDrag","setStartState","shouldPreventWindowScrollY","setUpWindowScrollDetection","setUpDelayedDragTrigger","isValidEvent","movementX","movementY","kinematics","genericEventData","genericPayload","realDistance","fireGestureHandler","vx","vy","mx","my","ix","iy","svx","svy","sx","sy","sd","endState","stopPropagation","onDragIsStart","onCancel","onDragStart","onDragChange","onDragEnd","onClick","memoizeOne","resultFn","isEqual","lastThis","lastArgs","lastResult","calledOnce","memoized","newArgs","equal","a","b","constructor","keys","it","next","done","RegExp","source","flags","valueOf","prototype","toString","hasOwnProperty","Element","$$typeof","error","message","match","useDrag","set","buildDragConfig","useRef","memoize","DistanceAngleRecognizer","prev_a","d","delta_a","next_turns","PinchRecognizer","every","id","delta_d","prev_d","wheelShouldRun","onWheelEnd","onWheelStart","onWheelChange","getWheelValuesFromEvent","onGestureStart","onGestureChange","onGestureEnd","onPinchStart","onPinchChange","onPinchEnd","onWheel","usePinch","buildPinchConfig","WheelRecognizer","onEnd","geometry","handleEvent","useWheel","buildWheelConfig","MoveRecognizer","onMoveEnd","onMoveStart","onMoveChange","hoverTransform","onMove","onPointerEnter","onPointerLeave","useMove","buildMoveConfig","useHover","buildHoverConfig","ScrollRecognizer","movementDetection","useScroll","buildScrollConfig","RE_NOT_NATIVE","sortHandlers","native","handle","test","lastMatch","useGesture","_handlers","includeStartEndHandlers","onHover","handlerKey","startKey","endKey"],"mappings":"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"}